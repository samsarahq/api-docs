{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "\u003cstyle type=\"text/css\"\u003e\nn {\n    padding: 1em;\n    width: 100%;\n    display: block;\n    margin: 28px 0;\n}\nn.info {\n    background-color: rgba(0, 51, 160, 0.1);\n}\nn.warning {\n    background-color: #fdf6e3;\n}\ni:before {\n    margin-right: 6px;\n}\nnh {\n    font-size: 1.5rem;\n    font-weight: 700;\n    line-height: 1.1;\n    display: block;\n}\nnb {\n    margin-top: 10px;\n    padding-left: 22px;\n    display: block;\n}\n\u003c/style\u003e\n\n# Overview\n\n\u003cn class=\"info\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-info-circle\"\u003e\u003c/i\u003e\nSomething new!\n\u003c/nh\u003e\n\u003cnb\u003e\nWelcome Samsara's new and improved API. Check out our FAQ [here](https://developers.samsara.com/docs/introducing-our-next-generation-api) to see what's changed and learn how to get started.\u003cbr\u003e\n\u003cbr\u003e\nWant to access the legacy API docs? You can find them [here](https://www.samsara.com/api-legacy).\u003cbr\u003e\n\u003cbr\u003e\n*Note: Because this is a new set of APIs, we have not transitioned all endpoints over to this standard. Endpoints that still use the legacy standards are indicated in the reference documentation. If you can't find an API that you're looking for, we encourage you to look for it in our [legacy API docs](https://www.samsara.com/api-legacy) as we continue to transition all endpoints over. Check back here for updates!*\u003cbr\u003e\n\u003cbr\u003e\nSubmit your feedback [here](https://forms.gle/r4bs6HQshQAvBuwv6)!\n\u003c/nb\u003e\n\u003c/n\u003e\n\nSamsara provides API endpoints so that you can build powerful applications and custom solutions with sensor data. Samsara has endpoints available to track and analyze sensors, vehicles, and entire fleets.\n\nThe Samsara API is a [RESTful API](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard [HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol) authentication, verbs, and response codes, and it returns [JSON](http://www.json.org/) response bodies. If you're familiar with what you can build with a REST API, then this will be your go-to API reference.\n\nVisit [developers.samsara.com](https://developers.samsara.com) to find getting started guides and an API overview.\n\nIf you have any questions, please visit https://samsara.com/help.\n\n## Endpoints\n\nAll our APIs can be accessed through HTTP requests to URLs like:\n\n```\nhttps://api.samsara.com/\u003cendpoint\u003e\n```\n\nFor EU customers, this URL will be:\n\n```\nhttps://api.eu.samsara.com/\u003cendpoint\u003e\n```\n\n\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nNote\n\u003c/nh\u003e\n\u003cnb\u003e\nLegacy endpoints will have the URL: `https://api.samsara.com/v1/\u003cendpoint\u003e` or `https://api.eu.samsara.com/v1/\u003cendpoint\u003e`\n\u003c/nb\u003e\n\u003c/n\u003e\n\n## Authentication\n\nTo authenticate your API request you will need to include your secret token. You can manage your API tokens in the [Dashboard](https://cloud.samsara.com). They are visible under `Settings-\u003eOrganization-\u003eAPI Tokens`.\n\nYour API tokens carry many privileges, so be sure to keep them secure. Do not share your secret API tokens in publicly accessible areas such as GitHub, client-side code, and so on.\n\nAuthentication to the API is performed via Bearer Token in the HTTP Authorization header. Provide your API token as the `access_token` value in an `Authorization: Bearer` header. You do not need to provide a password:\n\n```curl\nAuthorization: Bearer {access_token}\n```\n\nAll API requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS). Calls made over plain HTTP or without authentication will fail.\n\n### OAuth2\nIf building an application for our marketplace, our API is accessible via. OAuth2 as well.\n\n| Type  | Value |\n| ------------- |:-------------:|\n| Security scheme      | OAuth2                                   |\n| OAuth2 Flow          | accessCode                               |\n| Authorization URL    | https://api.samsara.com/oauth2/authorize |\n| Token URL            | https://api.samsara.com/oauth2/token     |\n\n\n\n## Common Patterns\n\nYou can find more info about request methods, response codes, error codes, versioning, pagination, timestamps, and mini-objects [here](https://developers.samsara.com/docs/common-structures).\n",
    "title": "Samsara API",
    "version": "2021-06-09"
  },
  "host": "api.samsara.com",
  "paths": {
    "/addresses": {
      "get": {
        "description": "Returns a list of all addresses in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Addresses"
        ],
        "summary": "List all addresses",
        "operationId": "listAddresses",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A filter on data to have a created at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "createdAfterTime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all addresses in the organization",
            "schema": {
              "$ref": "#/definitions/ListAddressesResponse"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "addressTypes": [
                      "yard"
                    ],
                    "contacts": [
                      {
                        "firstName": "Jane",
                        "id": "22408",
                        "lastName": "Jones"
                      }
                    ],
                    "createdAtTime": "2019-05-18T20:27:35Z",
                    "externalIds": {
                      "maintenanceId": "250020",
                      "payrollId": "ABFS18600"
                    },
                    "formattedAddress": "350 Rhode Island St, San Francisco, CA",
                    "geofence": {
                      "circle": {
                        "latitude": 37.765363,
                        "longitude": -122.4029238,
                        "radiusMeters": 25
                      },
                      "polygon": {
                        "vertices": [
                          {
                            "latitude": 37.765363,
                            "longitude": -122.403098
                          },
                          {
                            "latitude": 38.765363,
                            "longitude": -122.403098
                          },
                          {
                            "latitude": 37.765363,
                            "longitude": -123.403098
                          }
                        ]
                      }
                    },
                    "id": "22408",
                    "latitude": 37.765363,
                    "longitude": -122.4029238,
                    "name": "Samsara HQ",
                    "notes": "Hours of operation: 8am - 6pm; Truck entrance on the Rhode Island street side.",
                    "tags": [
                      {
                        "id": "3914",
                        "name": "East Coast",
                        "parentTagId": "4815"
                      }
                    ]
                  }
                ],
                "pagination": {
                  "endCursor": "MjkY",
                  "hasNextPage": true
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new address in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Addresses"
        ],
        "summary": "Create an address",
        "operationId": "createAddress",
        "parameters": [
          {
            "description": "The address to create.",
            "name": "address",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created address object with ID.",
            "schema": {
              "$ref": "#/definitions/AddressResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/addresses/{id}": {
      "get": {
        "description": "Returns a specific address. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Addresses"
        ],
        "summary": "Retrieve an address",
        "operationId": "getAddress",
        "responses": {
          "200": {
            "description": "An Address.",
            "schema": {
              "$ref": "#/definitions/AddressResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a specific address. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Addresses"
        ],
        "summary": "Delete an address",
        "operationId": "deleteAddress",
        "responses": {
          "204": {
            "description": "A successful DELETE response is a 204 with no content.",
            "schema": {
              "$ref": "#/definitions/standardDeleteResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update a specific address. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Addresses"
        ],
        "summary": "Update an address",
        "operationId": "updateAddress",
        "parameters": [
          {
            "description": "The address fields to update.",
            "name": "address",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated address object with ID.",
            "schema": {
              "$ref": "#/definitions/AddressResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the Address. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/beta/attributes": {
      "get": {
        "description": "Fetch all attributes in an organization associated with either drivers or assets. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] List all attributes by entity type",
        "operationId": "getAttributesByEntityType",
        "parameters": [
          {
            "enum": [
              "driver",
              "asset"
            ],
            "type": "string",
            "description": "Denotes the type of entity, driver or asset.",
            "name": "entityType",
            "in": "query",
            "required": true
          },
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "All attributes in an organization for an entity type",
            "schema": {
              "$ref": "#/definitions/GetAttributesByEntityTypeResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new attribute in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Create an attribute",
        "operationId": "createAttribute",
        "parameters": [
          {
            "description": "The attribute to create.",
            "name": "attribute",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAttributeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created attribute object with ID.",
            "schema": {
              "$ref": "#/definitions/AttributeExpandedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/beta/attributes/{id}": {
      "get": {
        "description": "Fetch an attribute by id, including all of its applications. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Retrieve an attribute",
        "operationId": "getAttribute",
        "parameters": [
          {
            "enum": [
              "driver",
              "asset"
            ],
            "type": "string",
            "description": "Denotes the type of entity, driver or asset.",
            "name": "entityType",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The attribute corresponding to request id.",
            "schema": {
              "$ref": "#/definitions/AttributeExpandedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete an attribute by id, including all of its applications. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Deleting an attribute",
        "operationId": "deleteAttribute",
        "parameters": [
          {
            "enum": [
              "driver",
              "asset"
            ],
            "type": "string",
            "description": "Denotes the type of entity, driver or asset.",
            "name": "entityType",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful DELETE response is a 204 with no content.",
            "schema": {
              "$ref": "#/definitions/standardDeleteResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Updates an attribute in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Update an attribute",
        "operationId": "updateAttribute",
        "parameters": [
          {
            "description": "The attribute to update.",
            "name": "attribute",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAttributeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created attribute object with ID.",
            "schema": {
              "$ref": "#/definitions/AttributeExpandedResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Samsara-provided UUID of the attribute.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/beta/fleet/drivers/efficiency": {
      "get": {
        "description": "Get all drivers' efficiencies. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] List driver efficiency",
        "operationId": "getDriverEfficiency",
        "parameters": [
          {
            "enum": [
              "active",
              "deactivated"
            ],
            "type": "string",
            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).",
            "name": "driverActivationStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of driver IDs. Cannot be used with tag filtering or driver status. Example: `driverIds=1234,5678`",
            "name": "driverIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "Filters summary to drivers based on this comma-separated list of tag IDs. Data from all the drivers' respective vehicles will be included in the summary, regardless of which tag the vehicle is associated with. Should not be provided in addition to `driverIds`. Example: driverTagIds=1234,5678",
            "name": "driverTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "Filters like `driverTagIds` but includes descendants of all the given parent tags. Should not be provided in addition to `driverIds`. Example: `driverParentTagIds=1234,5678`",
            "name": "driverParentTagIds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "A start time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `startTime` is 2020-03-17T12:06:19Z then the results will include data starting from 2020-03-17T12:00:00Z. The provided start time cannot be in the future. Start time can be at most 31 days before the end time. If the start time is within the last hour, the results will be empty. Default: 24 hours prior to endTime.",
            "name": "startTime",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "An end time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `endTime` is 2020-03-17T12:06:19Z then the results will include data up until 2020-03-17T12:00:00Z. The provided end time cannot be in the future. End time can be at most 31 days after the start time.   Default: The current time truncated to the hour mark.",
            "name": "endTime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all drivers' efficiencies",
            "schema": {
              "$ref": "#/definitions/DriverEfficienciesResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/beta/fleet/equipment/{id}": {
      "patch": {
        "description": "Update an equipment.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Update an equipment",
        "operationId": "patchEquipment",
        "parameters": [
          {
            "type": "string",
            "description": "The unique Samsara ID of the Equipment. This is automatically generated when the Equipment object is created. It cannot be changed.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "PatchEquipmentRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/EquipmentPatchEquipmentBadRequestErrorResponseBody"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "The unique Samsara ID of the Equipment. This is automatically generated when the Equipment object is created. It cannot be changed.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/beta/fleet/trailers": {
      "get": {
        "description": "List all trailers.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] List all trailers",
        "operationId": "listTrailers",
        "parameters": [
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "default": 512,
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/TrailersListTrailersResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/TrailersListTrailersUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/TrailersListTrailersNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/TrailersListTrailersMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/TrailersListTrailersTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/TrailersListTrailersInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/TrailersListTrailersNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/TrailersListTrailersBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/TrailersListTrailersServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/TrailersListTrailersGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/TrailersListTrailersBadRequestErrorResponseBody"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new trailer asset.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Creates a new trailer asset",
        "operationId": "createTrailer",
        "parameters": [
          {
            "name": "CreateTrailerRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/TrailersCreateTrailerBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/beta/fleet/trailers/stats": {
      "get": {
        "description": "Returns the last known stats of all trailers at the given `time`. If no `time` is specified, the current time is used.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Get trailer stats",
        "operationId": "getTrailerStatsSnapshot",
        "parameters": [
          {
            "type": "string",
            "description": "The stat types you want this endpoint to return information on.\n\nYou may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.",
            "name": "types",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`",
            "name": "trailerIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 Format. Millisecond precision and timezones are supported.",
            "name": "time",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsSnapshotResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsSnapshotUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsSnapshotNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsSnapshotMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsSnapshotTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsSnapshotInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsSnapshotNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsSnapshotBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsSnapshotServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsSnapshotGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsSnapshotBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/beta/fleet/trailers/stats/feed": {
      "get": {
        "description": "Follow a feed of trailer stats.\n\nThe first call to this endpoint will provide the most recent stats for each trailer and an `endCursor`.\n\nProviding the `endCursor` value to the `after` query parameter will fetch all updates since the previous API call.\n\nIf `hasNextPage` is false, no new data is immediately available. Please wait a minimum of 5 seconds before making a subsequent request.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Get trailer stats feed",
        "operationId": "getTrailerStatsFeed",
        "parameters": [
          {
            "type": "string",
            "description": "The stat types you want this endpoint to return information on.\n\nYou may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.",
            "name": "types",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`",
            "name": "trailerIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Decorations add to the primary stats listed in the `types` parameter. For example, if you wish to know the trailer's location whenever the odometer updates, you may set `types=gpsOdometerMeters\u0026decorations=gps`.\n\nYou may list **up to 2** types using comma-separated format. If multiple stats are listed in the types parameter, the decorations will be added to each type. For example: `types=reeferStateZone1,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters\u0026decorations=gps` will list GPS decorations for each reeferStateZone1 reading, each reeferAmbientAirTemperatureMilliC reding, and gpsOdometerMeters reading.\n\nNote that decorations may significantly increase the response payload size.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.",
            "name": "decorations",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsFeedResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsFeedUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsFeedNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsFeedMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsFeedTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsFeedInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsFeedNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsFeedBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsFeedServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsFeedGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsFeedBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/beta/fleet/trailers/stats/history": {
      "get": {
        "description": "Returns trailer stats during the given time range for all trailers. This can be optionally filtered by tags or specific trailer IDs.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Get trailer stats history",
        "operationId": "getTrailerStatsHistory",
        "parameters": [
          {
            "type": "string",
            "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "The stat types you want this endpoint to return information on.\n\nYou may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.",
            "name": "types",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`",
            "name": "trailerIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Decorations add to the primary stats listed in the `types` parameter. For example, if you wish to know the trailer's location whenever the odometer updates, you may set `types=gpsOdometerMeters\u0026decorations=gps`.\n\nYou may list **up to 2** types using comma-separated format. If multiple stats are listed in the types parameter, the decorations will be added to each type. For example: `types=reeferStateZone1,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters\u0026decorations=gps` will list GPS decorations for each reeferStateZone1 reading, each reeferAmbientAirTemperatureMilliC reding, and gpsOdometerMeters reading.\n\nNote that decorations may significantly increase the response payload size.\n\n* `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.\n* `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.\n* `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.\n* `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.\n* `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.\n* `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.\n* `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.\n* `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.\n* `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)\n* `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.\n* `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.",
            "name": "decorations",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsHistoryResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsHistoryUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsHistoryNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsHistoryMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsHistoryTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsHistoryInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsHistoryNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsHistoryBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsHistoryServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsHistoryGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/TrailerStatsGetTrailerStatsHistoryBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/beta/fleet/trailers/{id}": {
      "get": {
        "description": "Retrieve a trailer with given ID.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Retrieve a trailer",
        "operationId": "getTrailer",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the trailer. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: \"key:value\". For example, \"maintenanceId:250020\".",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/TrailersGetTrailerResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/TrailersGetTrailerUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/TrailersGetTrailerNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/TrailersGetTrailerMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/TrailersGetTrailerTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/TrailersGetTrailerInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/TrailersGetTrailerNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/TrailersGetTrailerBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/TrailersGetTrailerServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/TrailersGetTrailerGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/TrailersGetTrailerBadRequestErrorResponseBody"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a trailer with the given ID.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Delete a trailer",
        "operationId": "deleteTrailer",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier for the trailer to delete.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/TrailersDeleteTrailerUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/TrailersDeleteTrailerNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/TrailersDeleteTrailerMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/TrailersDeleteTrailerTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/TrailersDeleteTrailerInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/TrailersDeleteTrailerNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/TrailersDeleteTrailerBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/TrailersDeleteTrailerServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/TrailersDeleteTrailerGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/TrailersDeleteTrailerBadRequestErrorResponseBody"
            }
          }
        }
      },
      "patch": {
        "description": "Update a trailer.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Update a trailer",
        "operationId": "updateTrailer",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier for the trailer to update.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "UpdateTrailerRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/TrailersUpdateTrailerBadRequestErrorResponseBody"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the trailer. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: \"key:value\". For example, \"maintenanceId:250020\".",
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "Unique identifier for the trailer to delete.",
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "Unique identifier for the trailer to update.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/beta/fleet/vehicles/{id}/immobilizer": {
      "patch": {
        "description": "Update the engine immobilizer state of a vehicle. This requires an engine immobilizer to be installed on the vehicle gateway. The desired engine immobilizer state will be set on the vehicle when the vehicle gateway is online, and the engine is not running.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Beta APIs"
        ],
        "summary": "[beta] Update engine immobilizer state of a vehicle.",
        "operationId": "updateEngineImmobilizerState",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Vehicle ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "UpdateEngineImmobilizerStateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/EngineImmobilizerUpdateEngineImmobilizerStateBadRequestErrorResponseBody"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "description": "Vehicle ID",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/contacts": {
      "get": {
        "description": "Returns a list of all contacts in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Contacts"
        ],
        "summary": "List all contacts",
        "operationId": "listContacts",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all contacts",
            "schema": {
              "$ref": "#/definitions/ListContactsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Add a contact to the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Contacts"
        ],
        "summary": "Create a contact",
        "operationId": "createContact",
        "parameters": [
          {
            "description": "The contact create parameters.",
            "name": "contact",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact was successfully added.",
            "schema": {
              "$ref": "#/definitions/ContactResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "description": "Get a specific contact's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve a contact",
        "operationId": "getContact",
        "responses": {
          "200": {
            "description": "Returns the specified contact.",
            "schema": {
              "$ref": "#/definitions/ContactResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete the given contact. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact",
        "operationId": "deleteContact",
        "responses": {
          "204": {
            "description": "A successful DELETE response is a 204 with no content.",
            "schema": {
              "$ref": "#/definitions/standardDeleteResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update a specific contact's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Contacts"
        ],
        "summary": "Update a contact",
        "operationId": "updateContact",
        "parameters": [
          {
            "description": "Updates to the contact.",
            "name": "contact",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated contact object with given ID.",
            "schema": {
              "$ref": "#/definitions/ContactResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Unique identifier for the contact.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/fleet/carrier-proposed-assignments": {
      "get": {
        "description": "Show the assignments that are active for drivers and that would currently be visible to them in the driver app. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Carrier Proposed Assignments"
        ],
        "summary": "Retrieve assignments",
        "operationId": "listCarrierProposedAssignments",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "If specified, limits the results to those for these drivers. e.g. `driverIds=1,2,3`",
            "name": "driverIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, shows assignments that will be active at this time. Defaults to now, which would show current active assignments. In RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "activeTime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the assignments that drivers would see in the future, if any.",
            "schema": {
              "$ref": "#/definitions/ListCarrierProposedAssignmentResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new assignment that a driver can later use. Each driver can only have one future assignment. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Carrier Proposed Assignments"
        ],
        "summary": "Create an assignment",
        "operationId": "createCarrierProposedAssignment",
        "parameters": [
          {
            "description": "The assignment to create.",
            "name": "carrierProposedAssignment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateCarrierProposedAssignmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the created assignment",
            "schema": {
              "$ref": "#/definitions/CarrierProposedAssignmentResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/carrier-proposed-assignments/{id}": {
      "delete": {
        "description": "Permanently delete an assignment. You can only delete assignments that are not yet active. To override a currently active assignment, create a new empty one, instead. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Carrier Proposed Assignments"
        ],
        "summary": "Delete an assignment",
        "operationId": "deleteCarrierProposedAssignment",
        "responses": {
          "204": {
            "description": "A successful DELETE response is a 204 with no content.",
            "schema": {
              "$ref": "#/definitions/standardDeleteResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the assignment.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/fleet/defects/history": {
      "get": {
        "description": "Returns a list of DVIR defects in an organization, filtered by creation time. The maximum time period you can query for is 30 days. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Maintenance"
        ],
        "summary": "Get all defects",
        "operationId": "getDvirDefects",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). *The maximum time period you can query for is 30 days.*",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). *The maximum time period you can query for is 30 days.*",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "A filter on the data based on resolution status. Example: `isResolved=true`",
            "name": "isResolved",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all DVIR defects in the organization",
            "schema": {
              "$ref": "#/definitions/DefectsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/defects/{id}": {
      "patch": {
        "description": "Updates a given defect. Can be used to resolve a defect by marking its `isResolved` field to `true`. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Maintenance"
        ],
        "summary": "Update a defect",
        "operationId": "updateDvirDefect",
        "parameters": [
          {
            "description": "The DVIR defect fields to update.",
            "name": "defect",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DefectPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the modified defect entity",
            "schema": {
              "$ref": "#/definitions/DefectResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the defect.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/fleet/document-types": {
      "get": {
        "description": "Returns a list of the organization document types. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDriverDocumentTypesByOrgId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Documents"
        ],
        "summary": "Fetch document types",
        "operationId": "getDocumentTypes",
        "parameters": [
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/DocumentTypesGetDocumentTypesResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/DocumentTypesGetDocumentTypesUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/DocumentTypesGetDocumentTypesNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/DocumentTypesGetDocumentTypesMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/DocumentTypesGetDocumentTypesTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/DocumentTypesGetDocumentTypesInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/DocumentTypesGetDocumentTypesNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/DocumentTypesGetDocumentTypesBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/DocumentTypesGetDocumentTypesServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/DocumentTypesGetDocumentTypesGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/DocumentTypesGetDocumentTypesBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/documents": {
      "get": {
        "description": "Get all documents for the given time range. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDriverDocumentsByOrgId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Documents"
        ],
        "summary": "Fetch all documents",
        "operationId": "getDocuments",
        "parameters": [
          {
            "type": "string",
            "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID of the document template type.",
            "name": "documentTypeId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Query by document creation time (`created`) or updated time (`updated`). Defaults to `created`.",
            "name": "queryBy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentsBadRequestErrorResponseBody"
            }
          }
        }
      },
      "post": {
        "description": "Creates a single document. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/createDriverDocument).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Documents"
        ],
        "summary": "Create document",
        "operationId": "postDocument",
        "parameters": [
          {
            "name": "PostDocumentRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/DocumentsPostDocumentBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/documents/pdfs": {
      "post": {
        "description": "Request creation of a document PDF. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Documents"
        ],
        "summary": "Create a document PDF",
        "operationId": "generateDocumentPdf",
        "parameters": [
          {
            "description": "Specifies the document for which to generate a PDF.",
            "name": "document",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DocumentPdfGenerationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created PDF generation job.",
            "schema": {
              "$ref": "#/definitions/DocumentPdfGenerationResponse"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/documents/pdfs/{id}": {
      "get": {
        "description": "Returns generation job status and download URL for a PDF. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Documents"
        ],
        "summary": "Query a document PDF",
        "operationId": "getDocumentPdf",
        "responses": {
          "200": {
            "description": "Document PDF job status and download URL.",
            "schema": {
              "$ref": "#/definitions/DocumentPdfQueryResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the pdf.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/fleet/documents/{id}": {
      "get": {
        "description": "Returns a single document. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDriverDocumentByIdAndDriverId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Documents"
        ],
        "summary": "Fetch document",
        "operationId": "getDocument",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the document",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/DocumentsGetDocumentBadRequestErrorResponseBody"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a single document. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/deleteDriverDocumentByIdAndDriverId).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Documents"
        ],
        "summary": "Delete document",
        "operationId": "deleteDocument",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the document to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/DocumentsDeleteDocumentUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/DocumentsDeleteDocumentNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/DocumentsDeleteDocumentMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/DocumentsDeleteDocumentTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/DocumentsDeleteDocumentInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/DocumentsDeleteDocumentNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/DocumentsDeleteDocumentBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/DocumentsDeleteDocumentServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/DocumentsDeleteDocumentGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/DocumentsDeleteDocumentBadRequestErrorResponseBody"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the document",
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "ID of the document to delete",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/fleet/drivers": {
      "get": {
        "description": "Get all drivers in organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Drivers"
        ],
        "summary": "List all drivers",
        "operationId": "listDrivers",
        "parameters": [
          {
            "enum": [
              "active",
              "deactivated"
            ],
            "type": "string",
            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).",
            "name": "driverActivationStatus",
            "in": "query"
          },
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A filter on data to have an updated at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "updatedAfterTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A filter on data to have a created at time after or equal to this specified time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "createdAfterTime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all driver objects.",
            "schema": {
              "$ref": "#/definitions/ListDriversResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Add a driver to the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Drivers"
        ],
        "summary": "Create a driver",
        "operationId": "createDriver",
        "parameters": [
          {
            "description": "The driver to create.",
            "name": "driver",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDriverRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created driver object, with Samsara-generated ID.",
            "schema": {
              "$ref": "#/definitions/DriverResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/drivers/tachograph-activity/history": {
      "get": {
        "description": "Returns all known tachograph activity for all specified drivers in the time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Tachograph (EU Only)"
        ],
        "summary": "Get driver tachograph activity",
        "operationId": "getDriverTachographActivity",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. It can't be more than 30 days past startTime. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`",
            "name": "driverIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all driver tachograph activities in a specified time range.",
            "schema": {
              "$ref": "#/definitions/DriverTachographActivityResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/drivers/tachograph-files/history": {
      "get": {
        "description": "Returns all known tachograph files for all specified drivers in the time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Tachograph (EU Only)"
        ],
        "summary": "Get tachograph driver files",
        "operationId": "getDriverTachographFiles",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`",
            "name": "driverIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all driver tachograph files in a specified time range.",
            "schema": {
              "$ref": "#/definitions/TachographDriverFilesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/drivers/vehicle-assignments": {
      "get": {
        "description": "Get all vehicle assignments for the requested drivers in the requested time range. The only type of assignment supported right now are assignments created through the driver app.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Driver Vehicle-Assignments"
        ],
        "summary": "Get all vehicles assigned to a set of drivers",
        "operationId": "getDriversVehicleAssignments",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`",
            "name": "driverIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days.",
            "name": "startTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days.",
            "name": "endTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of driver tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of driver parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "enum": [
              "active",
              "deactivated"
            ],
            "type": "string",
            "default": "active",
            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).",
            "name": "driverActivationStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/DriversVehicleAssignmentsGetDriversVehicleAssignmentsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/DriversVehicleAssignmentsGetDriversVehicleAssignmentsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/DriversVehicleAssignmentsGetDriversVehicleAssignmentsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/DriversVehicleAssignmentsGetDriversVehicleAssignmentsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/DriversVehicleAssignmentsGetDriversVehicleAssignmentsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/DriversVehicleAssignmentsGetDriversVehicleAssignmentsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/DriversVehicleAssignmentsGetDriversVehicleAssignmentsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/DriversVehicleAssignmentsGetDriversVehicleAssignmentsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/DriversVehicleAssignmentsGetDriversVehicleAssignmentsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/DriversVehicleAssignmentsGetDriversVehicleAssignmentsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/DriversVehicleAssignmentsGetDriversVehicleAssignmentsBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/drivers/{id}": {
      "get": {
        "description": "Get information about a driver. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Drivers"
        ],
        "summary": "Retrieve a driver",
        "operationId": "getDriver",
        "responses": {
          "200": {
            "description": "Returns the specified driver.",
            "schema": {
              "$ref": "#/definitions/DriverResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update a specific driver's information. This can also be used to activate or de-activate a given driver by setting the driverActivationStatus field. If the driverActivationStatus field is 'deactivated' then the user can also specify the deactivatedAtTime. The deactivatedAtTime cannot be more than 6 months in the past and must not come before the dirver's latest active HOS log. It will be considered an error if deactivatedAtTime is provided with a driverActivationStatus of active. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Drivers"
        ],
        "summary": "Update a driver",
        "operationId": "updateDriver",
        "parameters": [
          {
            "description": "Updates to the driver properties.",
            "name": "driver",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDriverRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated driver object, with ID.",
            "schema": {
              "$ref": "#/definitions/DriverResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the driver. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/fleet/dvirs": {
      "post": {
        "description": "Creates a new mechanic DVIR in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Maintenance"
        ],
        "summary": "Create a mechanic DVIR",
        "operationId": "createDvir",
        "parameters": [
          {
            "description": "The DVIR to create.",
            "name": "dvir",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateDvirRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created DVIR.",
            "schema": {
              "$ref": "#/definitions/DvirResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/dvirs/history": {
      "get": {
        "description": "Returns a list of all DVIRs in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Maintenance"
        ],
        "summary": "Get all DVIRs",
        "operationId": "getDvirHistory",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of all DVIRs in the organization",
            "schema": {
              "$ref": "#/definitions/DvirsListResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/dvirs/{id}": {
      "patch": {
        "description": "Resolves a given DVIR by marking its `isResolved` field to `true`. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Maintenance"
        ],
        "summary": "Resolve a DVIR",
        "operationId": "updateDvir",
        "parameters": [
          {
            "description": "The dvir fields to update.",
            "name": "dvir",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateDvirRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated dvir object with ID.",
            "schema": {
              "$ref": "#/definitions/DvirResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the DVIR.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/fleet/equipment": {
      "get": {
        "description": "Returns a list of all equipment in an organization. Equipment objects represent powered assets connected to a [Samsara AG24](https://www.samsara.com/products/models/ag24) via an APWR, CAT, or J1939 cable. They are automatically created with a unique Samsara Equipment ID whenever an AG24 is activated in your organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Equipment"
        ],
        "summary": "List all equipment",
        "operationId": "listEquipment",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all equipment objects, and pagination information",
            "schema": {
              "$ref": "#/definitions/EquipmentListResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/equipment/locations": {
      "get": {
        "description": "Returns last known locations for all equipment. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Equipment"
        ],
        "summary": "Get most recent locations for all equipment",
        "operationId": "getEquipmentLocations",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
            "name": "equipmentIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The most recent equipment locations and pagination information",
            "schema": {
              "$ref": "#/definitions/EquipmentLocationsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/equipment/locations/feed": {
      "get": {
        "description": "Follow a continuous feed of all equipment locations from Samsara AG24s.\n\nYour first call to this endpoint will provide you with the most recent location for each unit of equipment and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment location updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. We'd suggest waiting a minimum of 5 seconds before requesting updates. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Equipment"
        ],
        "summary": "Follow feed of equipment locations",
        "operationId": "getEquipmentLocationsFeed",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
            "name": "equipmentIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The feed of equipment locations and pagination information",
            "schema": {
              "$ref": "#/definitions/EquipmentLocationsListResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/equipment/locations/history": {
      "get": {
        "description": "Returns historical equipment locations during the given time range. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Equipment"
        ],
        "summary": "Get historical equipment locations",
        "operationId": "getEquipmentLocationsHistory",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
            "name": "equipmentIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Historical equipment locations and pagination information",
            "schema": {
              "$ref": "#/definitions/EquipmentLocationsListResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/equipment/stats": {
      "get": {
        "description": "Returns the last known stats for all equipment. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Equipment"
        ],
        "summary": "Get most recent stats for all equipment",
        "operationId": "getEquipmentStats",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
            "name": "equipmentIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "gatewayEngineStates",
                "obdEngineStates",
                "fuelPercents",
                "engineRpm",
                "gatewayEngineSeconds",
                "obdEngineSeconds",
                "gatewayJ1939EngineSeconds",
                "gpsOdometerMeters"
              ],
              "type": "string",
              "format": "string"
            },
            "collectionFormat": "csv",
            "description": "The type of equipment stat you want to query. Currently, you may only submit one type.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG24 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG24 was activated, and a manual odometer offset provided in the Samsara cloud dashboard.",
            "name": "types",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The most recent equipment stats and pagination information",
            "schema": {
              "$ref": "#/definitions/EquipmentStatsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/equipment/stats/feed": {
      "get": {
        "description": "Follow a continuous feed of all equipment stats from Samsara AG24s.\n\nYour first call to this endpoint will provide you with the most recent stats for each unit of equipment and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to subsequent calls via the `after` parameter. The response will contain any equipment stats updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. Each stat type has a different refresh rate, but in general we'd suggest waiting a minimum of 5 seconds before requesting updates. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Equipment"
        ],
        "summary": "Follow a feed of equipment stats",
        "operationId": "getEquipmentStatsFeed",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
            "name": "equipmentIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "gatewayEngineStates",
                "obdEngineStates",
                "fuelPercents",
                "engineRpm",
                "gatewayEngineSeconds",
                "obdEngineSeconds",
                "gatewayJ1939EngineSeconds",
                "gpsOdometerMeters"
              ],
              "type": "string",
              "format": "string"
            },
            "collectionFormat": "csv",
            "description": "The type of equipment stat you want to query. Currently, you may only submit one type.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG24 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG24 was activated, and a manual odometer offset provided in the Samsara cloud dashboard.",
            "name": "types",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The feed of equipment stats and pagination information",
            "schema": {
              "$ref": "#/definitions/EquipmentStatsListResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/equipment/stats/history": {
      "get": {
        "description": "Returns historical equipment status during the given time range. This can be optionally filtered by tags or specific equipment IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Equipment"
        ],
        "summary": "Get historical equipment stats",
        "operationId": "getEquipmentStatsHistory",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of equipment IDs. Example: `equipmentIds=1234,5678`",
            "name": "equipmentIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "gatewayEngineStates",
                "obdEngineStates",
                "fuelPercents",
                "engineRpm",
                "gatewayEngineSeconds",
                "obdEngineSeconds",
                "gatewayJ1939EngineSeconds",
                "gpsOdometerMeters"
              ],
              "type": "string",
              "format": "string"
            },
            "collectionFormat": "csv",
            "description": "The type of equipment stat you want to query. Currently, you may only submit one type.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG24 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG24 was activated, and a manual odometer offset provided in the Samsara cloud dashboard.",
            "name": "types",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Historical equipment stats and pagination information",
            "schema": {
              "$ref": "#/definitions/EquipmentStatsListResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/equipment/{id}": {
      "get": {
        "description": "Retrieves the unit of equipment with the given Samsara ID. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Equipment"
        ],
        "summary": "Retrieve a unit of equipment",
        "operationId": "getEquipment",
        "responses": {
          "200": {
            "description": "The specified equipment object",
            "schema": {
              "$ref": "#/definitions/EquipmentResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Samsara ID of the Equipment.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/fleet/hos/clocks": {
      "get": {
        "description": "Get the current HOS status for all drivers. Note that this includes inactive as well as active drivers. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogsSummary). \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Hours of Service"
        ],
        "summary": "Get HOS clocks",
        "operationId": "getHosClocks",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`",
            "name": "driverIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of current HOS clock information for the specified drivers.",
            "schema": {
              "$ref": "#/definitions/HosClocksResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/hos/daily-logs": {
      "get": {
        "description": "Get summarized daily Hours of Service charts for the specified drivers.\n\nThe time range for a log is defined by the `driver`'s `eldDayStartHour`. This value is configurable per driver.\n\nThe `startDate` and `endDate` parameters indicate the date range you'd like to retrieve daily logs for. A daily log will be returned if its `startTime` is on any of the days within in this date range (inclusive of `startDate` and `endDate`).\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded.\n\nIf you are using the legacy version of this endpoint and looking for its documentation, you can find it [here](https://www.samsara.com/api-legacy#operation/getFleetDriversHosDailyLogs).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Hours of Service"
        ],
        "summary": "Get all driver HOS daily logs",
        "operationId": "getHosDailyLogs",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": " A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`",
            "name": "driverIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A start date in RFC 3339 format. This is a date only without an associated time. Example: `2019-06-13`",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": " An end date in RFC 3339 format. This is a date only without an associated time. Must be greater than or equal to the start date. Example: `2019-07-21`",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "enum": [
              "active",
              "deactivated"
            ],
            "type": "string",
            "default": "active",
            "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).",
            "name": "driverActivationStatus",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "enum": [
              "vehicle"
            ],
            "type": "string",
            "description": "Expands the specified value(s) in the response object. Expansion populates additional fields in an object, if supported. Unsupported fields are ignored. To expand multiple fields, input a comma-separated list.\n\nValid value: `vehicle`",
            "name": "expand",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/HosDailyLogsGetHosDailyLogsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/HosDailyLogsGetHosDailyLogsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/HosDailyLogsGetHosDailyLogsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/HosDailyLogsGetHosDailyLogsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/HosDailyLogsGetHosDailyLogsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/HosDailyLogsGetHosDailyLogsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/HosDailyLogsGetHosDailyLogsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/HosDailyLogsGetHosDailyLogsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/HosDailyLogsGetHosDailyLogsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/HosDailyLogsGetHosDailyLogsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/HosDailyLogsGetHosDailyLogsBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/hos/logs": {
      "get": {
        "description": "Returns HOS logs between a given `startTime` and `endTime`. The logs can be further filtered using tags or by providing a list of driver IDs (including external IDs). The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getFleetHosLogs).\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Hours of Service"
        ],
        "summary": "Get HOS logs",
        "operationId": "getHosLogs",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of driver IDs. Example: `driverIds=1234,5678`",
            "name": "driverIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of the last known HOS log entries for the specified drivers.",
            "schema": {
              "$ref": "#/definitions/HosLogsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/reports/ifta/jurisdiction": {
      "get": {
        "description": "Get all jurisdiction IFTA reports for the requested time duration. Data is returned in your organization's defined timezone.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "IFTA"
        ],
        "summary": "Get IFTA jurisdiction reports.",
        "operationId": "getIftaJurisdictionReports",
        "parameters": [
          {
            "maximum": 2100,
            "minimum": 2015,
            "type": "integer",
            "description": " The year of the requested IFTA report summary. Must be provided with a month or quarter param. Example: `year=2021`",
            "name": "year",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December"
            ],
            "type": "string",
            "description": " The month of the requested IFTA report summary. Can not be provided with the quarter param. Example: `month=January`",
            "name": "month",
            "in": "query"
          },
          {
            "enum": [
              "Q1",
              "Q2",
              "Q3",
              "Q4"
            ],
            "type": "string",
            "description": " The quarter of the requested IFTA report summary. Can not be provided with the month param. Q1: January, February, March. Q2: April, May, June. Q3: July, August, September. Q4: October, November, December. Example: `quarter=Q1`",
            "name": "quarter",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of jurisdictions. Example: `jurisdictions=GA`",
            "name": "jurisdictions",
            "in": "query"
          },
          {
            "enum": [
              "Unspecified",
              "A55",
              "Biodiesel",
              "CompressedNaturalGas",
              "Diesel",
              "E85",
              "Electricity",
              "Ethanol",
              "Gasohol",
              "Gasoline",
              "Hydrogen",
              "LiquifiedNaturalGas",
              "M85",
              "Methanol",
              "Propane",
              "Other"
            ],
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of IFTA fuel types. Example: `fuelType=Diesel`",
            "name": "fuelType",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`",
            "name": "vehicleIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaJurisdictionReportsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaJurisdictionReportsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaJurisdictionReportsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaJurisdictionReportsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaJurisdictionReportsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaJurisdictionReportsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaJurisdictionReportsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaJurisdictionReportsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaJurisdictionReportsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaJurisdictionReportsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaJurisdictionReportsBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/reports/ifta/vehicle": {
      "get": {
        "description": "Get all vehicle IFTA reports for the requested time duration. Data is returned in your organization's defined timezone.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "IFTA"
        ],
        "summary": "Get IFTA vehicle reports.",
        "operationId": "getIftaVehicleReports",
        "parameters": [
          {
            "maximum": 2100,
            "minimum": 2015,
            "type": "integer",
            "description": " The year of the requested IFTA report summary. Must be provided with a month or quarter param. Example: `year=2021`",
            "name": "year",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December"
            ],
            "type": "string",
            "description": " The month of the requested IFTA report summary. Can not be provided with the quarter param. Example: `month=January`",
            "name": "month",
            "in": "query"
          },
          {
            "enum": [
              "Q1",
              "Q2",
              "Q3",
              "Q4"
            ],
            "type": "string",
            "description": " The quarter of the requested IFTA report summary. Can not be provided with the month param. Q1: January, February, March. Q2: April, May, June. Q3: July, August, September. Q4: October, November, December. Example: `quarter=Q1`",
            "name": "quarter",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of jurisdictions. Example: `jurisdictions=GA`",
            "name": "jurisdictions",
            "in": "query"
          },
          {
            "enum": [
              "Unspecified",
              "A55",
              "Biodiesel",
              "CompressedNaturalGas",
              "Diesel",
              "E85",
              "Electricity",
              "Ethanol",
              "Gasohol",
              "Gasoline",
              "Hydrogen",
              "LiquifiedNaturalGas",
              "M85",
              "Methanol",
              "Propane",
              "Other"
            ],
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of IFTA fuel types. Example: `fuelType=Diesel`",
            "name": "fuelType",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`",
            "name": "vehicleIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaVehicleReportsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaVehicleReportsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaVehicleReportsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaVehicleReportsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaVehicleReportsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaVehicleReportsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaVehicleReportsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaVehicleReportsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaVehicleReportsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaVehicleReportsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IFTAGetIftaVehicleReportsBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/routes": {
      "get": {
        "description": "Returns multiple routes. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllDispatchRoutes).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Fetch all routes",
        "operationId": "fetchRoutes",
        "parameters": [
          {
            "type": "string",
            "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "default": 512,
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRoutesResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRoutesUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRoutesNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRoutesMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRoutesTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRoutesInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRoutesNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRoutesBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRoutesServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRoutesGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRoutesBadRequestErrorResponseBody"
            }
          }
        }
      },
      "post": {
        "description": "Create a route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/createDispatchRoute).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Create a route",
        "operationId": "createRoute",
        "parameters": [
          {
            "name": "CreateRouteRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/RoutesCreateRouteBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/routes/audit-logs/feed": {
      "get": {
        "description": "Subscribes to a feed of immutable, append-only updates for routes. The initial request to this feed endpoint returns a cursor, which can be used on the next request to fetch updated routes that have had state changes since that request.\n\nThe legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllRouteJobUpdates).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Get route updates",
        "operationId": "getRoutesFeed",
        "parameters": [
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "enum": [
              "route"
            ],
            "type": "string",
            "description": "Expands the specified value(s) in the response object. Expansion populates additional fields in an object, if supported. Unsupported fields are ignored. To expand multiple fields, input a comma-separated list.\n\nValid value: `route`",
            "name": "expand",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/RoutesGetRoutesFeedResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/RoutesGetRoutesFeedUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/RoutesGetRoutesFeedNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/RoutesGetRoutesFeedMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/RoutesGetRoutesFeedTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/RoutesGetRoutesFeedInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/RoutesGetRoutesFeedNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/RoutesGetRoutesFeedBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/RoutesGetRoutesFeedServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/RoutesGetRoutesFeedGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/RoutesGetRoutesFeedBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/routes/{id}": {
      "get": {
        "description": "Returns a single route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDispatchRouteById).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Fetch a route",
        "operationId": "fetchRoute",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRouteResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRouteUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRouteNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRouteMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRouteTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRouteInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRouteNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRouteBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRouteServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRouteGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/RoutesFetchRouteBadRequestErrorResponseBody"
            }
          }
        }
      },
      "patch": {
        "description": "Update a route.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.\n\nThe legacy version of this endpoint (which uses PUT instead of PATCH) can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/updateDispatchRouteById).\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Update a route",
        "operationId": "patchRoute",
        "parameters": [
          {
            "type": "string",
            "description": "id of the route to update",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "PatchRouteRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/RoutesPatchRouteBadRequestErrorResponseBody"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "id of the route to update",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/fleet/safety-events": {
      "get": {
        "description": "Fetch safety events for the organization in a given time period. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Safety"
        ],
        "summary": "List all safety events.",
        "operationId": "getSafetyEvents",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
            "name": "vehicleIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of safety events from given time period.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsListResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/settings/compliance": {
      "get": {
        "description": "Get organization's compliance settings, including carrier name, office address, and DOT number\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Settings"
        ],
        "summary": "Get compliance settings",
        "operationId": "getComplianceSettings",
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetComplianceSettingsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetComplianceSettingsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetComplianceSettingsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetComplianceSettingsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetComplianceSettingsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetComplianceSettingsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetComplianceSettingsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetComplianceSettingsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetComplianceSettingsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetComplianceSettingsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetComplianceSettingsBadRequestErrorResponseBody"
            }
          }
        }
      },
      "patch": {
        "description": "Update organization's compliance settings, including carrier name, office address, and DOT number\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Settings"
        ],
        "summary": "Update compliance settings",
        "operationId": "patchComplianceSettings",
        "parameters": [
          {
            "name": "PatchComplianceSettingsRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchComplianceSettingsBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/settings/driver-app": {
      "get": {
        "description": "Get driver app settings.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Settings"
        ],
        "summary": "Get driver app settings",
        "operationId": "getDriverAppSettings",
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetDriverAppSettingsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetDriverAppSettingsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetDriverAppSettingsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetDriverAppSettingsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetDriverAppSettingsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetDriverAppSettingsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetDriverAppSettingsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetDriverAppSettingsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetDriverAppSettingsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetDriverAppSettingsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/SettingsGetDriverAppSettingsBadRequestErrorResponseBody"
            }
          }
        }
      },
      "patch": {
        "description": "Update driver app settings.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Settings"
        ],
        "summary": "Update driver app settings",
        "operationId": "patchDriverAppSettings",
        "parameters": [
          {
            "name": "PatchDriverAppSettingsRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/SettingsPatchDriverAppSettingsBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/vehicles": {
      "get": {
        "description": "Returns a list of all vehicles. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Vehicles"
        ],
        "summary": "List all vehicles",
        "operationId": "listVehicles",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all vehicle objects, and pagination parameters.",
            "schema": {
              "$ref": "#/definitions/ListVehiclesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/vehicles/cameras/media/history": {
      "get": {
        "description": "Get all camera media.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Camera Media"
        ],
        "summary": "Get all camera media",
        "operationId": "getCameraMedia",
        "parameters": [
          {
            "type": "string",
            "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`",
            "name": "vehicleIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/CameraMediaGetCameraMediaResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/CameraMediaGetCameraMediaUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/CameraMediaGetCameraMediaNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/CameraMediaGetCameraMediaMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/CameraMediaGetCameraMediaTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/CameraMediaGetCameraMediaInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/CameraMediaGetCameraMediaNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/CameraMediaGetCameraMediaBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/CameraMediaGetCameraMediaServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/CameraMediaGetCameraMediaGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/CameraMediaGetCameraMediaBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/vehicles/driver-assignments": {
      "get": {
        "description": "Get all driver assignments for the requested vehicles in the requested time range. The only type of assignment supported right now are assignments created through the driver app.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Vehicle Driver-Assignments"
        ],
        "summary": "Get all drivers assigned to a set of vehicles",
        "operationId": "getVehiclesDriverAssignments",
        "parameters": [
          {
            "type": "string",
            "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days.",
            "name": "startTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": " An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00). The maximum allowed startTime-endTime range is 7 days.",
            "name": "endTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`",
            "name": "vehicleIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/fleet/vehicles/locations": {
      "get": {
        "description": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestats) instead.***\n\nReturns the last known location of all vehicles at the given `time`. If no `time` is specified, the current time is used. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: \u003ca href=\"/docs/vehicle-locations-1\" target=\"_blank\"\u003eVehicle Locations\u003c/a\u003e. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Vehicle Locations"
        ],
        "summary": "Locations snapshot",
        "operationId": "getVehicleLocations",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported. (Example: `2020-01-27T07:06:25Z`).",
            "name": "time",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
            "name": "vehicleIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of the most recent locations for the specified vehicles.",
            "schema": {
              "$ref": "#/definitions/VehicleLocationsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/vehicles/locations/feed": {
      "get": {
        "description": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestatsfeed) instead.***\n\nFollow a continuous feed of all vehicle locations from Samsara Vehicle Gateways.\n\nYour first call to this endpoint will provide you with the most recent location for each vehicle and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to the `after` parameter of this endpoint to get location updates since that `endCursor`. \n\nIf `hasNextPage` is `false`, no updates are readily available yet. We'd suggest waiting a minimum of 5 seconds before requesting updates.\n\nRelated guide: \u003ca href=\"/docs/vehicle-locations-1\" target=\"_blank\"\u003eVehicle Locations\u003c/a\u003e. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Vehicle Locations"
        ],
        "summary": "Locations feed",
        "operationId": "getVehicleLocationsFeed",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
            "name": "vehicleIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of locations events for the specified vehicles.",
            "schema": {
              "$ref": "#/definitions/VehicleLocationsListResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/vehicles/locations/history": {
      "get": {
        "description": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](ref:getvehiclestatshistory) instead.***\n\nReturns all known vehicle locations during the given time range. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: \u003ca href=\"/docs/vehicle-locations-1\" target=\"_blank\"\u003eVehicle Locations\u003c/a\u003e. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Vehicle Locations"
        ],
        "summary": "Historical locations",
        "operationId": "getVehicleLocationsHistory",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
            "name": "vehicleIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all locations for the specified vehicles and time range.",
            "schema": {
              "$ref": "#/definitions/VehicleLocationsListResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/vehicles/stats": {
      "get": {
        "description": "Returns the last known stats of all vehicles at the given `time`. If no `time` is specified, the current time is used.\n\nRelated guide: \u003ca href=\"/docs/telematics\" target=\"_blank\"\u003eTelematics\u003c/a\u003e. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Vehicle Stats"
        ],
        "summary": "Stats snapshot",
        "operationId": "getVehicleStats",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported. (Example: `2020-01-27T07:06:25Z`).",
            "name": "time",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
            "name": "vehicleIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "ambientAirTemperatureMilliC",
                "auxInput1",
                "auxInput2",
                "auxInput3",
                "auxInput4",
                "auxInput5",
                "auxInput6",
                "auxInput7",
                "auxInput8",
                "auxInput9",
                "auxInput10",
                "barometricPressurePa",
                "batteryMilliVolts",
                "defLevelMilliPercent",
                "ecuSpeedMph",
                "engineCoolantTemperatureMilliC",
                "engineImmobilizer",
                "engineLoadPercent",
                "engineOilPressureKPa",
                "engineRpm",
                "engineStates",
                "faultCodes",
                "fuelPercents",
                "gps",
                "gpsDistanceMeters",
                "gpsOdometerMeters",
                "intakeManifoldTemperatureMilliC",
                "nfcCardScans",
                "obdEngineSeconds",
                "obdOdometerMeters",
                "syntheticEngineSeconds"
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "The stat types you want this endpoint to return information on. See also the \u003ca href=\"/docs/telematics#query-parameters\" target=\"_blank\"\u003eTelematics\u003c/a\u003e guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary inputs\u003c/a\u003e for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer (`ignition_disabled`, `ignition_enabled`).\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](ref:updatevehicle) endpoint or through the \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading\" target=\"_blank\"\u003ecloud dasbhoard\u003c/a\u003e. Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.",
            "name": "types",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle stats snapshot",
            "schema": {
              "$ref": "#/definitions/VehicleStatsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/vehicles/stats/feed": {
      "get": {
        "description": "Follow a feed of vehicle stats. \n\nYour first call to this endpoint will provide you with the most recent stats for each vehicle and an `endCursor`.\n\nYou can the provide the `endCursor` value to the `after` query parameter to get all updates since the last call you made.\n\nIf `hasNextPage` is `false`, no new data is immediately available. You should wait a minimum of 5 seconds making a subsequent request.\n\nRelated guide: \u003ca href=\"/docs/telematics\" target=\"_blank\"\u003eTelematics\u003c/a\u003e. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Vehicle Stats"
        ],
        "summary": "Stats feed",
        "operationId": "getVehicleStatsFeed",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
            "name": "vehicleIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "ambientAirTemperatureMilliC",
                "auxInput1",
                "auxInput2",
                "auxInput3",
                "auxInput4",
                "auxInput5",
                "auxInput6",
                "auxInput7",
                "auxInput8",
                "auxInput9",
                "auxInput10",
                "barometricPressurePa",
                "batteryMilliVolts",
                "defLevelMilliPercent",
                "ecuSpeedMph",
                "engineCoolantTemperatureMilliC",
                "engineImmobilizer",
                "engineLoadPercent",
                "engineOilPressureKPa",
                "engineRpm",
                "engineStates",
                "faultCodes",
                "fuelPercents",
                "gps",
                "gpsDistanceMeters",
                "gpsOdometerMeters",
                "intakeManifoldTemperatureMilliC",
                "nfcCardScans",
                "obdEngineSeconds",
                "obdOdometerMeters",
                "syntheticEngineSeconds"
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "The stat types you want this endpoint to return information on. See also the \u003ca href=\"/docs/telematics#query-parameters\" target=\"_blank\"\u003eTelematics\u003c/a\u003e guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary inputs\u003c/a\u003e for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer (`ignition_disabled`, `ignition_enabled`).\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](ref:updatevehicle) endpoint or through the \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading\" target=\"_blank\"\u003ecloud dasbhoard\u003c/a\u003e. Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.",
            "name": "types",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "ambientAirTemperatureMilliC",
                "auxInput1",
                "auxInput2",
                "auxInput3",
                "auxInput4",
                "auxInput5",
                "auxInput6",
                "auxInput7",
                "auxInput8",
                "auxInput9",
                "auxInput10",
                "batteryMilliVolts",
                "barometricPressurePa",
                "defLevelMilliPercent",
                "ecuSpeedMph",
                "engineCoolantTemperatureMilliC",
                "engineImmobilizer",
                "engineLoadPercent",
                "engineOilPressureKPa",
                "engineRpm",
                "engineStates",
                "faultCodes",
                "fuelPercents",
                "gps",
                "gpsDistanceMeters",
                "intakeManifoldTemperatureMilliC",
                "nfcCardScans",
                "obdEngineSeconds",
                "obdOdometerMeters"
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "Decorations to add to the primary stats listed in the `types` parameter. For example, if you wish to know the vehicle's location whenever the engine changes state, you may set `types=engineStates\u0026decorations=gps`.\n\nYou may list ***up to 2*** decorations using comma-separated format. If multiple stats are listed in the `types` parameter, the decorations will be added to each one. For example: `types=engineStates,obdOdometerMeters,faultCodes\u0026decorations=gps,fuelPercents` will list GPS and fuel decorations for each engine state change, each odometer reading, and each fault code. See the \u003ca href=\"/docs/telematics#query-parameters\" target=\"_blank\"\u003eTelematics\u003c/a\u003e guide for more details.\n\nNote that decorations may significantly increase the response payload size.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary inputs\u003c/a\u003e for the vehicle.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer (`ignition_disabled`, `ignition_enabled`).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted.\n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.  ",
            "name": "decorations",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of stat events for the specified vehicles and stat types.",
            "schema": {
              "$ref": "#/definitions/VehicleStatsListResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/vehicles/stats/history": {
      "get": {
        "description": "Returns vehicle stats during the given time range for all vehicles. This can be optionally filtered by tags or specific vehicle IDs.\n\nRelated guide: \u003ca href=\"/docs/telematics\" target=\"_blank\"\u003eTelematics\u003c/a\u003e. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Vehicle Stats"
        ],
        "summary": "Historical stats",
        "operationId": "getVehicleStatsHistory",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
            "name": "vehicleIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "ambientAirTemperatureMilliC",
                "auxInput1",
                "auxInput2",
                "auxInput3",
                "auxInput4",
                "auxInput5",
                "auxInput6",
                "auxInput7",
                "auxInput8",
                "auxInput9",
                "auxInput10",
                "barometricPressurePa",
                "batteryMilliVolts",
                "defLevelMilliPercent",
                "ecuSpeedMph",
                "engineCoolantTemperatureMilliC",
                "engineImmobilizer",
                "engineLoadPercent",
                "engineOilPressureKPa",
                "engineRpm",
                "engineStates",
                "faultCodes",
                "fuelPercents",
                "gps",
                "gpsDistanceMeters",
                "gpsOdometerMeters",
                "intakeManifoldTemperatureMilliC",
                "nfcCardScans",
                "obdEngineSeconds",
                "obdOdometerMeters",
                "syntheticEngineSeconds"
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "The stat types you want this endpoint to return information on. See also the \u003ca href=\"/docs/telematics#query-parameters\" target=\"_blank\"\u003eTelematics\u003c/a\u003e guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary inputs\u003c/a\u003e for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer (`ignition_disabled`, `ignition_enabled`).\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](ref:updatevehicle) endpoint or through the \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading\" target=\"_blank\"\u003ecloud dasbhoard\u003c/a\u003e. Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.",
            "name": "types",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "ambientAirTemperatureMilliC",
                "auxInput1",
                "auxInput2",
                "auxInput3",
                "auxInput4",
                "auxInput5",
                "auxInput6",
                "auxInput7",
                "auxInput8",
                "auxInput9",
                "auxInput10",
                "batteryMilliVolts",
                "barometricPressurePa",
                "defLevelMilliPercent",
                "ecuSpeedMph",
                "engineCoolantTemperatureMilliC",
                "engineImmobilizer",
                "engineLoadPercent",
                "engineOilPressureKPa",
                "engineRpm",
                "engineStates",
                "faultCodes",
                "fuelPercents",
                "gps",
                "gpsDistanceMeters",
                "intakeManifoldTemperatureMilliC",
                "nfcCardScans",
                "obdEngineSeconds",
                "obdOdometerMeters"
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "Decorations to add to the primary stats listed in the `types` parameter. For example, if you wish to know the vehicle's location whenever the engine changes state, you may set `types=engineStates\u0026decorations=gps`.\n\nYou may list ***up to 2*** decorations using comma-separated format. If multiple stats are listed in the `types` parameter, the decorations will be added to each one. For example: `types=engineStates,obdOdometerMeters,faultCodes\u0026decorations=gps,fuelPercents` will list GPS and fuel decorations for each engine state change, each odometer reading, and each fault code. See the \u003ca href=\"/docs/telematics#query-parameters\" target=\"_blank\"\u003eTelematics\u003c/a\u003e guide for more details.\n\nNote that decorations may significantly increase the response payload size.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary inputs\u003c/a\u003e for the vehicle.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer (`ignition_disabled`, `ignition_enabled`).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted.\n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.  ",
            "name": "decorations",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of vehicle stats for the specified vehicles, stat type, and time range.",
            "schema": {
              "$ref": "#/definitions/VehicleStatsListResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/vehicles/tachograph-files/history": {
      "get": {
        "description": "Returns all known tachograph files for all specified vehicles in the time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Tachograph (EU Only)"
        ],
        "summary": "Get tachograph vehicle files",
        "operationId": "getVehicleTachographFiles",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of vehicle IDs. Example: `vehicleIds=1234,5678`",
            "name": "vehicleIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all vehicle tachograph files in a specified time range.",
            "schema": {
              "$ref": "#/definitions/TachographVehicleFilesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/fleet/vehicles/{id}": {
      "get": {
        "description": "Get information about a specific vehicle. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Vehicles"
        ],
        "summary": "Retrieve a vehicle",
        "operationId": "getVehicle",
        "responses": {
          "200": {
            "description": "Returns the specified vehicle object.",
            "schema": {
              "$ref": "#/definitions/VehicleResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Updates the given Vehicle object.\n\n**Note:** Vehicle objects are automatically created when Samsara Vehicle Gateways are installed. You cannot create a Vehicle object via API.\n\nYou are able to *update* many of the fields of a Vehicle.\n\n**Note**: There are no required fields in the request body, and you only need to provide the fields you wish to update. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Vehicles"
        ],
        "summary": "Update a vehicle",
        "operationId": "updateVehicle",
        "parameters": [
          {
            "description": "Fields that can be patched on a vehicle.",
            "name": "vehicle",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateVehicleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified vehicle object.",
            "schema": {
              "$ref": "#/definitions/VehicleResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the vehicle. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource, or automatically populated by fields on the vehicle. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `maintenanceId:250020`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.vin:1HGBH41JXMN109186`.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/gateways": {
      "get": {
        "description": "List all gateways\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Gateways"
        ],
        "summary": "List all gateways",
        "operationId": "getGateways",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "Filter by a comma separated list of gateway models.",
            "name": "models",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/GatewaysGetGatewaysResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/GatewaysGetGatewaysUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/GatewaysGetGatewaysNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/GatewaysGetGatewaysMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/GatewaysGetGatewaysTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/GatewaysGetGatewaysInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/GatewaysGetGatewaysNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/GatewaysGetGatewaysBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/GatewaysGetGatewaysServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/GatewaysGetGatewaysGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/GatewaysGetGatewaysBadRequestErrorResponseBody"
            }
          }
        }
      },
      "post": {
        "description": "Activate a new gateway. To activate a device and associate it with your organization, enter its serial number. Each device's serial number can also be found on its label or packaging, or from your order confirmation email. A Not Found error could mean that the serial was not found or it has already been activated\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Gateways"
        ],
        "summary": "Activate a new gateway",
        "operationId": "postGateway",
        "parameters": [
          {
            "name": "PostGatewayRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/GatewaysPostGatewayBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/gateways/{id}": {
      "delete": {
        "description": "Deactivate a gateway\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Gateways"
        ],
        "summary": "Deactivate a gateway",
        "operationId": "deleteGateway",
        "parameters": [
          {
            "pattern": "^[a-zA-Z0-9]{4}-[a-zA-Z0-9]{3}-[a-zA-Z0-9]{3}$",
            "type": "string",
            "description": "Gateway serial number",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/GatewaysDeleteGatewayUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/GatewaysDeleteGatewayNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/GatewaysDeleteGatewayMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/GatewaysDeleteGatewayTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/GatewaysDeleteGatewayInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/GatewaysDeleteGatewayNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/GatewaysDeleteGatewayBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/GatewaysDeleteGatewayServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/GatewaysDeleteGatewayGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/GatewaysDeleteGatewayBadRequestErrorResponseBody"
            }
          }
        }
      },
      "parameters": [
        {
          "pattern": "^[a-zA-Z0-9]{4}-[a-zA-Z0-9]{3}-[a-zA-Z0-9]{3}$",
          "type": "string",
          "description": "Gateway serial number",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/industrial/assets": {
      "get": {
        "description": "List all assets in the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "List all assets",
        "operationId": "getIndustrialAssets",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`",
            "name": "assetIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Assets in the organization.",
            "schema": {
              "$ref": "#/definitions/ListIndustrialAssetsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create an asset with optional configuration parameters. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Create an asset",
        "operationId": "createIndustrialAsset",
        "parameters": [
          {
            "description": "The asset to create",
            "name": "asset",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AssetCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created asset object",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/AssetResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/industrial/assets/{id}": {
      "delete": {
        "description": "Delete asset. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Delete an existing asset",
        "operationId": "deleteIndustrialAsset",
        "parameters": [
          {
            "type": "string",
            "description": "Id of the asset to be deleted.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "A successful DELETE response is a 204 with no content.",
            "schema": {
              "$ref": "#/definitions/standardDeleteResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update an existing asset. Only the provided fields will be updated. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Update an asset",
        "operationId": "patchIndustrialAsset",
        "parameters": [
          {
            "type": "string",
            "description": "Id of the asset to be updated",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "The updated asset fields",
            "name": "asset",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AssetPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated asset",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/AssetResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/industrial/assets/{id}/data-outputs": {
      "patch": {
        "description": "Writes values to multiple data outputs on an asset simultaneously. Only the provided data outputs will be updated.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Industrial"
        ],
        "summary": "Writes to data outputs on an asset",
        "operationId": "patchAssetDataOutputs",
        "parameters": [
          {
            "type": "string",
            "description": "Asset ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "PatchAssetDataOutputsRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AssetDataOutputsPatchAssetDataOutputsBadRequestErrorResponseBody"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Asset ID",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/industrial/data-inputs": {
      "get": {
        "description": "Returns all data inputs, optionally filtered by tags or asset ids. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "List all data inputs",
        "operationId": "getDataInputs",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`",
            "name": "assetIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of data inputs with names, ids, and other metadata.",
            "schema": {
              "$ref": "#/definitions/DataInputsTinyResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/industrial/data-inputs/data-points": {
      "get": {
        "description": "Returns last known data points for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "List most recent data points for data inputs",
        "operationId": "getDataInputDataSnapshot",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`",
            "name": "dataInputIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`",
            "name": "assetIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of last known data input data points and pagination parameters",
            "schema": {
              "$ref": "#/definitions/DataInputSnapshotResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/industrial/data-inputs/data-points/feed": {
      "get": {
        "description": "Follow a continuous feed of all data input data points.\n\nYour first call to this endpoint will provide you with the most recent data points for each data input and a `pagination` object that contains an `endCursor`.\n\nYou can provide the `endCursor` to the `after` parameter of this endpoint to get data point updates since that `endCursor`.\n\nIf `hasNextPage` is `false`, no updates are readily available yet. We suggest waiting a minimum of 5 seconds before requesting updates. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Follow a real-time feed of data points for data inputs",
        "operationId": "getDataInputDataFeed",
        "parameters": [
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`",
            "name": "dataInputIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`",
            "name": "assetIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all data points for specified data inputs",
            "schema": {
              "$ref": "#/definitions/DataInputListResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/industrial/data-inputs/data-points/history": {
      "get": {
        "description": "Returns all known data points during the given time range for all data inputs. This can be filtered by optional tags, specific data input IDs or asset IDs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "List historical data points for data inputs",
        "operationId": "getDataInputDataHistory",
        "parameters": [
          {
            "type": "string",
            "description": "A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "startTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
            "name": "endTime",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`",
            "name": "parentTagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`",
            "name": "tagIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of data input IDs. Example: `dataInputIds=1234,5678`",
            "name": "dataInputIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of industrial asset UUIDs. Example: `assetIds=076efac2-83b5-47aa-ba36-18428436dcac,6707b3f0-23b9-4fe3-b7be-11be34aea544`",
            "name": "assetIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all data points for the specified data inputs and time range.",
            "schema": {
              "$ref": "#/definitions/DataInputListResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "description": "Get information about your organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Organization Info"
        ],
        "summary": "Get information about your organization",
        "operationId": "getOrganizationInfo",
        "responses": {
          "200": {
            "description": "Returns information about your organization.",
            "schema": {
              "$ref": "#/definitions/OrganizationInfoResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/preview/aemp/fleet/equipment/{id}": {
      "get": {
        "description": "Get an equipment following the AEMP ISO 15143-3 standard.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Preview APIs"
        ],
        "summary": "[preview] Get an AEMP equipment",
        "operationId": "getAempEquipment",
        "parameters": [
          {
            "type": "string",
            "description": "The Samsara equipment id or external id. This is automatically generated when the Equipment object is created. It cannot be changed.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AempEquipmentGetAempEquipmentResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AempEquipmentGetAempEquipmentUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AempEquipmentGetAempEquipmentNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/AempEquipmentGetAempEquipmentMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/AempEquipmentGetAempEquipmentTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AempEquipmentGetAempEquipmentInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/AempEquipmentGetAempEquipmentNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AempEquipmentGetAempEquipmentBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/AempEquipmentGetAempEquipmentServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/AempEquipmentGetAempEquipmentGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AempEquipmentGetAempEquipmentBadRequestErrorResponseBody"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "The Samsara equipment id or external id. This is automatically generated when the Equipment object is created. It cannot be changed.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/preview/fleet/safety-events/audit-logs/feed": {
      "get": {
        "description": "Get continuous safety activity event feed.\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Preview APIs"
        ],
        "summary": "[preview] Fetches safety activity event feed",
        "operationId": "getSafetyActivityEventFeed",
        "parameters": [
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsGetSafetyActivityEventFeedResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsGetSafetyActivityEventFeedUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsGetSafetyActivityEventFeedNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsGetSafetyActivityEventFeedMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsGetSafetyActivityEventFeedTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsGetSafetyActivityEventFeedInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsGetSafetyActivityEventFeedNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsGetSafetyActivityEventFeedBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsGetSafetyActivityEventFeedServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsGetSafetyActivityEventFeedGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/SafetyEventsGetSafetyActivityEventFeedBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/preview/industrial/jobs": {
      "get": {
        "description": "Fetches jobs based on id/uuid or provided filters\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Preview APIs"
        ],
        "summary": "[preview] Fetches all jobs",
        "operationId": "getJobs",
        "parameters": [
          {
            "type": "string",
            "description": "A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `\"1234567\"`, `\"jobId:98765\"`).",
            "name": "id",
            "in": "query"
          },
          {
            "type": "string",
            "description": " A start date in RFC 3339 format. This is a date only without an associated time. Example: `2019-06-13`",
            "name": "startDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": " An end date in RFC 3339 format. This is a date only without an associated time. Must be greater than or equal to the start date. Example: `2019-07-21`",
            "name": "endDate",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "An array of industrialAssetIds in STRING format. (Examples: `[\"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596\", \"ba84a7e2-9c8d-481f-a248-7cce6b22be9df\"]`).",
            "name": "industrialAssetIds",
            "in": "query"
          },
          {
            "enum": [
              "active",
              "scheduled",
              "completed"
            ],
            "type": "string",
            "description": "A job status in STRING format. Job statuses can be one of three (ignores case): `\"active\", \"scheduled\", \"completed\"`",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Customer name to filter by",
            "name": "customerName",
            "in": "query"
          },
          {
            "type": "string",
            "description": " If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/JobsGetJobsResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/JobsGetJobsUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/JobsGetJobsNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/JobsGetJobsMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/JobsGetJobsTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/JobsGetJobsInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/JobsGetJobsNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/JobsGetJobsBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/JobsGetJobsServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/JobsGetJobsGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/JobsGetJobsBadRequestErrorResponseBody"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new job and returns it\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Preview APIs"
        ],
        "summary": "[preview] Create a job",
        "operationId": "createJob",
        "parameters": [
          {
            "name": "CreateJobRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobsCreateJobRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/JobsCreateJobResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/JobsCreateJobUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/JobsCreateJobNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/JobsCreateJobMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/JobsCreateJobTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/JobsCreateJobInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/JobsCreateJobNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/JobsCreateJobBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/JobsCreateJobServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/JobsCreateJobGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/JobsCreateJobBadRequestErrorResponseBody"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an existing job\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Preview APIs"
        ],
        "summary": "[preview] Deletes an existing job",
        "operationId": "deleteJob",
        "parameters": [
          {
            "type": "string",
            "description": "A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `\"1234567\"`, `\"jobId:98765\"`).",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/JobsDeleteJobResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/JobsDeleteJobUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/JobsDeleteJobNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/JobsDeleteJobMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/JobsDeleteJobTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/JobsDeleteJobInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/JobsDeleteJobNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/JobsDeleteJobBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/JobsDeleteJobServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/JobsDeleteJobGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/JobsDeleteJobBadRequestErrorResponseBody"
            }
          }
        }
      },
      "patch": {
        "description": "Patches an existing job and returns it\n \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "schemes": [
          "https"
        ],
        "tags": [
          "Preview APIs"
        ],
        "summary": "[preview] Patches a job",
        "operationId": "patchJob",
        "parameters": [
          {
            "type": "string",
            "description": "A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `\"1234567\"`, `\"jobId:98765\"`).",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "name": "PatchJobRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobsPatchJobRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/JobsPatchJobResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/JobsPatchJobUnauthorizedErrorResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/JobsPatchJobNotFoundErrorResponseBody"
            }
          },
          "405": {
            "description": "Method Not Allowed response.",
            "schema": {
              "$ref": "#/definitions/JobsPatchJobMethodNotAllowedErrorResponseBody"
            }
          },
          "429": {
            "description": "Too Many Requests response.",
            "schema": {
              "$ref": "#/definitions/JobsPatchJobTooManyRequestsErrorResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/JobsPatchJobInternalServerErrorResponseBody"
            }
          },
          "501": {
            "description": "Not Implemented response.",
            "schema": {
              "$ref": "#/definitions/JobsPatchJobNotImplementedErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/JobsPatchJobBadGatewayErrorResponseBody"
            }
          },
          "503": {
            "description": "Service Unavailable response.",
            "schema": {
              "$ref": "#/definitions/JobsPatchJobServiceUnavailableErrorResponseBody"
            }
          },
          "504": {
            "description": "Gateway Timeout response.",
            "schema": {
              "$ref": "#/definitions/JobsPatchJobGatewayTimeoutErrorResponseBody"
            }
          },
          "default": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/JobsPatchJobBadRequestErrorResponseBody"
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "description": "Return all of the tags for an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Tags"
        ],
        "summary": "List all tags",
        "operationId": "listTags",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tags.",
            "schema": {
              "$ref": "#/definitions/ListTagsResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create a new tag for the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Tags"
        ],
        "summary": "Create a tag",
        "operationId": "createTag",
        "parameters": [
          {
            "name": "tag",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created tag object, including the new tag ID.",
            "schema": {
              "$ref": "#/definitions/TagResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/tags/{id}": {
      "get": {
        "description": "Fetch a tag by id. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tags"
        ],
        "summary": "Retrieve a tag",
        "operationId": "getTag",
        "responses": {
          "200": {
            "description": "The tag corresponding to request id.",
            "schema": {
              "$ref": "#/definitions/TagResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Update a tag with a new name and new members. This API call would replace all old members of a tag with new members specified in the request body. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Tags"
        ],
        "summary": "Update a tag",
        "operationId": "replaceTag",
        "parameters": [
          {
            "name": "tag",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplaceTagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated tag data.",
            "schema": {
              "$ref": "#/definitions/TagResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Permanently deletes a tag. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Tags"
        ],
        "summary": "Delete a tag",
        "operationId": "deleteTag",
        "responses": {
          "204": {
            "description": "A successful DELETE response is a 204 with no content.",
            "schema": {
              "$ref": "#/definitions/standardDeleteResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update an existing tag. **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard. \n\n This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource. \n\n For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Tags"
        ],
        "summary": "Update a tag",
        "operationId": "patchTag",
        "parameters": [
          {
            "name": "tag",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchTagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns updated tag object.",
            "schema": {
              "$ref": "#/definitions/TagResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/user-roles": {
      "get": {
        "description": "Returns a list of all user roles in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Users"
        ],
        "summary": "List all user roles",
        "operationId": "listUserRoles",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all user roles.",
            "schema": {
              "$ref": "#/definitions/ListUserRolesResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Returns a list of all users in an organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Users"
        ],
        "summary": "List all users",
        "operationId": "listUsers",
        "parameters": [
          {
            "maximum": 512,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "description": "The limit for how many objects will be in the response. Default and max for this value is 512 objects.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List all users.",
            "schema": {
              "$ref": "#/definitions/ListUsersResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Add a user to the organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Users"
        ],
        "summary": "Create a user",
        "operationId": "createUser",
        "parameters": [
          {
            "description": "The user to create.",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created user object with ID.",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Get a specific user's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Users"
        ],
        "summary": "Retrieve a user",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "Returns the specified user.",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete the given user. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Users"
        ],
        "summary": "Delete a user",
        "operationId": "deleteUser",
        "responses": {
          "204": {
            "description": "A successful DELETE response is a 204 with no content.",
            "schema": {
              "$ref": "#/definitions/standardDeleteResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update a specific user's information. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Users"
        ],
        "summary": "Update a user",
        "operationId": "updateUser",
        "parameters": [
          {
            "description": "Updates to the user.",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated user object with ID.",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/standardErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Unique identifier for the user.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/v1/fleet/assets": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch all of the assets. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Assets"
        ],
        "summary": "List all assets",
        "operationId": "V1getAllAssets",
        "responses": {
          "200": {
            "description": "List of assets.",
            "schema": {
              "type": "object",
              "properties": {
                "assets": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/V1Asset"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/assets/locations": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch current locations of all assets. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Assets"
        ],
        "summary": "List current location for all assets",
        "operationId": "V1getAllAssetCurrentLocations",
        "parameters": [
          {
            "type": "string",
            "description": "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter.",
            "name": "startingAfter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter.",
            "name": "endingBefore",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "description": "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of assets and their current locations.",
            "schema": {
              "type": "object",
              "properties": {
                "assets": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/V1AssetCurrentLocationsResponse"
                  }
                },
                "pagination": {
                  "$ref": "#/definitions/V1Pagination"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/assets/reefers": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetches all reefers and reefer-specific stats. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Assets"
        ],
        "summary": "List stats for all reefers",
        "operationId": "V1getAssetsReefers",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs.",
            "name": "startMs",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs.",
            "name": "endMs",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter.",
            "name": "startingAfter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter.",
            "name": "endingBefore",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "description": "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "All org reefers and reefer-specific details.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/V1AssetsReefer"
                  }
                },
                "pagination": {
                  "$ref": "#/definitions/V1Pagination"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/assets/{asset_id}/locations": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nList historical locations for a given asset. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Assets"
        ],
        "summary": "List historical locations for a given asset",
        "operationId": "V1getAssetLocation",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the asset. Must contain only digits 0-9.",
            "name": "asset_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs.",
            "name": "startMs",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs.",
            "name": "endMs",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Asset location details.",
            "schema": {
              "$ref": "#/definitions/V1AssetLocationResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/assets/{asset_id}/reefer": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch the reefer-specific stats of an asset. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Assets"
        ],
        "summary": "List stats for a given reefer",
        "operationId": "V1getAssetReefer",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the asset. Must contain only digits 0-9.",
            "name": "asset_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs.",
            "name": "startMs",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs.",
            "name": "endMs",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Reefer-specific asset details.",
            "schema": {
              "$ref": "#/definitions/V1AssetReeferResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/dispatch/routes/{route_id_or_external_id}": {
      "delete": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nDelete a dispatch route and its associated jobs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Routes"
        ],
        "summary": "Delete a route",
        "operationId": "V1deleteDispatchRouteById",
        "parameters": [
          {
            "name": "applyToFutureRoutes",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "apply_to_future_routes": {
                  "description": "This is only for a recurring route.  If set to true, delete all following runs of the route.  If set to false, only delete the current route.",
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the dispatch route. No response body is returned."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
          "name": "route_id_or_external_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/v1/fleet/drivers/{driverId}/safety/score": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch the safety score for the driver. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Safety"
        ],
        "summary": "Fetch driver safety score",
        "operationId": "V1getDriverSafetyScore",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
            "name": "startMs",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
            "name": "endMs",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Safety score details.",
            "schema": {
              "$ref": "#/definitions/V1DriverSafetyScoreResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "description": "ID of the driver. Must contain only digits 0-9.",
          "name": "driverId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/v1/fleet/drivers/{driver_id}/hos/duty_status": {
      "post": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nSet an individual driver’s current duty status to 'On Duty' or 'Off Duty'.\n\n To ensure compliance with the ELD Mandate, only  authenticated drivers can make direct duty status changes on their own logbook. Any system external to the Samsara Driver App using this endpoint to trigger duty status changes must ensure that such changes are only triggered directly by the driver in question and that the driver has been properly authenticated. This endpoint should not be used to algorithmically trigger duty status changes nor should it be used by personnel besides the driver to trigger duty status changes on the driver’s behalf. Carriers and their drivers are ultimately responsible for maintaining accurate logs and should confirm that their use of the endpoint is compliant with the ELD Mandate. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Hours of Service"
        ],
        "summary": "Set a duty status for a specific driver",
        "operationId": "setCurrentDutyStatus",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of the driver for whom the duty status is being set.",
            "name": "driver_id",
            "in": "path",
            "required": true
          },
          {
            "name": "dutyStatusParams",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "duty_status"
              ],
              "properties": {
                "duty_status": {
                  "description": "Duty status to set the driver to. The only supported values are 'ON_DUTY' and 'OFF_DUTY'.",
                  "type": "string",
                  "example": "ON_DUTY"
                },
                "location": {
                  "description": "Location to associate the duty status change with.",
                  "type": "string",
                  "example": "Loading dock"
                },
                "remark": {
                  "description": "Remark to associate the duty status change with.",
                  "type": "string",
                  "example": "Beginning On Duty Shift"
                },
                "status_change_at_ms": {
                  "description": "Timestamp that the duty status will begin at specified in milliseconds UNIX time. Defaults to the current time if left blank. This can only be set to up to 8 hours in the past.",
                  "type": "number",
                  "format": "int64",
                  "example": 1580834793568
                },
                "vehicle_id": {
                  "description": "Vehicle ID to associate the duty status change with.",
                  "type": "number",
                  "format": "int64",
                  "example": 1234
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully changed duty status. No response body is returned."
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/hos_authentication_logs": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet the HOS (hours of service) signin and signout logs for the specified driver. The response includes 4 fields that are now deprecated.\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected in the response from this endpoint. The best practice is to wait a couple of days before querying this endpoint to make sure that all data from the Samsara Driver App has been uploaded. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Hours of Service"
        ],
        "summary": "Get HOS signin and signout",
        "operationId": "V1getFleetHosAuthenticationLogs",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Driver ID to query.",
            "name": "driverId",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Beginning of the time range, specified in milliseconds UNIX time.",
            "name": "startMs",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "End of the time range, specified in milliseconds UNIX time.",
            "name": "endMs",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "HOS authentication logs for the specified driver.",
            "schema": {
              "$ref": "#/definitions/V1HosAuthenticationLogsResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/maintenance/list": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet list of the vehicles with any engine faults or check light data. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Maintenance"
        ],
        "summary": "Get vehicles with engine faults or check lights",
        "operationId": "V1getFleetMaintenanceList",
        "responses": {
          "200": {
            "description": "List of vehicles and maintenance information about each.",
            "schema": {
              "type": "object",
              "properties": {
                "vehicles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/V1VehicleMaintenance"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/messages": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet all messages. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Messages"
        ],
        "summary": "Get all messages.",
        "operationId": "V1getMessages",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Time in unix milliseconds that represents the end of time range of messages to return. Used in combination with durationMs. Defaults to now.",
            "name": "endMs",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Time in milliseconds that represents the duration before endMs to query. Defaults to 24 hours.",
            "name": "durationMs",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the fetched messages from most recently sent to least recently sent.",
            "schema": {
              "description": "A list of messages.",
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/V1MessagesResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nSend a message to a list of driver ids. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Messages"
        ],
        "summary": "Send a message to a list of driver ids.",
        "operationId": "V1createMessages",
        "parameters": [
          {
            "description": "Text to send to a list of driverIds.",
            "name": "createMessages",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "driverIds",
                "text"
              ],
              "properties": {
                "driverIds": {
                  "description": "IDs of the drivers for whom the messages are sent to.",
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "int64",
                    "example": 555
                  },
                  "example": [
                    111,
                    222,
                    333
                  ]
                },
                "text": {
                  "description": "The text sent in the message.",
                  "type": "string",
                  "example": "This is a message."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the created messages.",
            "schema": {
              "description": "A list of created messages.",
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/V1Messages"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/trailers/assignments": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch trailer assignment data for all trailers in your organization. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Trailer Assignments"
        ],
        "summary": "List trailer assignments for all trailers",
        "operationId": "V1getAllTrailerAssignments",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in Unix epoch miliseconds representing the start of the period to fetch. Omitting both startMs and endMs only returns current assignments.",
            "name": "startMs",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in Unix epoch miliseconds representing the end of the period to fetch. Omitting endMs sets endMs as the current time",
            "name": "endMs",
            "in": "query"
          },
          {
            "type": "number",
            "format": "int64",
            "description": "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter.",
            "name": "startingAfter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter.",
            "name": "endingBefore",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns trailer assignment data for all trailers in your organization",
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "$ref": "#/definitions/V1Pagination"
                },
                "trailers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/V1TrailerAssignmentsResponse"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/trailers/{trailerId}/assignments": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch trailer assignment data for a single trailer. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Trailer Assignments"
        ],
        "summary": "List trailer assignments for a given trailer",
        "operationId": "V1getFleetTrailerAssignments",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of trailer. Must contain only digits 0-9.",
            "name": "trailerId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in Unix epoch milliseconds representing the start of the period to fetch. Omitting both startMs and endMs only returns current assignments.",
            "name": "startMs",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in Unix epoch milliseconds representing the end of the period to fetch. Omitting endMs sets endMs as the current time",
            "name": "endMs",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns trailer assignment data for a single trailer",
            "schema": {
              "$ref": "#/definitions/V1TrailerAssignmentsResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/trips": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet historical trips data for specified vehicle. This method returns a set of historical trips data for the specified vehicle in the specified time range. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Trips"
        ],
        "summary": "Get vehicle trips",
        "operationId": "V1getFleetTrips",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Vehicle ID to query.",
            "name": "vehicleId",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Beginning of the time range, specified in milliseconds UNIX time. Limited to a 90 day window with respect to startMs and endMs",
            "name": "startMs",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "End of the time range, specified in milliseconds UNIX time.",
            "name": "endMs",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of trips taken by the requested vehicle within the specified timeframe. Ongoing trips will be returned with 9223372036854775807 as their endMs.",
            "schema": {
              "$ref": "#/definitions/V1TripResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/fleet/vehicles/{vehicleId}/safety/harsh_event": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch harsh event details for a vehicle. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Safety"
        ],
        "summary": "Fetch harsh events",
        "operationId": "V1getVehicleHarshEvent",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in milliseconds representing the timestamp of a harsh event.",
            "name": "timestamp",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Harsh event details.",
            "schema": {
              "$ref": "#/definitions/V1VehicleHarshEventResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "description": "ID of the vehicle. Must contain only digits 0-9.",
          "name": "vehicleId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/v1/fleet/vehicles/{vehicleId}/safety/score": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch the safety score for the vehicle. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Safety"
        ],
        "summary": "Fetch vehicle safety scores",
        "operationId": "V1getVehicleSafetyScore",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
            "name": "startMs",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
            "name": "endMs",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Safety score details.",
            "schema": {
              "$ref": "#/definitions/V1VehicleSafetyScoreResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "description": "ID of the vehicle. Must contain only digits 0-9.",
          "name": "vehicleId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/v1/industrial/vision/cameras": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch all cameras. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Fetch industrial cameras",
        "operationId": "V1getCameras",
        "responses": {
          "200": {
            "description": "Returns details about a camera.",
            "schema": {
              "$ref": "#/definitions/V1VisionCamerasResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/industrial/vision/cameras/{camera_id}/programs": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch configured programs on the camera. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Fetch industrial camera programs",
        "operationId": "V1getVisionProgramsByCamera",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "The camera_id should be valid for the given accessToken.",
            "name": "camera_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns programs configured on the camera.",
            "schema": {
              "$ref": "#/definitions/V1ProgramsForTheCameraResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/industrial/vision/run/camera/{camera_id}": {
      "get": {
        "description": "Fetch the latest run for a camera or program by default. If startedAtMs is supplied, fetch the specific run that corresponds to that start time. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Fetch the latest run for a camera or program",
        "operationId": "V1getVisionLatestRunCamera",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "The camera_id should be valid for the given accessToken.",
            "name": "camera_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "The configured program's ID on the camera.",
            "name": "program_id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "EndMs is an optional param. It will default to the current time.",
            "name": "startedAtMs",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'.",
            "name": "include",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Limit is an integer value from 1 to 1,000.",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the details for this run.",
            "schema": {
              "$ref": "#/definitions/V1VisionRunByCameraResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/industrial/vision/runs": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch runs. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Fetch runs",
        "operationId": "V1getVisionRuns",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched",
            "name": "durationMs",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "EndMs is an optional param. It will default to the current time.",
            "name": "endMs",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Return runs.",
            "schema": {
              "$ref": "#/definitions/V1VisionRunsResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/industrial/vision/runs/{camera_id}": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch runs by camera. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Fetch runs by camera",
        "operationId": "getVisionRunsByCamera",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "The camera_id should be valid for the given accessToken.",
            "name": "camera_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched",
            "name": "durationMs",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "EndMs is an optional param. It will default to the current time.",
            "name": "endMs",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Return runs by cameraId.",
            "schema": {
              "$ref": "#/definitions/V1VisionRunsByCameraResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/industrial/vision/runs/{camera_id}/{program_id}/{started_at_ms}": {
      "get": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nFetch runs by camera and program. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Fetch runs by camera and program",
        "operationId": "V1getVisionRunsByCameraAndProgram",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "The camera_id should be valid for the given accessToken.",
            "name": "camera_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "The configured program's ID on the camera.",
            "name": "program_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Started_at_ms is a required param. Indicates the start time of the run to be fetched.",
            "name": "started_at_ms",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'.",
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Return runs by camera ID and program ID.",
            "schema": {
              "$ref": "#/definitions/V1VisionRunsByCameraAndProgramResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/machines/history": {
      "post": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet historical data for machine objects. This method returns a set of historical data for all machines. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Get machine history",
        "operationId": "V1getMachinesHistory",
        "parameters": [
          {
            "description": "Time range to query for events",
            "name": "historyParam",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "startMs",
                "endMs"
              ],
              "properties": {
                "endMs": {
                  "description": "End of the time range, specified in milliseconds UNIX time.",
                  "type": "integer",
                  "example": 1462881998034
                },
                "startMs": {
                  "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                  "type": "integer",
                  "example": 1462878398034
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of machine results objects, each containing a time and a datapoint.",
            "schema": {
              "$ref": "#/definitions/V1MachineHistoryResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/machines/list": {
      "post": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet machine objects. This method returns a list of the machine objects in the Samsara Cloud and information about them. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Industrial"
        ],
        "summary": "Get machines",
        "operationId": "V1getMachines",
        "responses": {
          "200": {
            "description": "List of machine objects.",
            "schema": {
              "type": "object",
              "properties": {
                "machines": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/V1Machine"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/sensors/cargo": {
      "post": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet cargo monitor status (empty / full) for requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Sensors"
        ],
        "summary": "Get cargo status",
        "operationId": "V1getSensorsCargo",
        "parameters": [
          {
            "description": "List of sensor IDs to query.",
            "name": "V1sensorParam",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "sensors"
              ],
              "properties": {
                "sensors": {
                  "description": "List of sensor IDs to query.",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "example": [
                    122
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of sensor objects containing the current cargo status reported by each sensor.",
            "schema": {
              "$ref": "#/definitions/V1CargoResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/sensors/door": {
      "post": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet door monitor status (closed / open) for requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Sensors"
        ],
        "summary": "Get door status",
        "operationId": "V1getSensorsDoor",
        "parameters": [
          {
            "description": "List of sensor IDs to query.",
            "name": "V1sensorParam",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "sensors"
              ],
              "properties": {
                "sensors": {
                  "description": "List of sensor IDs to query.",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "example": [
                    122
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of sensor objects containing the current door status reported by each sensor.",
            "schema": {
              "$ref": "#/definitions/V1DoorResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/sensors/history": {
      "post": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet historical data for specified sensors. This method returns a set of historical data for the specified sensors in the specified time range and at the specified time resolution. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Sensors"
        ],
        "summary": "Get sensor history",
        "operationId": "V1getSensorsHistory",
        "parameters": [
          {
            "description": "Time range and resolution, and list of sensor ID, field pairs to query.",
            "name": "historyParam",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "startMs",
                "endMs",
                "stepMs",
                "series"
              ],
              "properties": {
                "endMs": {
                  "description": "End of the time range, specified in milliseconds UNIX time.",
                  "type": "integer",
                  "example": 1462881998034
                },
                "fillMissing": {
                  "type": "string",
                  "default": "withNull",
                  "enum": [
                    "withNull",
                    "withPrevious"
                  ]
                },
                "series": {
                  "type": "array",
                  "maxItems": 40,
                  "items": {
                    "description": "V1Sensor ID and field to query.",
                    "type": "object",
                    "required": [
                      "widgetId",
                      "field"
                    ],
                    "properties": {
                      "field": {
                        "description": "Field to query.",
                        "type": "string",
                        "enum": [
                          "ambientTemperature",
                          "cargoPercent",
                          "currentLoop1Raw",
                          "currentLoop1Mapped",
                          "currentLoop2Raw",
                          "currentLoop2Mapped",
                          "doorClosed",
                          "humidity",
                          "pmPowerTotal",
                          "pmPhase1Power",
                          "pmPhase2Power",
                          "pmPhase3Power",
                          "pmPhase1PowerFactor",
                          "pmPhase2PowerFactor",
                          "pmPhase3PowerFactor",
                          "probeTemperature"
                        ],
                        "example": "ambientTemperature"
                      },
                      "widgetId": {
                        "description": "V1Sensor ID to query.",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                      }
                    }
                  }
                },
                "startMs": {
                  "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                  "type": "integer",
                  "example": 1462878398034
                },
                "stepMs": {
                  "description": "Time resolution for which data should be returned, in milliseconds. Specifying 3600000 will return data at hour intervals.",
                  "type": "integer",
                  "example": 3600000
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of results objects, each containing a time and a datapoint for each requested sensor/field pair.",
            "schema": {
              "$ref": "#/definitions/V1SensorHistoryResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/sensors/humidity": {
      "post": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet humidity for requested sensors. This method returns the current relative humidity for the requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Sensors"
        ],
        "summary": "Get humidity",
        "operationId": "V1getSensorsHumidity",
        "parameters": [
          {
            "description": "List of sensor IDs to query.",
            "name": "V1sensorParam",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "sensors"
              ],
              "properties": {
                "sensors": {
                  "description": "List of sensor IDs to query.",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "example": [
                    122
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of sensor objects containing the current humidity reported by each sensor.",
            "schema": {
              "$ref": "#/definitions/V1HumidityResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/sensors/list": {
      "post": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet sensor objects. This method returns a list of the sensor objects in the Samsara Cloud and information about them. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Sensors"
        ],
        "summary": "Get all sensors",
        "operationId": "V1getSensors",
        "responses": {
          "200": {
            "description": "List of sensor objects.",
            "schema": {
              "type": "object",
              "properties": {
                "sensors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/V1Sensor"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/sensors/temperature": {
      "post": {
        "description": "\u003cn class=\"warning\"\u003e\n\u003cnh\u003e\n\u003ci class=\"fa fa-exclamation-circle\"\u003e\u003c/i\u003e\nThis endpoint is still on our legacy API.\n\u003c/nh\u003e\n\u003c/n\u003e\n\nGet temperature for requested sensors. This method returns the current ambient temperature (and probe temperature if applicable) for the requested sensors. \n\n **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our \u003ca href=\"https://forms.gle/zkD4NCH7HjKb7mm69\" target=\"_blank\"\u003eAPI feedback form\u003c/a\u003e. If you encountered an issue or noticed inaccuracies in the API documentation, please \u003ca href=\"https://www.samsara.com/help\" target=\"_blank\"\u003esubmit a case\u003c/a\u003e to our support team.",
        "tags": [
          "Sensors"
        ],
        "summary": "Get temperature",
        "operationId": "V1getSensorsTemperature",
        "parameters": [
          {
            "description": "List of sensor IDs to query.",
            "name": "V1sensorParam",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "sensors"
              ],
              "properties": {
                "sensors": {
                  "description": "List of sensor IDs to query.",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "example": [
                    122
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of sensor objects containing the current temperature reported by each sensor.",
            "schema": {
              "$ref": "#/definitions/V1TemperatureResponse"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/V1ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessoryResponseObjectResponseBody": {
      "description": "An object containing information about an accessory connected to the VG.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Product model name of the device",
          "type": "string",
          "example": "EM11"
        },
        "serial": {
          "description": "The serial number of the accessory device.",
          "type": "string",
          "example": "ABCD-123-EFG"
        }
      }
    },
    "Address": {
      "description": "An Address object.",
      "type": "object",
      "required": [
        "formattedAddress",
        "geofence",
        "id",
        "name"
      ],
      "properties": {
        "addressTypes": {
          "description": "Reporting location type associated with the address (used for ELD reporting purposes).",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "yard",
              "shortHaul",
              "workforceSite",
              "riskZone",
              "industrialSite"
            ],
            "example": "yard"
          }
        },
        "contacts": {
          "description": "An array Contact mini-objects that are associated the Address.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/contactTinyResponse"
          }
        },
        "createdAtTime": {
          "description": "The date and time this address was created in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2019-05-18T20:27:35Z"
        },
        "externalIds": {
          "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
          "type": "object",
          "example": {
            "maintenanceId": "250020",
            "payrollId": "ABFS18600"
          }
        },
        "formattedAddress": {
          "description": "The full street address for this address/geofence, as it might be recognized by Google Maps.",
          "type": "string",
          "maxLength": 1024,
          "example": "350 Rhode Island St, San Francisco, CA"
        },
        "geofence": {
          "$ref": "#/definitions/AddressGeofence"
        },
        "id": {
          "description": "ID of the Address.",
          "type": "string",
          "example": "22408"
        },
        "latitude": {
          "description": "Latitude of the address. Will be geocoded from `formattedAddress` if not provided.",
          "type": "number",
          "format": "double",
          "example": 37.765363
        },
        "longitude": {
          "description": "Longitude of the address. Will be geocoded from `formattedAddress` if not provided.",
          "type": "number",
          "format": "double",
          "example": -122.4029238
        },
        "name": {
          "description": "Name of the address.",
          "type": "string",
          "maxLength": 255,
          "example": "Samsara HQ"
        },
        "notes": {
          "description": "Notes about the address.",
          "type": "string",
          "maxLength": 280,
          "example": "Hours of operation: 8am - 6pm; Truck entrance on the Rhode Island street side."
        },
        "tags": {
          "description": "An array of all tag mini-objects that are associated with the given address entry.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/tagTinyResponse"
          }
        }
      }
    },
    "AddressGeofence": {
      "description": "The geofence that defines this address and its bounds. This can either be a circle or a polygon, but not both.",
      "type": "object",
      "properties": {
        "circle": {
          "description": "Information about a circular geofence. This field is only needed if the geofence is a circle.",
          "type": "object",
          "required": [
            "radiusMeters"
          ],
          "properties": {
            "latitude": {
              "description": "Latitude of the address. Will be geocoded from `formattedAddress` if not provided.",
              "type": "number",
              "format": "double",
              "example": 37.765363
            },
            "longitude": {
              "description": "Longitude of the address. Will be geocoded from `formattedAddress` if not provided.",
              "type": "number",
              "format": "double",
              "example": -122.4029238
            },
            "radiusMeters": {
              "description": "The radius of the circular geofence in meters.",
              "type": "integer",
              "format": "int64",
              "example": 25
            }
          }
        },
        "polygon": {
          "description": "Information about a polygon geofence. This field is only needed if the geofence is a polygon.",
          "type": "object",
          "required": [
            "vertices"
          ],
          "properties": {
            "vertices": {
              "description": "The vertices of the polygon geofence. These geofence vertices describe the perimeter of the polygon, and must consist of at least 3 vertices and less than 40.",
              "type": "array",
              "maxItems": 40,
              "minItems": 3,
              "items": {
                "type": "object",
                "required": [
                  "latitude",
                  "longitude"
                ],
                "properties": {
                  "latitude": {
                    "description": "The latitude of a geofence vertex in decimal degrees.",
                    "type": "number",
                    "format": "double"
                  },
                  "longitude": {
                    "description": "The longitude of a geofence vertex in decimal degrees.",
                    "type": "number",
                    "format": "double"
                  }
                }
              },
              "example": [
                {
                  "latitude": 37.765363,
                  "longitude": -122.403098
                },
                {
                  "latitude": 38.765363,
                  "longitude": -122.403098
                },
                {
                  "latitude": 37.765363,
                  "longitude": -123.403098
                }
              ]
            }
          }
        }
      }
    },
    "AddressResponse": {
      "description": "An Address response body.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "AempEquipmentGetAempEquipmentBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AempEquipmentGetAempEquipmentBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AempEquipmentGetAempEquipmentGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AempEquipmentGetAempEquipmentInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AempEquipmentGetAempEquipmentMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AempEquipmentGetAempEquipmentNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AempEquipmentGetAempEquipmentNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AempEquipmentGetAempEquipmentResponseBody": {
      "type": "object",
      "required": [
        "Fleet"
      ],
      "properties": {
        "Fleet": {
          "$ref": "#/definitions/AempFleetResponseBody"
        }
      }
    },
    "AempEquipmentGetAempEquipmentServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AempEquipmentGetAempEquipmentTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AempEquipmentGetAempEquipmentUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AempEquipmentResponseBody": {
      "description": "Contains equipment fields.",
      "type": "object",
      "required": [
        "EquipmentHeader",
        "Location",
        "CumulativeOperatingHours",
        "Distance",
        "FuelRemaining",
        "DEFRemaining",
        "EngineStatus"
      ],
      "properties": {
        "CumulativeOperatingHours": {
          "$ref": "#/definitions/CumulativeOperatingHoursResponseBody"
        },
        "DEFRemaining": {
          "$ref": "#/definitions/DEFRemainingResponseBody"
        },
        "Distance": {
          "$ref": "#/definitions/DistanceResponseBody"
        },
        "EngineStatus": {
          "$ref": "#/definitions/EngineStatusResponseBody"
        },
        "EquipmentHeader": {
          "$ref": "#/definitions/EquipmentHeaderResponseBody"
        },
        "FuelRemaining": {
          "$ref": "#/definitions/FuelRemainingResponseBody"
        },
        "Location": {
          "$ref": "#/definitions/LocationResponseBody"
        }
      }
    },
    "AempFleetResponseBody": {
      "description": "Contains equipment object",
      "type": "object",
      "required": [
        "Equipment"
      ],
      "properties": {
        "Equipment": {
          "$ref": "#/definitions/AempEquipmentResponseBody"
        }
      }
    },
    "AssetCreate": {
      "description": "The asset creation arguments",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "customMetadata": {
          "$ref": "#/definitions/CustomMetadata"
        },
        "location": {
          "$ref": "#/definitions/AssetLocation"
        },
        "locationDataInputId": {
          "description": "Required if locationType is \"dataInput\". Specifies the id of a location data input which will determine the asset's location. **The data input will be moved to the new asset.**",
          "type": "string",
          "example": "12345"
        },
        "locationType": {
          "$ref": "#/definitions/LocationType"
        },
        "name": {
          "$ref": "#/definitions/AssetName"
        },
        "parentId": {
          "$ref": "#/definitions/ParentId"
        },
        "runningStatusDataInputId": {
          "description": "The asset's isRunning status will be true when the associated data input's value is 1. Data input cannot be of location format. **The data input will be moved to the new asset.**",
          "type": "string",
          "example": "67890"
        },
        "tagIds": {
          "$ref": "#/definitions/TagIds"
        }
      }
    },
    "AssetDataInput": {
      "type": "object",
      "properties": {
        "dataGroup": {
          "description": "Name of the data group that the data input is associated with",
          "type": "string",
          "example": "Pressure"
        },
        "id": {
          "description": "ID of the data input",
          "type": "string",
          "example": "123456"
        },
        "lastPoint": {
          "description": "The last reported point of a data input.",
          "type": "object",
          "properties": {
            "time": {
              "$ref": "#/definitions/time"
            },
            "value": {
              "description": "Numeric value of the data point.",
              "type": "number",
              "format": "double",
              "example": 1992.0506
            }
          }
        },
        "name": {
          "description": "Name of the data input",
          "type": "string",
          "example": "Digital Input 1"
        },
        "units": {
          "description": "Units of data for this data input",
          "type": "string",
          "example": "PSI"
        }
      }
    },
    "AssetDataOutput": {
      "type": "object",
      "properties": {
        "dataGroup": {
          "description": "Name of the data group that the data output is associated with",
          "type": "string",
          "example": "Control Pressure"
        },
        "dataInput": {
          "$ref": "#/definitions/AssetDataInput"
        },
        "deviceId": {
          "description": "ID of the device that the data output is configured on",
          "type": "string",
          "example": "123"
        },
        "id": {
          "description": "ID of the data output",
          "type": "string",
          "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
        },
        "name": {
          "description": "Name of the data output",
          "type": "string",
          "example": "Digital Output 1"
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsRequestBody": {
      "type": "object",
      "required": [
        "values"
      ],
      "properties": {
        "values": {
          "description": "A map of data output IDs to values. All data outputs must belong to the same asset. Only the specified IDs will be written to.",
          "type": "object",
          "additionalProperties": true,
          "example": {
            "4ebd0208-8328-5d69-8c44-ec50939c0967": 10.123,
            "8a9371af-82d1-4158-bf91-4ecc8d3a114c": 10
          }
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsResponseBody": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "List of responses for each data output from the original request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatchAssetDataOutputsSingleResponseResponseBody"
          }
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AssetDataOutputsPatchAssetDataOutputsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "AssetLocation": {
      "description": "For locationType \"point\", latitude and longitude are required. For \"address\", formattedAddress must be provided, and lat/long can be optionally included for displaying a dot on the assets map. For \"dataInput\", this object should not be passed in.",
      "type": "object",
      "properties": {
        "formattedAddress": {
          "description": "Formatted address of the location",
          "type": "string",
          "example": "350 Rhode Island St, San Francisco CA, 94103"
        },
        "latitude": {
          "$ref": "#/definitions/latitude"
        },
        "longitude": {
          "$ref": "#/definitions/longitude"
        }
      }
    },
    "AssetName": {
      "description": "The name of the asset.",
      "type": "string"
    },
    "AssetPatch": {
      "description": "The asset creation arguments",
      "type": "object",
      "properties": {
        "customMetadata": {
          "$ref": "#/definitions/CustomMetadata"
        },
        "location": {
          "$ref": "#/definitions/AssetLocation"
        },
        "locationDataInputId": {
          "description": "Required if locationType is \"dataInput\". Specifies the id of a location data input which will determine the asset's location. The data input must be in the asset.",
          "type": "string",
          "example": "12345"
        },
        "locationType": {
          "$ref": "#/definitions/LocationType"
        },
        "name": {
          "$ref": "#/definitions/AssetName"
        },
        "parentId": {
          "description": "The id of the parent asset that the asset belongs to. Pass in an empty string to remove the child from the parent.",
          "type": "string",
          "example": ""
        },
        "runningStatusDataInputId": {
          "description": "The asset's isRunning status will be true when the associated data input's value is 1. Data input cannot be of location format. The data input must be in the asset.",
          "type": "string",
          "example": "67890"
        },
        "tagIds": {
          "$ref": "#/definitions/TagIds"
        }
      }
    },
    "AssetResponse": {
      "description": "Asset",
      "type": "object",
      "required": [
        "name",
        "id",
        "isRunning"
      ],
      "properties": {
        "customMetadata": {
          "$ref": "#/definitions/CustomMetadata"
        },
        "dataOutputs": {
          "description": "The list of data outputs configured on the asset.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetDataOutput"
          }
        },
        "id": {
          "description": "The id of the asset",
          "type": "string",
          "example": "123abcde-4567-8910-1112-fghi1314jklm"
        },
        "isRunning": {
          "description": "The running status of the asset. Returns True for On, and False for Off.",
          "type": "boolean"
        },
        "location": {
          "$ref": "#/definitions/AssetLocation"
        },
        "locationDataInput": {
          "description": "The associated location data input (only applicable when locationType is \"dataInput\").",
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "description": "Id of the data input",
              "type": "string"
            }
          }
        },
        "locationType": {
          "$ref": "#/definitions/LocationType"
        },
        "name": {
          "$ref": "#/definitions/AssetName"
        },
        "parentAsset": {
          "description": "The asset's parent",
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "properties": {
            "id": {
              "$ref": "#/definitions/ParentId"
            },
            "name": {
              "$ref": "#/definitions/AssetName"
            }
          }
        },
        "runningStatusDataInput": {
          "description": "The associated running status data input. isRunning will be true when the data input's value is 1.",
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "description": "Id of the data input",
              "type": "string",
              "example": "12345"
            }
          }
        },
        "tags": {
          "description": "The list of [tags](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting) associated with the Industrial Asset. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/tagTinyResponse"
          }
        }
      }
    },
    "Attribute": {
      "type": "object",
      "properties": {
        "attributeType": {
          "description": "Denotes the data type of the attribute's values.",
          "type": "string",
          "default": "string",
          "enum": [
            "string",
            "number"
          ],
          "example": "string"
        },
        "attributeValueQuantity": {
          "description": "Defines whether or not this attribute can be used on the same entity many times (with different values).",
          "type": "string",
          "default": "multi",
          "enum": [
            "single",
            "multi"
          ],
          "example": "multi"
        },
        "entityType": {
          "description": "Denotes the type of entity, driver or aset.",
          "type": "string",
          "enum": [
            "driver",
            "asset"
          ],
          "example": "asset"
        },
        "id": {
          "description": "The samsara id of the attribute object.",
          "type": "string",
          "example": "123e4567-e89b-12d3-a456-426614174000"
        },
        "name": {
          "description": "Name of attribute.",
          "type": "string",
          "example": "License Certifications"
        },
        "numberValues": {
          "description": "Number values that can be associated with this attribute",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "stringValues": {
          "description": "String values that can be associated with this attribute",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AttributeEntity": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "integer",
          "format": "int64"
        },
        "externalIds": {
          "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
          "type": "object",
          "example": {
            "maintenanceId": "250020",
            "payrollId": "ABFS18600"
          }
        },
        "name": {
          "type": "string"
        },
        "numberValues": {
          "description": "Number values that are associated with this attribute.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "stringValues": {
          "description": "String values that are associated with this attribute.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AttributeExpanded": {
      "allOf": [
        {
          "$ref": "#/definitions/Attribute"
        },
        {
          "type": "object",
          "required": [
            "entities"
          ],
          "properties": {
            "entities": {
              "description": "Entities that this attribute is applied onto",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttributeEntity"
              }
            }
          }
        }
      ]
    },
    "AttributeExpandedResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/AttributeExpanded"
        }
      }
    },
    "AttributeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Attribute"
        }
      }
    },
    "BehaviorLabelsObjectResponseBody": {
      "description": "The most up-to-date behavior labels associated with the safety event. These labels can be updated by the Safety Report Admin.",
      "type": "object",
      "properties": {
        "label": {
          "description": "The label associated with the safety event. This list often changes, so it is recommended that clients gracefully handle any types not enumerated in this list.",
          "type": "string",
          "enum": [
            "invalid",
            "genericTailgating",
            "genericDistraction",
            "defensiveDriving",
            "rollingStop",
            "nearCollision",
            "speeding",
            "obstructedCamera",
            "didNotYield",
            "noSeatbelt",
            "mobileUsage",
            "drowsy",
            "laneDeparture",
            "followingDistanceSevere",
            "followingDistanceModerate",
            "lateResponse",
            "acceleration",
            "braking",
            "harshTurn",
            "crash",
            "rolloverProtection",
            "yawControl",
            "ranRedLight",
            "forwardCollisionWarning",
            "eatingDrinking",
            "smoking",
            "followingDistance",
            "edgeDistractedDriving",
            "policyViolationMask",
            "eating",
            "drinking",
            "edgeRailroadCrossingViolation"
          ],
          "example": "genericTailgating"
        },
        "source": {
          "description": "The source of the label associated with the safety event.",
          "type": "string",
          "enum": [
            "invalid",
            "system",
            "samsaraUser",
            "customerUser",
            "dataMigration",
            "device",
            "driverUser"
          ],
          "example": "automated"
        }
      }
    },
    "CameraMediaGetCameraMediaBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "CameraMediaGetCameraMediaBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "CameraMediaGetCameraMediaGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "CameraMediaGetCameraMediaInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "CameraMediaGetCameraMediaMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "CameraMediaGetCameraMediaNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "CameraMediaGetCameraMediaNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "CameraMediaGetCameraMediaResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of vehicle and their camera media.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleCameraMediaObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "CameraMediaGetCameraMediaServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "CameraMediaGetCameraMediaTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "CameraMediaGetCameraMediaUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "CameraObjectResponseBody": {
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the camera.",
          "type": "string",
          "example": "230942"
        },
        "images": {
          "description": "List of image objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageObjectResponseBody"
          }
        },
        "name": {
          "description": "Name of the camera.",
          "type": "string",
          "example": "GTTU-ASS-UXD"
        },
        "serial": {
          "description": "Serial of the camera.",
          "type": "string",
          "example": "CSS6-23A-HJF"
        }
      }
    },
    "CameraSerial": {
      "description": "The serial number of the camera installed in the vehicle",
      "type": "string",
      "example": "CNCK-VT8-XA8"
    },
    "CarrierProposedAssignment": {
      "description": "A carrier proposed assignment object",
      "type": "object",
      "required": [
        "id",
        "activeTime"
      ],
      "properties": {
        "acceptedTime": {
          "$ref": "#/definitions/CarrierProposedAssignmentAcceptedTime"
        },
        "activeTime": {
          "$ref": "#/definitions/CarrierProposedAssignmentActiveTime"
        },
        "driver": {
          "$ref": "#/definitions/CarrierProposedAssignmentDriver"
        },
        "firstSeenTime": {
          "$ref": "#/definitions/CarrierProposedAssignmentFirstSeenTime"
        },
        "id": {
          "$ref": "#/definitions/CarrierProposedAssignmentId"
        },
        "rejectedTime": {
          "$ref": "#/definitions/CarrierProposedAssignmentRejectedTime"
        },
        "shippingDocs": {
          "$ref": "#/definitions/CarrierProposedAssignmentShippingDocs"
        },
        "trailers": {
          "$ref": "#/definitions/CarrierProposedAssignmentTrailers"
        },
        "vehicle": {
          "$ref": "#/definitions/CarrierProposedAssignmentVehicle"
        }
      }
    },
    "CarrierProposedAssignmentAcceptedTime": {
      "description": "Time when the driver accepted this assignment in the mobile app. Will be omitted if the driver hasn't accepted this assignment. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
      "type": "string",
      "example": "2020-01-27T07:06:25Z"
    },
    "CarrierProposedAssignmentActiveTime": {
      "description": "Time after which this assignment will be active and visible to the driver on the mobile app. Not setting it makes it active now. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
      "type": "string",
      "example": "2020-01-27T07:06:25Z"
    },
    "CarrierProposedAssignmentDriver": {
      "allOf": [
        {
          "description": "The driver that this assignment is for."
        },
        {
          "$ref": "#/definitions/driverTinyResponse"
        }
      ]
    },
    "CarrierProposedAssignmentDriverId": {
      "description": "Samsara ID for the driver that this assignment is for.",
      "type": "string",
      "example": "42"
    },
    "CarrierProposedAssignmentFirstSeenTime": {
      "description": "Time when the driver first saw this assignment in the mobile app. Will be omitted if the driver hasn't seen this assignment yet. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
      "type": "string",
      "example": "2020-01-27T07:06:25Z"
    },
    "CarrierProposedAssignmentId": {
      "description": "Samsara ID for the assignment.",
      "type": "string",
      "example": "08b3aeada5f4ab3010c0b4efa28d2d1890dbf8d48d2d"
    },
    "CarrierProposedAssignmentRejectedTime": {
      "description": "Time when the driver rejected this assignment in the mobile app. Will be omitted if the driver hasn't rejected this assignment. RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
      "type": "string",
      "example": "2020-01-27T07:06:25Z"
    },
    "CarrierProposedAssignmentResponse": {
      "description": "A carrier-proposed assignment response object.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/CarrierProposedAssignment"
        }
      }
    },
    "CarrierProposedAssignmentShippingDocs": {
      "description": "Shipping Documents that this assignment will propose to the driver.",
      "type": "string",
      "maxLength": 40,
      "example": "Delivery 123, chips and soda"
    },
    "CarrierProposedAssignmentTrailerNames": {
      "description": "Names of trailers to propose.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "example": [
        "Trailer123",
        "TrailerABC"
      ]
    },
    "CarrierProposedAssignmentTrailers": {
      "description": "Trailers that this assignment will propose to the driver.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/trailerNameOnlyResponse"
      }
    },
    "CarrierProposedAssignmentVehicle": {
      "allOf": [
        {
          "description": "Vehicle that this assignment will propose to the driver."
        },
        {
          "$ref": "#/definitions/vehicleTinyResponse"
        }
      ]
    },
    "CarrierProposedAssignmentVehicleId": {
      "description": "Samsara ID for the vehicle to propose.",
      "type": "string",
      "example": "123"
    },
    "ConnectionStatusResponseObjectResponseBody": {
      "description": "An objecting containing information about the connectivity status of the gateway",
      "type": "object",
      "properties": {
        "healthStatus": {
          "description": "The most recent health status of the gateway.",
          "type": "string",
          "enum": [
            "Status Not Set",
            "Connected",
            "Not Installed",
            "Power Source Off - Active Vehicle",
            "Power Source Off - Inactive Vehicle",
            "Weak Cellular Signal",
            "Requires Investigation",
            "Requires Charge",
            "Unsupported Product",
            "Low Battery. Replace Device.",
            "Low Vehicle Battery",
            "Unplugged",
            "Low Charging State",
            "Vehicle Off",
            "Weak GPS Signal",
            "Low Gateway Battery",
            "Low Gateway Battery (AG24)",
            "Low Gateway Battery (AG45)",
            "Low Gateway Battery (AG26)",
            "Low Gateway Battery (AG46)",
            "Low Gateway Battery (AG46-P)",
            "Temporarily Offline",
            "Prolonged Offline",
            "Recently Offline",
            "Replacement Required",
            "Status Unknown"
          ],
          "example": "Not Installed"
        },
        "lastConnected": {
          "description": "The last time the gateway was connected in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        }
      }
    },
    "Contact": {
      "description": "Information about a notification contact for alerts.",
      "type": "object",
      "required": [
        "id",
        "firstName",
        "lastName",
        "email",
        "phone"
      ],
      "properties": {
        "email": {
          "$ref": "#/definitions/ContactEmail"
        },
        "firstName": {
          "$ref": "#/definitions/ContactFirstName"
        },
        "id": {
          "$ref": "#/definitions/ContactId"
        },
        "lastName": {
          "$ref": "#/definitions/ContactLastName"
        },
        "phone": {
          "$ref": "#/definitions/ContactPhone"
        }
      }
    },
    "ContactEmail": {
      "description": "Email address of the contact.",
      "type": "string",
      "maxLength": 255,
      "example": "jane.jones@yahoo.com"
    },
    "ContactFirstName": {
      "description": "First name of the contact.",
      "type": "string",
      "maxLength": 255,
      "example": "Jane"
    },
    "ContactId": {
      "description": "ID of the contact.",
      "type": "string",
      "example": "22408"
    },
    "ContactLastName": {
      "description": "Last name of the contact.",
      "type": "string",
      "maxLength": 255,
      "example": "Jones"
    },
    "ContactPhone": {
      "description": "Phone number of the contact.",
      "type": "string",
      "maxLength": 255,
      "example": "111-222-3344"
    },
    "ContactResponse": {
      "description": "A single contact.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Contact"
        }
      }
    },
    "CreateAddressRequest": {
      "description": "A request body to create an Address.",
      "type": "object",
      "required": [
        "formattedAddress",
        "geofence",
        "name"
      ],
      "properties": {
        "addressTypes": {
          "description": "Reporting location type associated with the address (used for ELD reporting purposes).",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "yard",
              "shortHaul",
              "workforceSite"
            ],
            "example": "yard"
          }
        },
        "contactIds": {
          "description": "An array of Contact IDs associated with this Address.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "22408"
          }
        },
        "externalIds": {
          "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "maintenanceId": "250020",
            "payrollId": "ABFS18600"
          }
        },
        "formattedAddress": {
          "description": "The full street address for this address/geofence, as it might be recognized by Google Maps.",
          "type": "string",
          "maxLength": 1024,
          "example": "350 Rhode Island St, San Francisco, CA"
        },
        "geofence": {
          "description": "The geofence that defines this address and its bounds. This can either be a circle or a polygon, but not both.",
          "type": "object",
          "properties": {
            "circle": {
              "description": "Information about a circular geofence. This field is only needed if the geofence is a circle.",
              "type": "object",
              "required": [
                "radiusMeters"
              ],
              "properties": {
                "latitude": {
                  "description": "Latitude of the address. Will be geocoded from `formattedAddress` if not provided.",
                  "type": "number",
                  "format": "double",
                  "example": 37.765363
                },
                "longitude": {
                  "description": "Longitude of the address. Will be geocoded from `formattedAddress` if not provided.",
                  "type": "number",
                  "format": "double",
                  "example": -122.4029238
                },
                "radiusMeters": {
                  "description": "The radius of the circular geofence in meters.",
                  "type": "integer",
                  "format": "int64",
                  "example": 25
                }
              }
            },
            "polygon": {
              "description": "Information about a polygon geofence. This field is only needed if the geofence is a polygon.",
              "type": "object",
              "required": [
                "vertices"
              ],
              "properties": {
                "vertices": {
                  "description": "The vertices of the polygon geofence. These geofence vertices describe the perimeter of the polygon, and must consist of at least 3 vertices and less than 40.",
                  "type": "array",
                  "maxItems": 40,
                  "minItems": 3,
                  "items": {
                    "type": "object",
                    "required": [
                      "latitude",
                      "longitude"
                    ],
                    "properties": {
                      "latitude": {
                        "description": "The latitude of a geofence vertex in decimal degrees.",
                        "type": "number",
                        "format": "double"
                      },
                      "longitude": {
                        "description": "The longitude of a geofence vertex in decimal degrees.",
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "example": [
                    {
                      "latitude": 37.765363,
                      "longitude": -122.403098
                    },
                    {
                      "latitude": 38.765363,
                      "longitude": -122.403098
                    },
                    {
                      "latitude": 37.765363,
                      "longitude": -123.403098
                    }
                  ]
                }
              }
            }
          }
        },
        "latitude": {
          "description": "Latitude of the address. Will be geocoded from `formattedAddress` if not provided.",
          "type": "number",
          "format": "double",
          "example": 37.765363
        },
        "longitude": {
          "description": "Longitude of the address. Will be geocoded from `formattedAddress` if not provided.",
          "type": "number",
          "format": "double",
          "example": -122.4029238
        },
        "name": {
          "description": "Name of the address.",
          "type": "string",
          "maxLength": 255,
          "example": "Samsara HQ"
        },
        "notes": {
          "description": "Notes about the address.",
          "type": "string",
          "maxLength": 280,
          "example": "Hours of operation: 8am - 6pm; Truck entrance on the Rhode Island street side."
        },
        "tagIds": {
          "description": "An array of IDs of tags to associate with this address.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "3914"
          }
        }
      }
    },
    "CreateAttributeRequest": {
      "description": "A request body to create an Attribute.",
      "type": "object",
      "required": [
        "name",
        "entityType",
        "attributeType",
        "attributeValueQuantity"
      ],
      "properties": {
        "attributeType": {
          "description": "Denotes the data type of the attribute's values.",
          "type": "string",
          "default": "string",
          "enum": [
            "string",
            "number"
          ],
          "example": "string"
        },
        "attributeValueQuantity": {
          "description": "Defines whether or not this attribute can be used on the same entity many times (with different values).",
          "type": "string",
          "default": "multi",
          "enum": [
            "single",
            "multi"
          ],
          "example": "multi"
        },
        "entities": {
          "description": "Entities that will be applied to this attribute",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "entityId": {
                "description": "Entity id, based on the entity type.",
                "type": "string"
              },
              "externalIds": {
                "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "maintenanceId": "250020",
                  "payrollId": "ABFS18600"
                }
              },
              "numberValues": {
                "description": "Number values that can be associated with this attribute",
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "double"
                }
              },
              "stringValues": {
                "description": "String values that can be associated with this attribute",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "entityType": {
          "description": "Denotes the type of entity, driver or asset.",
          "type": "string",
          "enum": [
            "driver",
            "asset"
          ],
          "example": "asset"
        },
        "name": {
          "description": "Name",
          "type": "string",
          "example": "License Certifications"
        },
        "numberValues": {
          "description": "Number values that can be associated with this attribute",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "stringValues": {
          "description": "String values that can be associated with this attribute",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateCarrierProposedAssignmentRequest": {
      "description": "New assignment for a driver.",
      "type": "object",
      "required": [
        "driverId",
        "vehicleId"
      ],
      "properties": {
        "activeTime": {
          "description": "Time after which this assignment will be active and visible to the driver on the mobile app. Not setting it makes it active now. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "driverId": {
          "description": "Samsara ID for the driver that this assignment is for.",
          "type": "string",
          "example": "42"
        },
        "shippingDocs": {
          "description": "Shipping Documents that this assignment will propose to the driver.",
          "type": "string",
          "maxLength": 40,
          "example": "Delivery 123, chips and soda"
        },
        "trailerNames": {
          "description": "Names of trailers to propose.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "Trailer123",
            "TrailerABC"
          ]
        },
        "vehicleId": {
          "description": "Samsara ID for the vehicle to propose.",
          "type": "string",
          "example": "123"
        }
      }
    },
    "CreateContactRequest": {
      "description": "Information for adding a notification contact for alerts.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Email address of the contact.",
          "type": "string",
          "maxLength": 255,
          "example": "jane.jones@yahoo.com"
        },
        "firstName": {
          "description": "First name of the contact.",
          "type": "string",
          "maxLength": 255,
          "example": "Jane"
        },
        "lastName": {
          "description": "Last name of the contact.",
          "type": "string",
          "maxLength": 255,
          "example": "Jones"
        },
        "phone": {
          "description": "Phone number of the contact.",
          "type": "string",
          "maxLength": 255,
          "example": "111-222-3344"
        }
      }
    },
    "CreateDriverRequest": {
      "description": "Driver that should be created.",
      "type": "object",
      "required": [
        "name",
        "username",
        "password"
      ],
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "description": "A minified attribute.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The samsara id of the attribute object.",
                "type": "string",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "name": {
                "description": "Name of attribute.",
                "type": "string",
                "example": "License Certifications"
              },
              "numberValues": {
                "description": "Number values that are associated with this attribute.",
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "double"
                }
              },
              "stringValues": {
                "description": "String values that are associated with this attribute.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "carrierSettings": {
          "$ref": "#/definitions/DriverCarrierSettings"
        },
        "currentIdCardCode": {
          "description": "The ID Card Code on the back of the physical card assigned to the driver.  Contact Samsara if you would like to enable this feature.",
          "type": "string",
          "example": "941767043"
        },
        "eldAdverseWeatherExemptionEnabled": {
          "description": "Flag indicating this driver may use Adverse Weather exemptions in ELD logs.",
          "type": "boolean"
        },
        "eldBigDayExemptionEnabled": {
          "description": "Flag indicating this driver may use Big Day exemption in ELD logs.",
          "type": "boolean"
        },
        "eldDayStartHour": {
          "description": "`0` indicating midnight-to-midnight ELD driving hours, `12` to indicate noon-to-noon driving hours.",
          "type": "integer"
        },
        "eldExempt": {
          "description": "Flag indicating this driver is exempt from the Electronic Logging Mandate.",
          "type": "boolean"
        },
        "eldExemptReason": {
          "description": "Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt).",
          "type": "string",
          "example": "Bad driver"
        },
        "eldPcEnabled": {
          "description": "Flag indicating this driver may select the Personal Conveyance duty status in ELD logs.",
          "type": "boolean"
        },
        "eldYmEnabled": {
          "description": "Flag indicating this driver may select the Yard Move duty status in ELD logs.",
          "type": "boolean"
        },
        "externalIds": {
          "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "maintenanceId": "250020",
            "payrollId": "ABFS18600"
          }
        },
        "licenseNumber": {
          "description": "Driver's state issued license number. The combination of this number and `licenseState` must be unique.",
          "type": "string",
          "example": "E1234567"
        },
        "licenseState": {
          "description": "Abbreviation of US state, Canadian province, or US territory that issued driver's license.",
          "type": "string",
          "example": "CA"
        },
        "locale": {
          "description": "Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales.",
          "type": "string",
          "enum": [
            "us",
            "at",
            "be",
            "ca",
            "gb",
            "fr",
            "de",
            "ie",
            "it",
            "lu",
            "mx",
            "nl",
            "es",
            "ch",
            "pr"
          ]
        },
        "name": {
          "description": "Driver's name.",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "example": "Susan Jones"
        },
        "notes": {
          "description": "Notes about the driver.",
          "type": "string",
          "maxLength": 4096,
          "example": "Also goes by the nickname Furious Fred."
        },
        "password": {
          "description": "Password that the driver can use to login to the Samsara driver app.",
          "type": "string",
          "example": "aSecurePassword1234"
        },
        "phone": {
          "description": "Phone number of the driver.",
          "type": "string",
          "maxLength": 255,
          "example": "5558234327"
        },
        "staticAssignedVehicleId": {
          "description": "ID of vehicle that the driver is permanently assigned to. (uncommon).",
          "type": "string",
          "example": "456"
        },
        "tachographCardNumber": {
          "description": "Driver's assigned tachograph card number (Europe specific)",
          "type": "string",
          "example": "1000000492436002"
        },
        "tagIds": {
          "description": "IDs of tags the driver is associated with.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "147"
          }
        },
        "timezone": {
          "description": "Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html).",
          "type": "string",
          "example": "America/Los_Angeles"
        },
        "usDriverRulesetOverride": {
          "$ref": "#/definitions/UsDriverRulesetOverride"
        },
        "username": {
          "description": "Driver's login username into the driver app. The username may not contain spaces or the '@' symbol. The username must be unique.",
          "type": "string",
          "maxLength": 189,
          "minLength": 1,
          "example": "SusanJones"
        },
        "vehicleGroupTagId": {
          "description": "Tag ID which determines which vehicles a driver will see when selecting vehicles.",
          "type": "string",
          "example": "342417"
        }
      }
    },
    "CreateDvirRequest": {
      "description": "DVIR creation body",
      "type": "object",
      "required": [
        "safetyStatus",
        "type",
        "authorId"
      ],
      "properties": {
        "authorId": {
          "description": "Samsara user ID of the mechanic creating the DVIR.",
          "type": "string",
          "example": "11"
        },
        "licensePlate": {
          "description": "The license plate of this vehicle.",
          "type": "string",
          "maxLength": 12,
          "example": "XHK1234"
        },
        "location": {
          "description": "Optional string if your jurisdiction requires a location of the DVIR.",
          "type": "string",
          "example": "350 Rhode Island St Ste. 400S, San Francisco, CA 94103"
        },
        "mechanicNotes": {
          "description": "The mechanics notes on the DVIR.",
          "type": "string",
          "example": "Replaced headlight on passenger side."
        },
        "odometerMeters": {
          "description": "The odometer reading in meters.",
          "type": "integer",
          "example": 14010293
        },
        "resolvedDefectIds": {
          "description": "Array of ids for defects being resolved with this DVIR.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "safetyStatus": {
          "description": "Whether or not this vehicle or trailer is safe to drive.",
          "type": "string",
          "enum": [
            "safe",
            "unsafe"
          ],
          "example": "safe"
        },
        "trailerId": {
          "description": "Id of trailer being inspected. Either vehicleId or trailerId must be provided.",
          "type": "string",
          "example": "11"
        },
        "type": {
          "description": "Only type 'mechanic' is currently accepted.",
          "type": "string",
          "enum": [
            "mechanic"
          ],
          "example": "mechanic"
        },
        "vehicleId": {
          "description": "Id of vehicle being inspected. Either vehicleId or trailerId must be provided.",
          "type": "string",
          "example": "10"
        }
      }
    },
    "CreateRoutesStopRequestObjectRequestBody": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "ID of the address. An address [externalId](https://developers.samsara.com/docs/external-ids#using-external-ids) can also be used interchangeably here.",
          "type": "string",
          "example": "45934"
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name of the stop",
          "type": "string",
          "example": "Stop #1"
        },
        "notes": {
          "description": "Notes for the stop",
          "type": "string",
          "maxLength": 2000,
          "example": "These are my notes"
        },
        "scheduledArrivalTime": {
          "type": "string",
          "format": "date-time",
          "example": "2019-06-13T19:08:25Z"
        },
        "scheduledDepartureTime": {
          "type": "string",
          "format": "date-time",
          "example": "2019-06-13T19:08:25Z"
        },
        "singleUseLocation": {
          "$ref": "#/definitions/RoutesSingleUseAddressObjectRequestBody"
        }
      }
    },
    "CreateTagRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "addresses": {
          "description": "The addresses that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "assets": {
          "description": "The trailers, unpowered, and powered assets that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "drivers": {
          "description": "The drivers that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "externalIds": {
          "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "maintenanceId": "250020",
            "payrollId": "ABFS18600"
          }
        },
        "machines": {
          "description": "The machines that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "name": {
          "description": "Name of this tag.",
          "type": "string",
          "maxLength": 191,
          "minLength": 1,
          "example": "California"
        },
        "parentTagId": {
          "description": "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
          "type": "string",
          "example": "4815"
        },
        "sensors": {
          "description": "The sensors that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "vehicles": {
          "description": "The vehicles that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        }
      }
    },
    "CreateUserRequest": {
      "description": "The user creation arguments",
      "type": "object",
      "required": [
        "name",
        "email",
        "authType",
        "roles"
      ],
      "properties": {
        "authType": {
          "description": "The authentication type the user uses to authenticate. To use SAML this organization must have a configured SAML integration.",
          "type": "string",
          "enum": [
            "default",
            "saml"
          ]
        },
        "email": {
          "description": "The email address of this user.",
          "type": "string",
          "example": "user@company.com"
        },
        "name": {
          "description": "The first and last name of the user.",
          "type": "string",
          "example": "Bob Smith"
        },
        "roles": {
          "description": "The list of roles that applies to this user. A user may have \"organizational\" roles, which apply to the user at the organizational level, and \"tag-specific\" roles, which apply to the user for a given tag.",
          "type": "array",
          "items": {
            "description": "A role that applies to a user. If the role has a `tagId`, then the role applies for that tag. If there is no `tagId`, then the role applies at the organizational level. A user may have many tag-specific roles, but may only have one organizational role. If the organizational level role has higher privileges than a tag-specific role, then the organizational role privileges will take precedence.",
            "type": "object",
            "required": [
              "roleId"
            ],
            "properties": {
              "roleId": {
                "description": "The unique ID for the role.",
                "type": "string",
                "example": "8a9371af-82d1-4158-bf91-4ecc8d3a114c"
              },
              "tagId": {
                "description": "ID of the tag this role applies to.",
                "type": "string",
                "example": "3914"
              }
            }
          }
        }
      }
    },
    "CumulativeOperatingHoursResponseBody": {
      "description": "Equipment operating hours.",
      "type": "object",
      "properties": {
        "Hour": {
          "description": "Total number of equipment operating hours.",
          "type": "number",
          "format": "double",
          "example": 12.34
        },
        "datetime": {
          "description": "Date time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        }
      }
    },
    "CurrentDutyStatus": {
      "description": "The current HOS status type and time the driver started being in this status.",
      "type": "object",
      "properties": {
        "hosStatusType": {
          "description": "The Hours of Service status type.  If the driver app is disconnected, an empty string will be returned. To reconnect the app and return updated values, drivers should have the app open with good cell service.",
          "type": "string",
          "enum": [
            "offDuty",
            "sleeperBed",
            "driving",
            "onDuty",
            "yardMove",
            "personalConveyance"
          ],
          "example": "offDuty"
        }
      }
    },
    "CustomMetadata": {
      "description": "The custom fields of an asset.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "example": {
        "manufacturer": "Samsara",
        "serialNumber": "123ABC"
      }
    },
    "DEFRemainingResponseBody": {
      "description": "DEF remaining in equipment.",
      "type": "object",
      "properties": {
        "Percent": {
          "description": "Percent of DEF remaining in tank.",
          "type": "number",
          "format": "double",
          "example": 12
        },
        "datetime": {
          "description": "Date time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        }
      }
    },
    "DataInputListResponse": {
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of data input data points. Each object in the array represents a data input and will contain its associated data points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataInputResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "DataInputResponse": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataInputTinyResponse"
        },
        {
          "type": "object",
          "properties": {
            "fftSpectraPoints": {
              "description": "List of FFT spectra data points from the data input.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FftSpectraDataPoint"
              }
            },
            "j1939D1StatusPoints": {
              "description": "List of active J1939D1 statuses.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/J1939D1StatusDataPoint"
              }
            },
            "locationPoints": {
              "description": "List of location data points from the data input.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/LocationDataPoint"
              }
            },
            "numberPoints": {
              "description": "List of numeric data points from the data input.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/NumberDataPoint"
              }
            },
            "stringPoints": {
              "description": "List of string data points from the data input.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StringDataPoint"
              }
            }
          }
        }
      ]
    },
    "DataInputSnapshot": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataInputTinyResponse"
        },
        {
          "type": "object",
          "properties": {
            "fftSpectraPoint": {
              "$ref": "#/definitions/FftSpectraDataPoint"
            },
            "j1939D1StatusPoint": {
              "$ref": "#/definitions/J1939D1StatusDataPoint"
            },
            "locationPoint": {
              "$ref": "#/definitions/LocationDataPoint"
            },
            "numberPoint": {
              "$ref": "#/definitions/NumberDataPoint"
            },
            "stringPoint": {
              "$ref": "#/definitions/StringDataPoint"
            }
          }
        }
      ]
    },
    "DataInputSnapshotResponse": {
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of data inputs' latest data points. Each object in the array represents a data input and its most recent data point.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataInputSnapshot"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "DataInputTinyResponse": {
      "description": "A minified data input object",
      "type": "object",
      "properties": {
        "assetId": {
          "description": "Unique identifier for the data input's asset.",
          "type": "string",
          "format": "uuid",
          "example": "74771078-5edb-4733-88f2-7242f520d1f1"
        },
        "dataGroup": {
          "description": "Data group for this data input.",
          "type": "string",
          "format": "string",
          "example": "Flow"
        },
        "id": {
          "description": "Unique identifier for the data input.",
          "type": "string",
          "format": "uuid",
          "example": "12345"
        },
        "name": {
          "description": "Name of this data input.",
          "type": "string",
          "format": "string",
          "example": "Pump Flow"
        },
        "units": {
          "description": "Units of data for this data input.",
          "type": "string",
          "format": "string",
          "example": "Gallons Per Minute"
        }
      }
    },
    "DataInputsTinyResponse": {
      "type": "object",
      "properties": {
        "data": {
          "description": "An array of data input objects. Each object contains the data input's name, ID, and other metadata.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataInputTinyResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "DataUsageResponseObjectResponseBody": {
      "description": "An object containing information about the gateway data usage in mb for the last 30 days.",
      "type": "object",
      "properties": {
        "cellularDataUsageBytes": {
          "description": "Celluar data usage in bytes.",
          "type": "integer",
          "format": "int64",
          "example": 641234325353800600
        },
        "hotspotUsageBytes": {
          "description": "Wifi hotspot data usage in bytes.",
          "type": "integer",
          "format": "int64",
          "example": 5183997943720215000
        }
      }
    },
    "Defect": {
      "type": "object",
      "required": [
        "id",
        "isResolved"
      ],
      "properties": {
        "comment": {
          "description": "Comment on the defect.",
          "type": "string",
          "example": "Air Compressor not working"
        },
        "createdAtTime": {
          "description": "Time when the defect was created. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "defectType": {
          "description": "The type of DVIR defect.",
          "type": "string",
          "example": "Air Compressor"
        },
        "id": {
          "description": "ID of the defect.",
          "type": "string",
          "example": "18"
        },
        "isResolved": {
          "description": "Signifies if this defect is resolved.",
          "type": "boolean",
          "example": true
        },
        "mechanicNotes": {
          "description": "The mechanics notes on the defect.",
          "type": "string",
          "example": "Extremely large oddly shaped hole in passenger side window."
        },
        "mechanicNotesUpdatedAtTime": {
          "description": "Time when mechanic notes were last updated. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "resolvedAtTime": {
          "description": "Time when this defect was resolved. Will not be returned if the defect is unresolved. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "resolvedBy": {
          "description": "The person who resolved this defect.  Will not be returned if the defect is unresolved.",
          "type": "object",
          "properties": {
            "id": {
              "description": "ID of the entity that resolved this defect. If the defect was resolved by a driver, this will be a Samsara Driver ID. If the defect was resolved by a mechanic, this will be the Samsara Dashboard User ID of the mechanic.",
              "type": "string",
              "example": "11"
            },
            "name": {
              "description": "Name of the person who resolved this defect.",
              "type": "string",
              "example": "Christopher 'The Handyman' Zhen"
            },
            "type": {
              "description": "Indicates whether this defect was resolved by a `driver` or a `mechanic`.",
              "type": "string",
              "enum": [
                "driver",
                "mechanic"
              ]
            }
          }
        },
        "trailer": {
          "allOf": [
            {
              "description": "The trailer this defect was submitted for."
            },
            {
              "$ref": "#/definitions/trailerTinyResponse"
            }
          ]
        },
        "vehicle": {
          "allOf": [
            {
              "description": "The vehicle this defect was submitted for."
            },
            {
              "$ref": "#/definitions/vehicleTinyResponse"
            }
          ]
        }
      }
    },
    "DefectPatch": {
      "description": "Information about resolving a defect. If resolving a defect, must specify `isResolved` as `true` and `resolvedBy`.",
      "type": "object",
      "properties": {
        "isResolved": {
          "description": "Resolves the defect. Must be `true`.",
          "type": "boolean"
        },
        "mechanicNotes": {
          "description": "The mechanics notes on the defect.",
          "type": "string",
          "example": "Extremely large oddly shaped hole in passenger side window."
        },
        "resolvedAtTime": {
          "description": "Time when defect was resolved. Defaults to now if not provided. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "resolvedBy": {
          "$ref": "#/definitions/ResolvedBy"
        }
      }
    },
    "DefectResponse": {
      "description": "A single defect.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Defect"
        }
      }
    },
    "DefectsResponse": {
      "description": "A list of defects.",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Defect"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "DistanceDrivenMeters": {
      "description": "Distance driven in meters.",
      "type": "number"
    },
    "DistanceResponseBody": {
      "description": "Equipment odometer distance.",
      "type": "object",
      "properties": {
        "Odometer": {
          "description": "Odometer value reported by equipment.",
          "type": "number",
          "format": "double",
          "example": 12
        },
        "OdometerUnits": {
          "description": "Unit of measurement for distance.",
          "type": "string",
          "example": "kilometre"
        },
        "datetime": {
          "description": "Date time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        }
      }
    },
    "DistanceTraveledObjectResponseBody": {
      "description": "The distance traveled information of the log.",
      "type": "object",
      "properties": {
        "driveDistanceMeters": {
          "description": "Distance driven in meters, rounded to two decimal places.",
          "type": "integer",
          "format": "int64",
          "example": 796625
        },
        "personalConveyanceDistanceMeters": {
          "description": "Distance driven for personal conveyance, rounded to two decimal places.",
          "type": "integer",
          "format": "int64",
          "example": 27358
        },
        "yardMoveDistanceMeters": {
          "description": "Distance driven for yard moves, rounded to two decimal places.",
          "type": "integer",
          "format": "int64",
          "example": 1287
        }
      }
    },
    "DocumentPdfGenerationRequest": {
      "description": "Identifies a document for PDF generation.",
      "type": "object",
      "required": [
        "documentId"
      ],
      "properties": {
        "documentId": {
          "description": "ID of the document.",
          "type": "string",
          "example": "6c8c0c01-206a-41a4-9d21-15b9978d04cb"
        }
      }
    },
    "DocumentPdfGenerationResponse": {
      "description": "Identifies a PDF generation job.",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "documentId": {
              "description": "ID of the document.",
              "type": "string",
              "example": "6c8c0c01-206a-41a4-9d21-15b9978d04cb"
            },
            "id": {
              "description": "ID of the PDF file generated or being generated for the document.",
              "type": "string",
              "example": "5c8c0c01-206a-41a4-9d21-15b9978d04cb"
            }
          }
        }
      }
    },
    "DocumentPdfQueryResponse": {
      "description": "A PDF of a document",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "completedAtTime": {
              "description": "Time that PDF generation was completed, in RFC 3339 format.",
              "type": "string",
              "example": "2020-01-02T15:04:06+07:00"
            },
            "documentId": {
              "description": "ID of the document.",
              "type": "string",
              "example": "6c8c0c01-206a-41a4-9d21-15b9978d04cb"
            },
            "downloadDocumentPdfUrl": {
              "description": "S3 pre-signed URL to download PDF file.",
              "type": "string",
              "example": "https://samsara-driver-document-pdfs.s3.us-west-2.amazonaws.com/org/38487/42a4cffc-409d-4ddf-ba1c-5e3bbb961cba?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ASI...\u0026X-Amz-Date=20200423T162507Z\u0026X-Amz-Expires=86400\u0026X-Amz-Security-Token=IQoJ...-Amz-SignedHeaders=host\u0026response-expires=2020-04-24T16%3A25%3A07Z\u0026X-Amz-Signature=1c6fe87..."
            },
            "id": {
              "description": "ID of the PDF file generated or being generated for the document",
              "type": "string",
              "example": "5c8c0c01-206a-41a4-9d21-15b9978d04cb"
            },
            "jobStatus": {
              "description": "Describes status of the PDF generation job.",
              "type": "string",
              "enum": [
                "requested",
                "processing",
                "completed"
              ],
              "example": "Completed"
            },
            "requestedAtTime": {
              "description": "Time that PDF generation was requested, in RFC 3339 format.",
              "type": "string",
              "example": "2020-01-02T15:04:05+07:00"
            }
          }
        }
      }
    },
    "DocumentTypesGetDocumentTypesBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentTypesGetDocumentTypesBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentTypesGetDocumentTypesGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentTypesGetDocumentTypesInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentTypesGetDocumentTypesMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentTypesGetDocumentTypesNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentTypesGetDocumentTypesNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentTypesGetDocumentTypesResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of all document types for the organization",
          "type": "array",
          "items": {
            "$ref": "#/definitions/getDocumentTypeResponseObjectResponseBody"
          },
          "example": [
            {
              "conditionalFieldSections": [
                {
                  "conditionalFieldFirstIndex": 1,
                  "conditionalFieldLastIndex": 2,
                  "triggeringFieldIndex": 0,
                  "triggeringFieldValue": "Yes"
                }
              ],
              "fieldTypes": [
                {
                  "fieldType": "multipleChoice",
                  "label": "Was there damage?",
                  "multipleChoiceFieldTypeMetaData": [
                    {
                      "label": "Yes"
                    },
                    {
                      "label": "No"
                    }
                  ],
                  "requiredField": true
                },
                {
                  "fieldType": "photo",
                  "label": "Damage Photos",
                  "requiredField": false
                },
                {
                  "fieldType": "number",
                  "label": "Number of vehicles impacted",
                  "numberFieldTypeMetaData": {
                    "numberOfDecimalPlaces": 2
                  },
                  "requiredField": false
                },
                {
                  "fieldType": "dateTime",
                  "label": "Date and time",
                  "requiredField": true
                },
                {
                  "fieldType": "signature",
                  "label": "Sign",
                  "requiredField": true,
                  "signatureFieldTypeMetaData": {
                    "legalText": "Legal Text"
                  }
                }
              ],
              "id": "4aff772c-a7bb-45e6-8e41-6a53e34feb83",
              "name": "Accident Report",
              "orgId": 12345
            }
          ]
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "DocumentTypesGetDocumentTypesServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentTypesGetDocumentTypesTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentTypesGetDocumentTypesUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsDeleteDocumentBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsDeleteDocumentBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsDeleteDocumentGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsDeleteDocumentInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsDeleteDocumentMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsDeleteDocumentNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsDeleteDocumentNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsDeleteDocumentServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsDeleteDocumentTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsDeleteDocumentUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentResponseBody": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/documentResponseObjectResponseBody"
        }
      }
    },
    "DocumentsGetDocumentServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentsResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "Multiple documents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/documentResponseObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "DocumentsGetDocumentsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsGetDocumentsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsPostDocumentBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsPostDocumentBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsPostDocumentGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsPostDocumentInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsPostDocumentMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsPostDocumentNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsPostDocumentNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsPostDocumentRequestBody": {
      "type": "object",
      "required": [
        "driverId",
        "documentTypeId"
      ],
      "properties": {
        "documentTypeId": {
          "description": "ID for the document type.",
          "type": "string",
          "example": "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7"
        },
        "driverId": {
          "description": "ID of the driver. Can be either unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the driver.",
          "type": "string",
          "example": "45646"
        },
        "fields": {
          "description": "The fields associated with this document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fieldObjectPostRequestBody"
          }
        },
        "name": {
          "description": "Name of the document.",
          "type": "string",
          "example": "Dropoff Slip 123"
        },
        "notes": {
          "description": "Notes on the document.",
          "type": "string",
          "maxLength": 2000,
          "example": "Missing a crate"
        },
        "routeStopId": {
          "description": "ID of the route stop. Can be either unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the route stop.",
          "type": "string",
          "example": "45646"
        },
        "state": {
          "description": "The condition of the document created for the driver. Can be either `required` or `submitted`, if no value is specified, `state` defaults to `required`. `required` documents are pre-populated documents for the Driver to fill out in the Driver App.",
          "type": "string",
          "default": "required",
          "enum": [
            "submitted",
            "required"
          ],
          "example": "submitted"
        },
        "vehicleId": {
          "description": "ID of the vehicle. Can be either unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the vehicle.",
          "type": "string",
          "example": "45646"
        }
      }
    },
    "DocumentsPostDocumentResponseBody": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/documentResponseObjectResponseBody"
        }
      }
    },
    "DocumentsPostDocumentServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsPostDocumentTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DocumentsPostDocumentUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DriveTimeDurationMs": {
      "description": "Time driven in milliseconds.",
      "type": "number"
    },
    "Driver": {
      "description": "A driver object",
      "type": "object",
      "properties": {
        "attributes": {
          "description": "[beta] A minified attribute",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attributeTiny"
          }
        },
        "carrierSettings": {
          "$ref": "#/definitions/DriverCarrierSettings"
        },
        "createdAtTime": {
          "$ref": "#/definitions/DriverCreatedAtTime"
        },
        "currentIdCardCode": {
          "$ref": "#/definitions/DriverIdCardCode"
        },
        "driverActivationStatus": {
          "$ref": "#/definitions/DriverActivationStatus"
        },
        "eldAdverseWeatherExemptionEnabled": {
          "$ref": "#/definitions/DriverEldAdverseWeatherExemptionEnabled"
        },
        "eldBigDayExemptionEnabled": {
          "$ref": "#/definitions/DriverEldBigDayExemptionEnabled"
        },
        "eldDayStartHour": {
          "$ref": "#/definitions/DriverEldDayStartHour"
        },
        "eldExempt": {
          "$ref": "#/definitions/DriverEldExempt"
        },
        "eldExemptReason": {
          "$ref": "#/definitions/DriverEldExemptReason"
        },
        "eldPcEnabled": {
          "$ref": "#/definitions/DriverEldPcEnabled"
        },
        "eldSettings": {
          "$ref": "#/definitions/DriverEldSettings"
        },
        "eldYmEnabled": {
          "$ref": "#/definitions/DriverEldYmEnabled"
        },
        "externalIds": {
          "$ref": "#/definitions/DriverExternalIds"
        },
        "id": {
          "$ref": "#/definitions/DriverId"
        },
        "isDeactivated": {
          "$ref": "#/definitions/DriverIsDeactivated"
        },
        "licenseNumber": {
          "$ref": "#/definitions/DriverLicenseNumber"
        },
        "licenseState": {
          "$ref": "#/definitions/DriverLicenseState"
        },
        "locale": {
          "$ref": "#/definitions/DriverLocale"
        },
        "name": {
          "$ref": "#/definitions/DriverName"
        },
        "notes": {
          "$ref": "#/definitions/DriverNotes"
        },
        "phone": {
          "$ref": "#/definitions/DriverPhone"
        },
        "staticAssignedVehicle": {
          "$ref": "#/definitions/DriverStaticAssignedVehicle"
        },
        "tachographCardNumber": {
          "$ref": "#/definitions/DriverTachographCardNumber"
        },
        "tags": {
          "$ref": "#/definitions/DriverTags"
        },
        "timezone": {
          "$ref": "#/definitions/DriverTimezone"
        },
        "updatedAtTime": {
          "$ref": "#/definitions/DriverUpdatedAtTime"
        },
        "usDriverRulesetOverride": {
          "$ref": "#/definitions/UsDriverRulesetOverride"
        },
        "username": {
          "$ref": "#/definitions/DriverUsername"
        },
        "vehicleGroupTag": {
          "$ref": "#/definitions/DriverVehicleGroupTag"
        }
      }
    },
    "DriverActivationStatus": {
      "description": "A value indicating whether the driver is active or deactivated.",
      "type": "string",
      "enum": [
        "active",
        "deactivated"
      ]
    },
    "DriverAppSettingsGamificationConfigTinyObjectRequestBody": {
      "description": "Gamification configuration for the Driver App.",
      "type": "object",
      "properties": {
        "anonymizeDriverNames": {
          "description": "Hide the names of other drivers when viewing the driver leaderboard in the mobile app.",
          "type": "boolean",
          "example": false
        }
      }
    },
    "DriverAppSettingsGamificationConfigTinyObjectResponseBody": {
      "description": "Gamification configuration for the Driver App.",
      "type": "object",
      "properties": {
        "anonymizeDriverNames": {
          "description": "Hide the names of other drivers when viewing the driver leaderboard in the mobile app.",
          "type": "boolean",
          "example": false
        }
      }
    },
    "DriverAppSettingsResponseObjectResponseBody": {
      "description": "The configuration settings for the Samsara Driver App. Can be set or updated through the Samsara Settings page or the API at any time.",
      "type": "object",
      "properties": {
        "driverFleetId": {
          "description": "Login user name for the fleet driver app",
          "type": "string",
          "example": "abc_trucking_co"
        },
        "gamification": {
          "description": "Driver gamification feature. Enabling this will turn on the feature for all drivers using the mobile app. Drivers can be configured into peer groups within the Drivers Page. Unconfigured drivers will be grouped on an organization level.",
          "type": "boolean",
          "example": true
        },
        "gamificationConfig": {
          "$ref": "#/definitions/DriverAppSettingsGamificationConfigTinyObjectResponseBody"
        },
        "orgVehicleSearch": {
          "description": "Allow drivers to search for vehicles outside of their selection tag when connected to the internet.",
          "type": "boolean",
          "example": true
        },
        "trailerSelection": {
          "description": "Allow drivers to see and select trailers in the Samsara Driver app. ",
          "type": "boolean",
          "example": false
        },
        "trailerSelectionConfig": {
          "$ref": "#/definitions/DriverAppSettingsTrailerSelectionConfigTinyObjectResponseBody"
        }
      }
    },
    "DriverAppSettingsTrailerSelectionConfigTinyObjectRequestBody": {
      "description": "Trailer selection setting configuration for the Driver App.",
      "type": "object",
      "properties": {
        "driverTrailerCreationEnabled": {
          "description": "Allow drivers to create new trailers in the Samsara Driver app.",
          "type": "boolean",
          "example": true
        },
        "maxNumOfTrailersSelected": {
          "description": "Trailer selection limit.",
          "type": "integer",
          "maximum": 8,
          "example": -1432112288976369200
        },
        "orgTrailerSearch": {
          "description": "Allow drivers to search for trailers outside of their selection tag when connected to the internet",
          "type": "boolean",
          "example": false
        }
      }
    },
    "DriverAppSettingsTrailerSelectionConfigTinyObjectResponseBody": {
      "description": "Trailer selection setting configuration for the Driver App.",
      "type": "object",
      "properties": {
        "driverTrailerCreationEnabled": {
          "description": "Allow drivers to create new trailers in the Samsara Driver app.",
          "type": "boolean",
          "example": false
        },
        "maxNumOfTrailersSelected": {
          "description": "Trailer selection limit.",
          "type": "integer",
          "maximum": 8,
          "example": -2931106431936149000
        },
        "orgTrailerSearch": {
          "description": "Allow drivers to search for trailers outside of their selection tag when connected to the internet",
          "type": "boolean",
          "example": true
        }
      }
    },
    "DriverAssignmentObjectResponseBody": {
      "type": "object",
      "properties": {
        "assignmentType": {
          "description": "Assignment type of the driver-vehicle assignment, indicating the provenance of the assignment. The only type of assignment supported right now is `driverApp` assignments. This list could change, so it is recommended that clients gracefully handle any types not enumerated in this list.",
          "type": "string",
          "enum": [
            "driverApp"
          ],
          "example": "driverApp"
        },
        "driver": {
          "$ref": "#/definitions/GoaDriverTinyResponseResponseBody"
        },
        "endTime": {
          "description": " An end time in RFC 3339 format. Omitted if not applicable. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        },
        "isPassenger": {
          "description": "Boolean indicating whether the driver is a passenger.",
          "type": "boolean",
          "example": false
        },
        "startTime": {
          "description": " A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        }
      }
    },
    "DriverCarrierName": {
      "description": "Carrier for a given driver.",
      "type": "string",
      "maxLength": 255,
      "example": "Acme Inc."
    },
    "DriverCarrierSettings": {
      "description": "Carrier for a given driver. If the driver's carrier differs from the general organization's carrier settings, the override value is used. Updating this value only updates the override setting for this driver.",
      "type": "object",
      "properties": {
        "carrierName": {
          "description": "Carrier for a given driver.",
          "type": "string",
          "maxLength": 255,
          "example": "Acme Inc."
        },
        "dotNumber": {
          "description": "Carrier US DOT Number. If this differs from the general organization's settings, the override value is used. Updating this value only updates the override setting for this driver.",
          "type": "integer",
          "format": "int64",
          "example": 98231
        },
        "homeTerminalAddress": {
          "$ref": "#/definitions/DriverHomeTerminalAddress"
        },
        "homeTerminalName": {
          "$ref": "#/definitions/DriverHomeTerminalName"
        },
        "mainOfficeAddress": {
          "description": "Main office address for a given driver. If this differs from the general organization's settings, the override value is used. ",
          "type": "string",
          "maxLength": 255,
          "example": "1234 Pear St., Scranton, PA 62814"
        }
      }
    },
    "DriverCreatedAtTime": {
      "description": "The date and time this driver was created in RFC 3339 format.",
      "type": "string",
      "example": "2019-05-18T20:27:35Z"
    },
    "DriverDeactivatedAtTime": {
      "description": "The date and time this driver is considered to be deactivated in RFC 3339 format.",
      "type": "string",
      "example": "2019-05-18T20:27:35Z"
    },
    "DriverDotNumber": {
      "description": "Carrier US DOT Number. If this differs from the general organization's settings, the override value is used. Updating this value only updates the override setting for this driver.",
      "type": "integer",
      "format": "int64",
      "example": 98231
    },
    "DriverEfficienciesResponse": {
      "description": "Summary of drivers' efficiencies over a time range.",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "driverSummaries": {
              "description": "A list of drivers' efficiencies.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DriverEfficiency"
              }
            },
            "summaryEndTime": {
              "description": "End time of the window for which this efficiency report was computed. Will be a UTC timestamp in RFC 3339 format. For example: `2020-03-16T16:00:00Z`",
              "type": "string",
              "format": "date-time",
              "example": "2020-03-16T16:00:00Z"
            },
            "summaryStartTime": {
              "description": "Start time of the window for which this efficiency report was computed. Will be a UTC timestamp in RFC 3339 format. For example: `2020-03-15T16:00:00Z`",
              "type": "string",
              "format": "date-time",
              "example": "2020-03-15T16:00:00Z"
            }
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "DriverEfficiency": {
      "description": "Summary of a driver's efficiency.",
      "type": "object",
      "properties": {
        "driver": {
          "$ref": "#/definitions/ExtendedDriverTinyResponse"
        },
        "totalDistanceDrivenMeters": {
          "$ref": "#/definitions/DistanceDrivenMeters"
        },
        "totalDriveTimeDurationMs": {
          "$ref": "#/definitions/DriveTimeDurationMs"
        },
        "totalFuelConsumedMl": {
          "$ref": "#/definitions/FuelConsumedMl"
        },
        "totalIdleTimeDurationMs": {
          "$ref": "#/definitions/IdleTimeDurationMs"
        },
        "totalPowerTakeOffDurationMs": {
          "$ref": "#/definitions/PowerTakeOffDurationMs"
        },
        "vehicleSummaries": {
          "description": "Summaries of vehicle efficiency for each vehicle the driver was driving during the given time period.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleSummary"
          }
        }
      }
    },
    "DriverEldAdverseWeatherExemptionEnabled": {
      "description": "Flag indicating this driver may use Adverse Weather exemptions in ELD logs.",
      "type": "boolean",
      "default": false
    },
    "DriverEldBigDayExemptionEnabled": {
      "description": "Flag indicating this driver may use Big Day exemption in ELD logs.",
      "type": "boolean",
      "default": false
    },
    "DriverEldDayStartHour": {
      "description": "`0` indicating midnight-to-midnight ELD driving hours, `12` to indicate noon-to-noon driving hours.",
      "type": "integer",
      "default": 0
    },
    "DriverEldExempt": {
      "description": "Flag indicating this driver is exempt from the Electronic Logging Mandate.",
      "type": "boolean",
      "default": false
    },
    "DriverEldExemptReason": {
      "description": "Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt).",
      "type": "string",
      "example": "Bad driver"
    },
    "DriverEldPcEnabled": {
      "description": "Flag indicating this driver may select the Personal Conveyance duty status in ELD logs.",
      "type": "boolean",
      "default": false
    },
    "DriverEldRuleset": {
      "description": "An ELD ruleset for a driver.",
      "type": "object",
      "properties": {
        "break": {
          "$ref": "#/definitions/DriverEldRulesetRestBreak"
        },
        "cycle": {
          "$ref": "#/definitions/DriverEldRulesetCycle"
        },
        "jurisdiction": {
          "$ref": "#/definitions/DriverEldRulesetJurisdiction"
        },
        "restart": {
          "$ref": "#/definitions/DriverEldRulesetRestart"
        },
        "shift": {
          "$ref": "#/definitions/DriverEldRulesetShift"
        }
      }
    },
    "DriverEldRulesetCreatedAtTime": {
      "description": "The date and time this driver ELD ruleset was created in RFC 3339 format.",
      "type": "string",
      "example": "2019-05-18T20:27:35Z"
    },
    "DriverEldRulesetCycle": {
      "description": "The cycle of the ELD ruleset applied to this driver.",
      "type": "string",
      "enum": [
        "USA 60 hour / 7 day",
        "USA 70 hour / 8 day",
        "AK 80 hour / 8 day",
        "AK 70 hour / 7 day",
        "CA 80 hour / 8 day",
        "CA 112 hour / 8 day",
        "FL 80 hour / 8 day",
        "FL 70 hour / 7 day",
        "NE 80 hour / 8 day",
        "NE 70 hour / 7 day",
        "NC 80 hour / 8 day",
        "NC 70 hour / 7 day",
        "OK 70 hour / 8 day",
        "OK 60 hour / 7 day",
        "OR 80 hour / 8 day",
        "OR 70 hour / 7 day",
        "SC 80 hour / 8 day",
        "SC 70 hour / 7 day",
        "TX 70 hour / 7 day",
        "WI 80 hour / 8 day",
        "WI 70 hour / 7 day",
        "Canada South Cycle 1 (70 hour / 7 day)",
        "Canada South Cycle 2 (120 hour / 14 day)",
        "Canada North Cycle 1 (80 hour / 7 day)",
        "Canada North Cycle 2 (120 hour / 14 day)"
      ],
      "example": "USA 60 hour / 7 day"
    },
    "DriverEldRulesetDailyOffDuty": {
      "description": "The daily off duty setting of the ELD ruleset applied to this driver.",
      "type": "string",
      "enum": [
        "Canada South",
        "Canada North"
      ],
      "example": "Canada North"
    },
    "DriverEldRulesetJurisdiction": {
      "description": "The jurisdiction of the ELD ruleset applied to this driver. These are specified by either `CS` or `CN` for Canada South and Canada North, respectively, or the ISO 3166-2 postal code for the supported state or territory.",
      "type": "string",
      "example": "AR"
    },
    "DriverEldRulesetRestBreak": {
      "description": "The rest break required setting of the ELD ruleset applied to this driver.",
      "type": "string",
      "enum": [
        "Property (off-duty/sleeper)",
        "Explosives/HazMat (on-duty)"
      ],
      "example": "Property (off-duty/sleeper)"
    },
    "DriverEldRulesetRestart": {
      "description": "The restart of the ELD ruleset applied to this driver.",
      "type": "string",
      "enum": [
        "None",
        "34-hour Restart",
        "24-hour Restart",
        "36-hour Restart",
        "72-hour Restart"
      ],
      "example": "Default"
    },
    "DriverEldRulesetShift": {
      "description": "The shift of the ELD ruleset applied to this driver.",
      "type": "string",
      "enum": [
        "US Interstate Property",
        "US Interstate Passenger",
        "Texas Intrastate"
      ],
      "example": "US Interstate Property"
    },
    "DriverEldRulesetUpdatedAtTime": {
      "description": "The date and time this driver ELD ruleset was last updated in RFC 3339 format.",
      "type": "string",
      "example": "2019-06-13T19:08:25Z"
    },
    "DriverEldRulesetUsShortHaulType": {
      "description": "The US short haul ruleset type of the ELD ruleset applied to this driver.",
      "type": "string",
      "enum": [
        "100 Air-Mile (Passenger)",
        "100 Air-Mile (Property)",
        "150 Air-Mile (Non-CDL)"
      ],
      "example": "100 Air-Mile (Passenger)"
    },
    "DriverEldRulesets": {
      "description": "The driver's ELD rulesets and overrides. This is the full set of rulesets that may apply to the driver depending on their activity. If you wish to interface with the specific US driver override, use the usDriverRulesetOverride field.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/DriverEldRuleset"
      }
    },
    "DriverEldSettings": {
      "description": "The driver's ELD settings.",
      "type": "object",
      "properties": {
        "rulesets": {
          "$ref": "#/definitions/DriverEldRulesets"
        }
      }
    },
    "DriverEldYmEnabled": {
      "description": "Flag indicating this driver may select the Yard Move duty status in ELD logs.",
      "type": "boolean",
      "default": false
    },
    "DriverExternalIds": {
      "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
      "type": "object",
      "example": {
        "maintenanceId": "250020",
        "payrollId": "ABFS18600"
      }
    },
    "DriverHomeTerminalAddress": {
      "description": "Address of the place of business at which a driver ordinarily reports for work.",
      "type": "string",
      "maxLength": 255,
      "example": "1234 Pear St., Scranton, PA 62814"
    },
    "DriverHomeTerminalName": {
      "description": "Name of the place of business at which a driver ordinarily reports for work.",
      "type": "string",
      "maxLength": 255,
      "example": "Acme Inc."
    },
    "DriverId": {
      "description": "Samsara ID for the driver.",
      "type": "string",
      "example": "123"
    },
    "DriverIdCardCode": {
      "description": "The ID Card Code on the back of the physical card assigned to the driver.  Contact Samsara if you would like to enable this feature.",
      "type": "string",
      "example": "941767043"
    },
    "DriverIsDeactivated": {
      "description": "[DEPRECATED] A boolean indicating whether or not the driver is deactivated. Use `driverActivationStatus` instead.",
      "type": "boolean",
      "example": false
    },
    "DriverLicenseNumber": {
      "description": "Driver's state issued license number. The combination of this number and `licenseState` must be unique.",
      "type": "string",
      "example": "E1234567"
    },
    "DriverLicenseState": {
      "description": "Abbreviation of US state, Canadian province, or US territory that issued driver's license.",
      "type": "string",
      "example": "CA"
    },
    "DriverLocale": {
      "description": "Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales.",
      "type": "string",
      "enum": [
        "us",
        "at",
        "be",
        "ca",
        "gb",
        "fr",
        "de",
        "ie",
        "it",
        "lu",
        "mx",
        "nl",
        "es",
        "ch",
        "pr"
      ]
    },
    "DriverMainOfficeAddress": {
      "description": "Main office address for a given driver. If this differs from the general organization's settings, the override value is used. ",
      "type": "string",
      "maxLength": 255,
      "example": "1234 Pear St., Scranton, PA 62814"
    },
    "DriverName": {
      "description": "Driver's name.",
      "type": "string",
      "maxLength": 255,
      "minLength": 1,
      "example": "Susan Jones"
    },
    "DriverNotes": {
      "description": "Notes about the driver.",
      "type": "string",
      "maxLength": 4096,
      "example": "Also goes by the nickname Furious Fred."
    },
    "DriverObjectResponseBody": {
      "description": "A minified driver object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the driver.",
          "type": "string",
          "example": "0987"
        },
        "name": {
          "description": "Name of the driver.",
          "type": "string",
          "example": "Driver Name"
        }
      }
    },
    "DriverPassword": {
      "description": "Password that the driver can use to login to the Samsara driver app.",
      "type": "string",
      "example": "aSecurePassword1234"
    },
    "DriverPhone": {
      "description": "Phone number of the driver.",
      "type": "string",
      "maxLength": 255,
      "example": "5558234327"
    },
    "DriverResponse": {
      "description": "A single driver.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Driver"
        }
      }
    },
    "DriverRulesetObjectResponseBody": {
      "type": "object",
      "properties": {
        "break": {
          "description": "The rest break required setting of the ELD ruleset applied to this driver.",
          "type": "string",
          "enum": [
            "Property (off-duty/sleeper)",
            "Explosives/HazMat (on-duty)"
          ],
          "example": "Explosives/HazMat (on-duty)"
        },
        "cycle": {
          "description": "The cycle of the ELD ruleset applied to this driver.",
          "type": "string",
          "enum": [
            "USA 60 hour / 7 day",
            "USA 70 hour / 8 day",
            "AK 80 hour / 8 day",
            "AK 70 hour / 7 day",
            "CA 80 hour / 8 day",
            "CA 112 hour / 8 day",
            "FL 80 hour / 8 day",
            "FL 70 hour / 7 day",
            "NE 80 hour / 8 day",
            "NE 70 hour / 7 day",
            "NC 80 hour / 8 day",
            "NC 70 hour / 7 day",
            "OK 70 hour / 8 day",
            "OK 60 hour / 7 day",
            "OR 80 hour / 8 day",
            "OR 70 hour / 7 day",
            "SC 80 hour / 8 day",
            "SC 70 hour / 7 day",
            "TX 70 hour / 7 day",
            "WI 80 hour / 8 day",
            "WI 70 hour / 7 day",
            "Canada South Cycle 1 (70 hour / 7 day)",
            "Canada South Cycle 2 (120 hour / 14 day)",
            "Canada North Cycle 1 (80 hour / 7 day)",
            "Canada North Cycle 2 (120 hour / 14 day)"
          ],
          "example": "USA 60 hour / 7 day"
        },
        "jurisdiction": {
          "description": "The jurisdiction of the ELD ruleset applied to this driver. These are specified by either `CS` or `CN` for Canada South and Canada North, respectively, or the ISO 3166-2 postal code for the supported state or territory.",
          "type": "string",
          "example": "AR"
        },
        "restart": {
          "description": "The restart of the ELD ruleset applied to this driver.",
          "type": "string",
          "enum": [
            "34-hour Restart",
            "24-hour Restart",
            "36-hour Restart",
            "72-hour Restart"
          ],
          "example": "34-hour Restart"
        },
        "shift": {
          "description": "The shift of the ELD ruleset applied to this driver.",
          "type": "string",
          "enum": [
            "US Interstate Property",
            "US Interstate Passenger"
          ],
          "example": "US Interstate Property"
        }
      }
    },
    "DriverStaticAssignedVehicle": {
      "description": "Vehicle assigned to the driver for static vehicle assignments. (uncommon).",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the vehicle.",
          "type": "string",
          "example": "123456789"
        },
        "name": {
          "description": "Name of the vehicle.",
          "type": "string",
          "example": "Midwest Truck #4"
        }
      }
    },
    "DriverStaticAssignedVehicleId": {
      "description": "ID of vehicle that the driver is permanently assigned to. (uncommon).",
      "type": "string",
      "example": "456"
    },
    "DriverTachographActivityData": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TachographActivityListWrapper"
      }
    },
    "DriverTachographActivityResponse": {
      "description": "List of all driver tachograph activities in a specified time range.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/DriverTachographActivityData"
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "DriverTachographCardNumber": {
      "description": "Driver's assigned tachograph card number (Europe specific)",
      "type": "string",
      "example": "1000000492436002"
    },
    "DriverTagIds": {
      "description": "IDs of tags the driver is associated with.",
      "type": "array",
      "items": {
        "type": "string",
        "example": "147"
      }
    },
    "DriverTags": {
      "description": "The tags this driver belongs to.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/tagTinyResponse"
      }
    },
    "DriverTimezone": {
      "description": "Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html).",
      "type": "string",
      "default": "America/Los_Angeles",
      "example": "America/Los_Angeles"
    },
    "DriverUpdatedAtTime": {
      "description": "The date and time this driver was last updated in RFC 3339 format.",
      "type": "string",
      "example": "2019-06-13T19:08:25Z"
    },
    "DriverUsername": {
      "description": "Driver's login username into the driver app. The username may not contain spaces or the '@' symbol. The username must be unique.",
      "type": "string",
      "maxLength": 189,
      "minLength": 1,
      "example": "SusanJones"
    },
    "DriverVehicleGroupTag": {
      "description": "Tag which determines which vehicles a driver will see when selecting vehicles.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the tag.",
          "type": "string",
          "example": "3914"
        },
        "name": {
          "description": "Name of the tag.",
          "type": "string",
          "example": "East Coast"
        },
        "parentTagId": {
          "description": "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
          "type": "string",
          "example": "4815"
        }
      }
    },
    "DriverVehicleGroupTagId": {
      "description": "Tag ID which determines which vehicles a driver will see when selecting vehicles.",
      "type": "string",
      "example": "342417"
    },
    "DriverWithTimezoneEldSettingsObjectResponseBody": {
      "description": "The driver the log applies to.",
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "eldSettings": {
          "$ref": "#/definitions/EldSettingsObjectResponseBody"
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "ID of the driver",
          "type": "string",
          "example": "45646"
        },
        "name": {
          "description": "Name of the driver",
          "type": "string",
          "example": "Driver Bob"
        },
        "timezone": {
          "description": "Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html).",
          "type": "string",
          "default": "America/Los_Angeles",
          "example": "America/Los_Angeles"
        }
      }
    },
    "DriversVehicleAssignmentsGetDriversVehicleAssignmentsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DriversVehicleAssignmentsGetDriversVehicleAssignmentsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DriversVehicleAssignmentsGetDriversVehicleAssignmentsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DriversVehicleAssignmentsGetDriversVehicleAssignmentsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DriversVehicleAssignmentsGetDriversVehicleAssignmentsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DriversVehicleAssignmentsGetDriversVehicleAssignmentsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DriversVehicleAssignmentsGetDriversVehicleAssignmentsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DriversVehicleAssignmentsGetDriversVehicleAssignmentsResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of driver and their vehicle assignments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DriversVehicleAssignmentsObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "DriversVehicleAssignmentsGetDriversVehicleAssignmentsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DriversVehicleAssignmentsGetDriversVehicleAssignmentsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DriversVehicleAssignmentsGetDriversVehicleAssignmentsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "DriversVehicleAssignmentsObjectResponseBody": {
      "type": "object",
      "required": [
        "id",
        "name",
        "driverActivationStatus",
        "vehicleAssignments"
      ],
      "properties": {
        "driverActivationStatus": {
          "description": "A value indicating whether the driver is active or deactivated.",
          "type": "string",
          "enum": [
            "active",
            "deactivated"
          ],
          "example": "active"
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "ID of the driver.",
          "type": "string",
          "example": "494123"
        },
        "name": {
          "description": "Name of the driver.",
          "type": "string",
          "example": "Joe Driver"
        },
        "vehicleAssignments": {
          "description": "List of vehicle assignment objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleAssignmentObjectResponseBody"
          }
        }
      }
    },
    "DutyStatusDurationObjectResponseBody": {
      "description": "The currently applied duty status durations on the driver's log.",
      "type": "object",
      "properties": {
        "activeDurationMs": {
          "description": "Duration the driver was active for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 38825000
        },
        "driveDurationMs": {
          "description": "Duration the driver was driving for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 31970000
        },
        "offDutyDurationMs": {
          "description": "Duration the driver was off duty for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 20555000
        },
        "onDutyDurationMs": {
          "description": "Duration the driver was on duty for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 5423000
        },
        "personalConveyanceDurationMs": {
          "description": "Duration the driver was driving for personal conveyance for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 4358000
        },
        "sleeperBerthDurationMs": {
          "description": "Duration the driver was in their sleeper berth for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 27020000
        },
        "waitingTimeDurationMs": {
          "description": "Duration the driver was waiting for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 1560000
        },
        "yardMoveDurationMs": {
          "description": "Duration the driver was driving for yard moves for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 1432000
        }
      }
    },
    "Dvir": {
      "description": "Information about a DVIR.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "authorSignature": {
          "$ref": "#/definitions/DvirAuthorSignature"
        },
        "endTime": {
          "description": "Time when driver signed and completed this DVIR. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "id": {
          "description": "Unique Samsara ID for the DVIR.",
          "type": "string",
          "example": "7107471"
        },
        "licensePlate": {
          "$ref": "#/definitions/DvirLicensePlate"
        },
        "location": {
          "$ref": "#/definitions/DvirLocation"
        },
        "mechanicNotes": {
          "$ref": "#/definitions/DvirMechanicNotes"
        },
        "odometerMeters": {
          "$ref": "#/definitions/DvirOdometerMeters"
        },
        "safetyStatus": {
          "description": "The condition of vehicle on which DVIR was done.",
          "type": "string",
          "default": "unsafe",
          "enum": [
            "safe",
            "unsafe",
            "resolved"
          ],
          "example": "unsafe"
        },
        "secondSignature": {
          "$ref": "#/definitions/DvirSecondSignature"
        },
        "startTime": {
          "description": "Time when driver began filling out this DVIR. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "thirdSignature": {
          "$ref": "#/definitions/DvirThirdSignature"
        },
        "trailer": {
          "$ref": "#/definitions/DvirTrailer"
        },
        "trailerDefects": {
          "$ref": "#/definitions/DvirTrailerDefects"
        },
        "trailerName": {
          "description": "The name of the trailer the DVIR was submitted for.  Only included for tractor+trailer DVIRs.",
          "type": "string",
          "example": "Midwest Trailer #5"
        },
        "type": {
          "description": "Inspection type of the DVIR.",
          "type": "string",
          "default": "unspecified",
          "enum": [
            "preTrip",
            "postTrip",
            "mechanic",
            "unspecified"
          ],
          "example": "preTrip"
        },
        "vehicle": {
          "$ref": "#/definitions/DvirVehicle"
        },
        "vehicleDefects": {
          "$ref": "#/definitions/DvirVehicleDefects"
        }
      }
    },
    "DvirAuthorSignature": {
      "allOf": [
        {
          "description": "An author signature object which has a signatory mini object with the signed time. Author Signature."
        },
        {
          "$ref": "#/definitions/DvirSignature"
        }
      ]
    },
    "DvirLicensePlate": {
      "description": "The license plate of this vehicle.",
      "type": "string",
      "maxLength": 12,
      "example": "XHK1234"
    },
    "DvirLocation": {
      "description": "Optional string if your jurisdiction requires a location of the DVIR.",
      "type": "string",
      "example": "350 Rhode Island St Ste. 400S, San Francisco, CA 94103"
    },
    "DvirMechanicNotes": {
      "description": "The mechanics notes on the DVIR.",
      "type": "string",
      "example": "Replaced headlight on passenger side."
    },
    "DvirOdometerMeters": {
      "description": "The odometer reading in meters.",
      "type": "integer",
      "example": 14010293
    },
    "DvirResponse": {
      "description": "The DVIR response.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Dvir"
        }
      }
    },
    "DvirSecondSignature": {
      "allOf": [
        {
          "description": "An author signature object which has a signatory mini object with the signed time. Second Signature."
        },
        {
          "$ref": "#/definitions/DvirSignature"
        }
      ]
    },
    "DvirSignature": {
      "description": "DVIR Signure.",
      "type": "object",
      "properties": {
        "signatoryUser": {
          "allOf": [
            {
              "description": "The user who signed the DVIR."
            },
            {
              "$ref": "#/definitions/userTinyResponse"
            }
          ]
        },
        "signedAtTime": {
          "description": "The time when the DVIR was signed. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "type": {
          "description": "Whether the DVIR was submitted by a `driver` or `mechanic`.",
          "type": "string",
          "default": "driver",
          "enum": [
            "driver",
            "mechanic"
          ],
          "example": "driver"
        }
      }
    },
    "DvirThirdSignature": {
      "allOf": [
        {
          "description": "An author signature object which has a signatory mini object with the signed time. Third Signature."
        },
        {
          "$ref": "#/definitions/DvirSignature"
        }
      ]
    },
    "DvirTrailer": {
      "allOf": [
        {
          "description": "The trailer the DVIR was submitted for. Only included for trailer only DVIRs."
        },
        {
          "$ref": "#/definitions/trailerTinyResponse"
        }
      ]
    },
    "DvirTrailerDefects": {
      "description": "Defects registered for the trailer which was part of the DVIR.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/dvirTrailerDefectsItems"
      }
    },
    "DvirVehicle": {
      "allOf": [
        {
          "description": "The vehicle the DVIR was submitted for. Only included for tractor or tractor+trailer DVIRs."
        },
        {
          "$ref": "#/definitions/vehicleTinyResponse"
        }
      ]
    },
    "DvirVehicleDefects": {
      "description": "Defects registered for the vehicle which was part of the DVIR.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/dvirTrailerDefectsItems"
      }
    },
    "DvirsListResponse": {
      "description": "A list of DVIRs and pagination information.",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "A list of DVIRs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dvir"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "EldSettingsObjectResponseBody": {
      "description": "The driver's ELD settings.",
      "type": "object",
      "properties": {
        "rulesets": {
          "description": "The driver's ELD rulesets and overrides.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DriverRulesetObjectResponseBody"
          }
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateRequestBody": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "description": "Desired state of engine immobilizer.",
          "type": "string",
          "enum": [
            "ignition_disabled",
            "ignition_enabled"
          ],
          "example": "ignition_disabled"
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateResponseBody": {
      "type": "object",
      "required": [
        "id",
        "state"
      ],
      "properties": {
        "id": {
          "description": "Vehicle ID",
          "type": "integer",
          "format": "int64",
          "example": 1234
        },
        "state": {
          "description": "Requested state of the engine immobilizer.",
          "type": "string",
          "enum": [
            "ignition_enabled",
            "ignition_disabled"
          ],
          "example": "ignition_disabled"
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EngineImmobilizerUpdateEngineImmobilizerStateUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EngineStatusResponseBody": {
      "description": "Equipment engine status.",
      "type": "object",
      "properties": {
        "Running": {
          "description": "Boolean value for whether engine is running or not.",
          "type": "boolean",
          "example": true
        },
        "datetime": {
          "description": "Date time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        }
      }
    },
    "Equipment": {
      "description": "An equipment object.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "assetSerial": {
          "description": "An equipment identification number.",
          "type": "string",
          "example": "1FUJA6BD31LJ09646"
        },
        "externalIds": {
          "$ref": "#/definitions/externalIds"
        },
        "id": {
          "$ref": "#/definitions/EquipmentId"
        },
        "installedGateway": {
          "type": "object",
          "properties": {
            "model": {
              "description": "The model of the installed Samsara gateway.",
              "type": "string",
              "example": "Ag26"
            },
            "serial": {
              "description": "The serial of the installed Samsara gateway.",
              "type": "string"
            }
          }
        },
        "name": {
          "$ref": "#/definitions/EquipmentName"
        },
        "notes": {
          "description": "Notes about a piece of equipment. Samsara supports a maximum of 255 chars.",
          "type": "string",
          "maxLength": 255,
          "example": "These are notes about this given equipment."
        },
        "tags": {
          "description": "An array of all tag mini-objects that are associated with the given equipment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/tagTinyResponse"
          }
        }
      }
    },
    "EquipmentEngineRpm": {
      "description": "Engine RPM reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/EquipmentTime"
        },
        "value": {
          "description": "The revolutions per minute of the engine.",
          "type": "integer",
          "example": 1800
        }
      }
    },
    "EquipmentEngineSeconds": {
      "description": "[DEPRECATED] Please use either `gatewayEngineSeconds` or `obdEngineSeconds`.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/EquipmentTime"
        },
        "value": {
          "description": "An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power and an offset provided manually through the Samsara cloud dashboard.",
          "type": "integer",
          "example": 22374000
        }
      }
    },
    "EquipmentEngineState": {
      "description": "[DEPRECATED] Please use either `gatewayEngineStates` or `obdEngineStates`.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/EquipmentTime"
        },
        "value": {
          "description": "An approximation of engine state based on readings the AG24 receives from the aux/digio cable.",
          "type": "string",
          "enum": [
            "Off",
            "On"
          ],
          "example": "On"
        }
      }
    },
    "EquipmentFuelPercent": {
      "description": "Fuel percent reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/EquipmentTime"
        },
        "value": {
          "description": "The percent of fuel in the unit of equipment.",
          "type": "integer",
          "example": 54
        }
      }
    },
    "EquipmentGatewayEngineSeconds": {
      "description": "Engine seconds reading from the aux/digio cable.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/EquipmentTime"
        },
        "value": {
          "description": "An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power and an offset provided manually through the Samsara cloud dashboard.",
          "type": "integer",
          "example": 22374000
        }
      }
    },
    "EquipmentGatewayEngineState": {
      "description": "Engine state reading from the aux/digio cable.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/EquipmentTime"
        },
        "value": {
          "description": "An approximation of engine state based on readings the AG24 receives from the aux/digio cable.",
          "type": "string",
          "enum": [
            "Off",
            "On"
          ],
          "example": "On"
        }
      }
    },
    "EquipmentGatewayJ1939EngineSeconds": {
      "description": "Engine seconds reading from the J1939/CAT cable.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/EquipmentTime"
        },
        "value": {
          "description": "An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power and an offset provided manually through the Samsara cloud dashboard.",
          "type": "integer",
          "example": 22374000
        }
      }
    },
    "EquipmentGpsOdometerMeters": {
      "description": "GPS odometer reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/EquipmentTime"
        },
        "value": {
          "description": "An approximation of odometer reading based on GPS calculations since the AG24 was activated, and a manual odometer offset provided in the Samsara cloud dashboard.",
          "type": "integer",
          "example": 3200
        }
      }
    },
    "EquipmentHeaderResponseBody": {
      "description": "Equipment header fields.",
      "type": "object",
      "properties": {
        "EquipmentID": {
          "description": "The unique Samsara ID of the equipment. This is automatically generated when the Equipment object is created. It cannot be changed.",
          "type": "string",
          "example": "494123"
        },
        "ExternalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "PIN": {
          "description": "The PIN number of the equipment.",
          "type": "string",
          "example": "8V8WD530FLN016251"
        },
        "SerialNumber": {
          "description": "The serial number of the equipment.",
          "type": "string",
          "example": "8V8WD530FLN016251"
        },
        "UnitInstallDateTime": {
          "description": "Telematics unit install date in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        }
      }
    },
    "EquipmentId": {
      "description": "Unique Samsara ID for the equipment.",
      "type": "string",
      "example": "112"
    },
    "EquipmentListResponse": {
      "description": "List of all equipment objects, and pagination information.",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of equipment objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Equipment"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "EquipmentLocation": {
      "description": "Location reading.",
      "type": "object",
      "required": [
        "time",
        "latitude",
        "longitude"
      ],
      "properties": {
        "heading": {
          "description": "Heading of the unit of equipment in degrees.",
          "type": "number",
          "format": "double",
          "example": 120
        },
        "latitude": {
          "description": "GPS latitude represented in degrees",
          "type": "number",
          "format": "double",
          "example": 122.142
        },
        "longitude": {
          "description": "GPS longitude represented in degrees",
          "type": "number",
          "format": "double",
          "example": -93.343
        },
        "speed": {
          "description": "GPS speed of the unit of equipment in miles per hour.",
          "type": "number",
          "format": "double",
          "example": 48.3
        },
        "time": {
          "$ref": "#/definitions/time"
        }
      }
    },
    "EquipmentLocationsListResponse": {
      "description": "A time-series of equipment locations and pagination information",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "Time-series of locations for the specified units of equipment.",
          "type": "array",
          "items": {
            "description": "A unit of equipment and its time-series of location events.",
            "type": "object",
            "required": [
              "id",
              "name",
              "locations"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/EquipmentId"
              },
              "locations": {
                "description": "A time-series of location events for the given unit of equipment.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EquipmentLocation"
                }
              },
              "name": {
                "$ref": "#/definitions/EquipmentName"
              }
            }
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "EquipmentLocationsResponse": {
      "description": "The most recent equipment locations and pagination information",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of the most recent locations for the specified units of equipment.",
          "type": "array",
          "items": {
            "description": "A unit of equipment and its most recent location.",
            "type": "object",
            "required": [
              "id",
              "name",
              "location"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/EquipmentId"
              },
              "location": {
                "$ref": "#/definitions/EquipmentLocation"
              },
              "name": {
                "$ref": "#/definitions/EquipmentName"
              }
            }
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "EquipmentName": {
      "description": "Name of the equipment.",
      "type": "string",
      "example": "Crane A7"
    },
    "EquipmentObdEngineSeconds": {
      "description": "Engine seconds reading from on-board diagnostics.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/EquipmentTime"
        },
        "value": {
          "description": "The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.",
          "type": "integer",
          "example": 22374000
        }
      }
    },
    "EquipmentObdEngineState": {
      "description": "Engine state reading from on-board diagnostics.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/EquipmentTime"
        },
        "value": {
          "description": "The state of the engine read from on-board diagnostics.",
          "type": "string",
          "enum": [
            "Off",
            "On",
            "Idle"
          ],
          "example": "On"
        }
      }
    },
    "EquipmentPatchEquipmentBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EquipmentPatchEquipmentBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EquipmentPatchEquipmentGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EquipmentPatchEquipmentInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EquipmentPatchEquipmentMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EquipmentPatchEquipmentNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EquipmentPatchEquipmentNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EquipmentPatchEquipmentRequestBody": {
      "type": "object",
      "properties": {
        "attributes": {
          "description": "List of attributes associated with the entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoaAttributeTiny"
          }
        },
        "engineHours": {
          "description": "When you provide a manual engine hours override, Samsara will begin updating a equipment's engine hours used since this override was set.",
          "type": "integer",
          "format": "int64",
          "example": 1234
        },
        "equipmentSerialNumber": {
          "description": "The serial number of the equipment.",
          "type": "string",
          "example": "8V8WD530FLN016251"
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "The unique Samsara ID of the Equipment. This is automatically generated when the Equipment object is created. It cannot be changed.",
          "type": "string",
          "example": "494123"
        },
        "name": {
          "description": "The human-readable name of the Equipment. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. By default, this name is the serial number of the Samsara Asset Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.",
          "type": "string",
          "example": "Equipment-123"
        },
        "notes": {
          "description": "These are generic notes about the Equipment. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 255,
          "example": "These are my equipment notes"
        },
        "odometerMeters": {
          "description": "When you provide a manual odometer override, Samsara will begin updating a equipment's odometer using GPS distance traveled since this override was set.",
          "type": "integer",
          "format": "int64",
          "example": 1234
        },
        "tagIds": {
          "description": "An array of IDs of tags to associate with this equipment.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "Accusantium vitae nulla quisquam sint molestias quod."
          },
          "example": [
            "Et molestiae laborum dicta.",
            "Recusandae quia omnis unde odit.",
            "Labore qui iste dicta placeat deserunt.",
            "Qui et magni exercitationem id enim."
          ]
        }
      }
    },
    "EquipmentPatchEquipmentResponseBody": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/EquipmentWithAttributesResponseObjectResponseBody"
        }
      }
    },
    "EquipmentPatchEquipmentServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EquipmentPatchEquipmentTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EquipmentPatchEquipmentUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "EquipmentResponse": {
      "description": "A response containing an equipment object.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Equipment"
        }
      }
    },
    "EquipmentStatsListResponse": {
      "description": "A time-series of equipment stats and pagination information",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "Time-series of stats for the specified units of equipment and stat types.",
          "type": "array",
          "items": {
            "description": "A unit of equipment and its time-series of stats events.",
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "engineRpm": {
                "description": "A time-series of engine RPM readings for the given unit of equipment.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EquipmentEngineRpm"
                }
              },
              "engineSeconds": {
                "description": "[DEPRECATED] Please use either `gatewayEngineSeconds`, `obdEngineSeconds`, or `gatewayJ1939EngineSeconds`.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EquipmentEngineSeconds"
                }
              },
              "engineStates": {
                "description": "[DEPRECATED] Please use either `gatewayEngineStates` or `obdEngineStates`.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EquipmentEngineState"
                }
              },
              "fuelPercent": {
                "description": "A time-series of fuel percent level changes for the given unit of equipment.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EquipmentFuelPercent"
                }
              },
              "gatewayEngineSeconds": {
                "description": "A time-series of engine seconds readings for the given unit of equipment as an approximate based on readings from the AG24's aux/digio cable.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EquipmentGatewayEngineSeconds"
                }
              },
              "gatewayEngineState": {
                "description": "A time-series of engine state changes (as read from the AG24's aux/digio cable) for the given unit of equipment.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EquipmentGatewayEngineState"
                }
              },
              "gatewayJ1939EngineSeconds": {
                "description": "A time-series of engine seconds readings for the given unit of equipment as an approximate based on readings from the AG24's CAT/J1939 cable.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EquipmentGatewayJ1939EngineSeconds"
                }
              },
              "gpsOdometerMeters": {
                "description": "A time-series of GPS odometer readings for the given unit of equipment.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EquipmentGpsOdometerMeters"
                }
              },
              "id": {
                "$ref": "#/definitions/EquipmentId"
              },
              "name": {
                "$ref": "#/definitions/EquipmentName"
              },
              "obdEngineSeconds": {
                "description": "A time-series of engine seconds readings for the given unit of equipment directly from on-board diagnostics.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EquipmentObdEngineSeconds"
                }
              },
              "obdEngineState": {
                "description": "A time-series of engine state changes (as read from on-board diagnostics) for the given unit of equipment.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EquipmentObdEngineState"
                }
              }
            }
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "EquipmentStatsResponse": {
      "description": "The most recent equipment stats and pagination information",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of the most recent stats for the specified units of equipment and stat types.",
          "type": "array",
          "items": {
            "description": "A unit of equipment and its most recent stat.",
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "engineRpm": {
                "$ref": "#/definitions/EquipmentEngineRpm"
              },
              "engineSeconds": {
                "$ref": "#/definitions/EquipmentEngineSeconds"
              },
              "engineState": {
                "$ref": "#/definitions/EquipmentEngineState"
              },
              "fuelPercent": {
                "$ref": "#/definitions/EquipmentFuelPercent"
              },
              "gatewayEngineSeconds": {
                "$ref": "#/definitions/EquipmentGatewayEngineSeconds"
              },
              "gatewayEngineState": {
                "$ref": "#/definitions/EquipmentGatewayEngineState"
              },
              "gpsOdometerMeters": {
                "$ref": "#/definitions/EquipmentGpsOdometerMeters"
              },
              "id": {
                "$ref": "#/definitions/EquipmentId"
              },
              "name": {
                "$ref": "#/definitions/EquipmentName"
              },
              "obdEngineSeconds": {
                "$ref": "#/definitions/EquipmentObdEngineSeconds"
              },
              "obdEngineState": {
                "$ref": "#/definitions/EquipmentObdEngineState"
              }
            }
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "EquipmentTime": {
      "description": "UTC timestamp of the time the data point was generated by the equipment, in RFC3339 format.",
      "type": "string",
      "example": "2019-05-03T04:30:31Z"
    },
    "EquipmentWithAttributesResponseObjectResponseBody": {
      "description": "The equipment object.",
      "type": "object",
      "properties": {
        "attributes": {
          "description": "List of attributes associated with the entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoaAttributeTinyResponseBody"
          }
        },
        "equipmentSerialNumber": {
          "description": "The serial number of the equipment.",
          "type": "string",
          "example": "8V8WD530FLN016251"
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "The unique Samsara ID of the Equipment. This is automatically generated when the Equipment object is created. It cannot be changed.",
          "type": "string",
          "example": "494123"
        },
        "installedGateway": {
          "$ref": "#/definitions/GoaGatewayTinyResponseResponseBody"
        },
        "name": {
          "description": "The human-readable name of the Equipment. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. By default, this name is the serial number of the Samsara Asset Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.",
          "type": "string",
          "example": "Equipment-123"
        },
        "notes": {
          "description": "These are generic notes about the Equipment. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 255,
          "example": "These are my equipment notes"
        },
        "tags": {
          "description": "The list of [tags](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting) associated with the Equipment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoaTagTinyResponseResponseBody"
          }
        }
      }
    },
    "ExtendedDriverTinyResponse": {
      "description": "A minified driver object.",
      "type": "object",
      "properties": {
        "externalIds": {
          "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
          "type": "object",
          "example": {
            "maintenanceId": "250020",
            "payrollId": "ABFS18600"
          }
        },
        "id": {
          "description": "ID of the driver.",
          "type": "string",
          "example": "88668"
        },
        "name": {
          "description": "Name of the driver.",
          "type": "string",
          "example": "Susan Bob"
        },
        "username": {
          "description": "Username of the driver.",
          "type": "string",
          "example": "susanbob"
        }
      }
    },
    "FftSpectraDataPoint": {
      "description": "FFT spectrum data point of a data input.",
      "type": "object",
      "properties": {
        "fftSpectra": {
          "description": "FFT spectrum data",
          "type": "object",
          "properties": {
            "frequencies": {
              "description": "Frequencies",
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            },
            "x": {
              "description": "X-axis data",
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            },
            "y": {
              "description": "Y-axis data",
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            },
            "z": {
              "description": "Z-axis data",
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "time": {
          "$ref": "#/definitions/time"
        }
      }
    },
    "FuelConsumedMl": {
      "description": "Fuel consumption in milliliters.",
      "type": "number"
    },
    "FuelRemainingResponseBody": {
      "description": "Fuel remaining in equipment.",
      "type": "object",
      "properties": {
        "Percent": {
          "description": "Percent of fuel remaining in tank.",
          "type": "number",
          "format": "double",
          "example": 12
        },
        "datetime": {
          "description": "Date time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        }
      }
    },
    "GatewayAssetResponseObjectResponseBody": {
      "description": "An object containing information about the asset the gateway is installed on",
      "type": "object",
      "properties": {
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "The unique Samsara ID of the asset where the gateway is installed. This is automatically generated when the asset is created and cannot be changed. Use this ID on PATCH vehicle, equipment, or trailer endpoints to update the asset",
          "type": "string",
          "example": "8393848111"
        }
      }
    },
    "GatewayResponseObjectResponseBody": {
      "type": "object",
      "required": [
        "serial",
        "model"
      ],
      "properties": {
        "accessoryDevices": {
          "description": "Accessory devices on gateway",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessoryResponseObjectResponseBody"
          }
        },
        "asset": {
          "$ref": "#/definitions/GatewayAssetResponseObjectResponseBody"
        },
        "connectionStatus": {
          "$ref": "#/definitions/ConnectionStatusResponseObjectResponseBody"
        },
        "dataUsageLast30Days": {
          "$ref": "#/definitions/DataUsageResponseObjectResponseBody"
        },
        "model": {
          "description": "The model of the gateway installed on the asset.",
          "type": "string",
          "enum": [
            "AG15",
            "AG24",
            "AG24EU",
            "AG26",
            "AG26EU",
            "AG41",
            "AG41EU",
            "AG45",
            "AG45EU",
            "AG46",
            "AG46EU",
            "AG46P",
            "IG15",
            "IG21",
            "IG41",
            "IG61",
            "SG1",
            "VG32",
            "VG33",
            "VG34",
            "VG34EU",
            "VG34FN",
            "VG54EU",
            "VG54NA"
          ],
          "example": "VG34"
        },
        "serial": {
          "description": "The serial number of the gateway installed on the asset.",
          "type": "string",
          "example": "GFRV-43N-VGX"
        }
      }
    },
    "GatewaysDeleteGatewayBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysDeleteGatewayBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysDeleteGatewayGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysDeleteGatewayInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysDeleteGatewayMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysDeleteGatewayNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysDeleteGatewayNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysDeleteGatewayServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysDeleteGatewayTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysDeleteGatewayUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysGetGatewaysBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysGetGatewaysBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysGetGatewaysGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysGetGatewaysInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysGetGatewaysMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysGetGatewaysNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysGetGatewaysNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysGetGatewaysResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "Activated gateways",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayResponseObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "GatewaysGetGatewaysServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysGetGatewaysTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysGetGatewaysUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysPostGatewayBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysPostGatewayBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysPostGatewayGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysPostGatewayInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysPostGatewayMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysPostGatewayNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysPostGatewayNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysPostGatewayRequestBody": {
      "type": "object",
      "required": [
        "serial"
      ],
      "properties": {
        "serial": {
          "description": "Gateway serial number",
          "type": "string",
          "pattern": "^[a-zA-Z0-9]{4}-[a-zA-Z0-9]{3}-[a-zA-Z0-9]{3}$",
          "example": "GFRV-43N-VGX"
        }
      }
    },
    "GatewaysPostGatewayResponseBody": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/GatewayResponseObjectResponseBody"
        }
      }
    },
    "GatewaysPostGatewayServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysPostGatewayTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GatewaysPostGatewayUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "GetAttributesByEntityTypeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "GoaAddressTinyResponseResponseBody": {
      "description": "A minified Address object",
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "Id of the address",
          "type": "string",
          "example": "494123"
        },
        "name": {
          "description": "Name of the address",
          "type": "string",
          "example": "Company Office #1"
        }
      }
    },
    "GoaAttributeTiny": {
      "description": "Attribute properties.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the attribute",
          "type": "string",
          "example": "494123"
        },
        "name": {
          "description": "Name of the attribute",
          "type": "string",
          "example": "Compliance/ELD"
        },
        "numberValues": {
          "description": "List of number values associated with the attribute",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double",
            "example": 0.3635325958410958
          },
          "example": [
            867,
            5309
          ]
        },
        "stringValues": {
          "description": "List of string values associated with the attribute.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "Ad et repellendus."
          },
          "example": [
            "HQ",
            "Leased"
          ]
        }
      }
    },
    "GoaAttributeTinyRequestBody": {
      "description": "Attribute properties.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the attribute",
          "type": "string",
          "example": "494123"
        },
        "name": {
          "description": "Name of the attribute",
          "type": "string",
          "example": "Compliance/ELD"
        },
        "numberValues": {
          "description": "List of number values associated with the attribute",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double",
            "example": 0.09008720844465164
          },
          "example": [
            867,
            5309
          ]
        },
        "stringValues": {
          "description": "List of string values associated with the attribute.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "Adipisci et velit quis eum amet."
          },
          "example": [
            "HQ",
            "Leased"
          ]
        }
      }
    },
    "GoaAttributeTinyResponseBody": {
      "description": "Attribute properties.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the attribute",
          "type": "string",
          "example": "494123"
        },
        "name": {
          "description": "Name of the attribute",
          "type": "string",
          "example": "Compliance/ELD"
        },
        "numberValues": {
          "description": "List of number values associated with the attribute",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double",
            "example": 0.7284731266146857
          },
          "example": [
            867,
            5309
          ]
        },
        "stringValues": {
          "description": "List of string values associated with the attribute.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "Omnis dignissimos qui quae."
          },
          "example": [
            "HQ",
            "Leased"
          ]
        }
      }
    },
    "GoaDocumentTinyResponseResponseBody": {
      "description": "A minified Document object",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "Id of the document",
          "type": "string",
          "example": "494123"
        },
        "name": {
          "description": "Name of the document",
          "type": "string",
          "example": "Fuel Receipt Wichita"
        }
      }
    },
    "GoaDocumentTypeTinyResponseResponseBody": {
      "description": "A minified document type object",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the document type.",
          "type": "string",
          "example": "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7"
        },
        "name": {
          "description": "Name of the document type.",
          "type": "string",
          "example": "Fleet Truck List"
        }
      }
    },
    "GoaDriverTinyResponseResponseBody": {
      "description": "A minified driver object",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "ID of the driver",
          "type": "string",
          "example": "45646"
        },
        "name": {
          "description": "Name of the driver",
          "type": "string",
          "example": "Driver Bob"
        }
      }
    },
    "GoaGatewayTinyResponseResponseBody": {
      "description": "A minified gateway object",
      "type": "object",
      "required": [
        "serial",
        "model"
      ],
      "properties": {
        "model": {
          "description": "The model of the gateway installed on the asset.",
          "type": "string",
          "enum": [
            "AG15",
            "AG24",
            "AG24EU",
            "AG26",
            "AG26EU",
            "AG41",
            "AG41EU",
            "AG45",
            "AG45EU",
            "AG46",
            "AG46EU",
            "AG46P",
            "IG15",
            "IG21",
            "IG41",
            "IG61",
            "SG1",
            "VG32",
            "VG33",
            "VG34",
            "VG34EU",
            "VG34FN",
            "VG54EU",
            "VG54NA"
          ],
          "example": "VG34"
        },
        "serial": {
          "description": "The serial number of the gateway installed on the asset.",
          "type": "string",
          "example": "GFRV-43N-VGX"
        }
      }
    },
    "GoaPaginationResponseResponseBody": {
      "description": "Pagination parameters.",
      "type": "object",
      "required": [
        "endCursor",
        "hasNextPage"
      ],
      "properties": {
        "endCursor": {
          "description": "Cursor identifier representing the last element in the response. This value should be used in conjunction with a subsequent request's 'after' query parameter. This may be an empty string if there are no more pages left to view.",
          "type": "string",
          "example": "MjkY"
        },
        "hasNextPage": {
          "description": "True if there are more pages of results immediately available after this endCursor.",
          "type": "boolean",
          "example": true
        }
      }
    },
    "GoaRouteStopTinyResponseResponseBody": {
      "description": "A minified route stop object",
      "type": "object",
      "properties": {
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "Id of the route stop",
          "type": "string",
          "example": "494123"
        },
        "name": {
          "description": "Name of the route stop",
          "type": "string",
          "example": "Company Warehouse #1"
        }
      }
    },
    "GoaTagTinyResponseResponseBody": {
      "description": "A minified tag object",
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "description": "ID of the tag",
          "type": "string",
          "example": "3914"
        },
        "name": {
          "description": "Name of the tag.",
          "type": "string",
          "example": "East Coast"
        },
        "parentTagId": {
          "description": "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
          "type": "string",
          "example": "4815"
        }
      }
    },
    "GoaVehicleTinyResponseResponseBody": {
      "description": "A minified vehicle object",
      "type": "object",
      "properties": {
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "ID of the vehicle",
          "type": "string",
          "example": "494123"
        },
        "name": {
          "description": "Name of the vehicle",
          "type": "string",
          "example": "Fleet Truck #1"
        }
      }
    },
    "HosBreak": {
      "description": "Remaining durations for the HOS rest break requirement.",
      "type": "object",
      "properties": {
        "timeUntilBreakDurationMs": {
          "description": "Time until the driver has a required break in milliseconds.",
          "type": "number",
          "example": 28800000
        }
      }
    },
    "HosClocks": {
      "description": "Remaining durations and start times (where applicable) for various HOS rules. See [this page](https://www.samsara.com/fleet/eld-compliance/hours-of-service) for more information on HOS rules.",
      "type": "object",
      "properties": {
        "break": {
          "$ref": "#/definitions/HosBreak"
        },
        "cycle": {
          "$ref": "#/definitions/HosCycle"
        },
        "drive": {
          "$ref": "#/definitions/HosDrive"
        },
        "shift": {
          "$ref": "#/definitions/HosShift"
        }
      }
    },
    "HosClocksForDriver": {
      "description": "HOS clock values for a specific driver, including remaining times and violations.",
      "type": "object",
      "properties": {
        "clocks": {
          "$ref": "#/definitions/HosClocks"
        },
        "currentDutyStatus": {
          "$ref": "#/definitions/CurrentDutyStatus"
        },
        "currentVehicle": {
          "$ref": "#/definitions/vehicleTinyResponse"
        },
        "driver": {
          "$ref": "#/definitions/driverTinyResponse"
        },
        "violations": {
          "$ref": "#/definitions/HosViolations"
        }
      }
    },
    "HosClocksForDrivers": {
      "description": "List of HOS clocks for the specified drivers.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/HosClocksForDriver"
      }
    },
    "HosClocksResponse": {
      "description": "Drivers HOS clocks and pagination info.",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/HosClocksForDrivers"
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "HosCycle": {
      "description": "Remaining durations and start time for the HOS driving cycle.",
      "type": "object",
      "properties": {
        "cycleRemainingDurationMs": {
          "description": "Remaining on duty or driving time the driver has in the current cycle in milliseconds. For property-carrying drivers, this is the amount of time the driver can be on duty or driving before hitting the 60/70-hour limit in 7/8 days.",
          "type": "number",
          "example": 252000000
        },
        "cycleStartedAtTime": {
          "$ref": "#/definitions/time"
        },
        "cycleTomorrowDurationMs": {
          "description": "Remaining on duty or driving time the driver has available tomorrow in milliseconds. For property-carrying drivers this is calculated based on the 60/70-hour limit in 7/8 days rule.",
          "type": "number",
          "example": 252000000
        }
      }
    },
    "HosDailyLogsGetHosDailyLogsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "HosDailyLogsGetHosDailyLogsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "HosDailyLogsGetHosDailyLogsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "HosDailyLogsGetHosDailyLogsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "HosDailyLogsGetHosDailyLogsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "HosDailyLogsGetHosDailyLogsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "HosDailyLogsGetHosDailyLogsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "HosDailyLogsGetHosDailyLogsResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of drivers and their HOS daily logs data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HosDailyLogsObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "HosDailyLogsGetHosDailyLogsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "HosDailyLogsGetHosDailyLogsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "HosDailyLogsGetHosDailyLogsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "HosDailyLogsObjectResponseBody": {
      "type": "object",
      "required": [
        "driver",
        "startTime",
        "endTime"
      ],
      "properties": {
        "distanceTraveled": {
          "$ref": "#/definitions/DistanceTraveledObjectResponseBody"
        },
        "driver": {
          "$ref": "#/definitions/DriverWithTimezoneEldSettingsObjectResponseBody"
        },
        "dutyStatusDurations": {
          "$ref": "#/definitions/DutyStatusDurationObjectResponseBody"
        },
        "endTime": {
          "description": "The end time of the daily log in RFC 3339 format. This will be calculated using timezone of the driver.",
          "type": "string",
          "example": "2019-06-20T19:08:25Z"
        },
        "logMetaData": {
          "$ref": "#/definitions/LogMetaDataObjectResponseBody"
        },
        "pendingDutyStatusDurations": {
          "$ref": "#/definitions/PendingDutyStatusDurationsObjectResponseBody"
        },
        "startTime": {
          "description": "The start time of the daily log in RFC 3339 format. This will be calculated using timezone of the driver.",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        }
      }
    },
    "HosDrive": {
      "description": "Remaining durations for the HOS driving shift limits.",
      "type": "object",
      "properties": {
        "driveRemainingDurationMs": {
          "description": "Remaining driving time the driver has in the current shift in milliseconds. For property-carrying drivers, this is the amount of time the driver can drive before hitting the 11-hour limit.",
          "type": "number",
          "example": 39600000
        }
      }
    },
    "HosLogEntry": {
      "description": "A single HOS log entry.",
      "type": "object",
      "required": [
        "logStartTime"
      ],
      "properties": {
        "codrivers": {
          "description": "The codriver information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/driverTinyResponse"
          }
        },
        "hosStatusType": {
          "description": "The Hours of Service status type.",
          "type": "string",
          "enum": [
            "offDuty",
            "sleeperBed",
            "driving",
            "onDuty",
            "yardMove",
            "personalConveyance"
          ],
          "example": "offDuty"
        },
        "logEndTime": {
          "$ref": "#/definitions/time"
        },
        "logRecordedLocation": {
          "$ref": "#/definitions/location"
        },
        "logStartTime": {
          "$ref": "#/definitions/time"
        },
        "remark": {
          "description": "Remark associated with the log entry.",
          "type": "string",
          "example": "Lunch Break"
        },
        "vehicle": {
          "$ref": "#/definitions/vehicleTinyResponse"
        }
      }
    },
    "HosLogsForDriver": {
      "description": "List of HOS logs for a driver.",
      "type": "object",
      "properties": {
        "driver": {
          "$ref": "#/definitions/driverTinyResponse"
        },
        "hosLogs": {
          "$ref": "#/definitions/HosLogsList"
        }
      }
    },
    "HosLogsForDrivers": {
      "description": "List of HOS logs for the specified drivers.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/HosLogsForDriver"
      }
    },
    "HosLogsList": {
      "description": "List of HOS log entries.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/HosLogEntry"
      }
    },
    "HosLogsResponse": {
      "description": "HOS logs and pagination info.",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/HosLogsForDrivers"
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "HosShift": {
      "description": "Remaining durations and start time for the HOS on duty shift limits.",
      "type": "object",
      "properties": {
        "shiftRemainingDurationMs": {
          "description": "Remaining on duty or driving time the driver in the current shift in milliseconds. For property-carrying drivers, this is the amount of time the driver can be on duty or driving before hitting the 14-hour limit.",
          "type": "number",
          "example": 50400000
        }
      }
    },
    "HosViolations": {
      "description": "Durations the driver has been in violation of HOS rules. See [this page](https://www.samsara.com/fleet/eld-compliance/hours-of-service) for more information on HOS rules.",
      "type": "object",
      "properties": {
        "cycleViolationDurationMs": {
          "description": "Time since the driver has surpassed the driving cycle duration limit in milliseconds. For property-carrying drivers, this is the amount of time the driver has been on duty or driving past the 60/70-hour limit in 7/8 days.",
          "type": "number",
          "example": 39600000
        },
        "shiftDrivingViolationDurationMs": {
          "description": "Time since the driver has surpassed the driving shift duration limit in milliseconds. For property-carrying drivers, this is the amount of time the driver has been driving past the 11-hour limit.",
          "type": "number",
          "example": 39600000
        }
      }
    },
    "IFTAGetIftaJurisdictionReportsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaJurisdictionReportsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaJurisdictionReportsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaJurisdictionReportsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaJurisdictionReportsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaJurisdictionReportsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaJurisdictionReportsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaJurisdictionReportsResponseBody": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/IftaJurisdictionReportDataObjectResponseBody"
        }
      }
    },
    "IFTAGetIftaJurisdictionReportsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaJurisdictionReportsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaJurisdictionReportsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaVehicleReportsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaVehicleReportsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaVehicleReportsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaVehicleReportsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaVehicleReportsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaVehicleReportsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaVehicleReportsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaVehicleReportsResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/IftaVehicleReportDataObjectResponseBody"
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "IFTAGetIftaVehicleReportsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaVehicleReportsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IFTAGetIftaVehicleReportsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "IdleTimeDurationMs": {
      "description": "Time spent idling in milliseconds.",
      "type": "number"
    },
    "IftaJurisdictionReportDataObjectResponseBody": {
      "description": "Dictionary containing summarized jurisdiction report data.",
      "type": "object",
      "required": [
        "jurisdictionReports",
        "year"
      ],
      "properties": {
        "jurisdictionReports": {
          "description": "List of summarized jurisdiction reports.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IftaJurisdictionSummaryObjectResponseBody"
          }
        },
        "month": {
          "description": "The specified month duration for this IFTA report.",
          "type": "string",
          "example": "January"
        },
        "quarter": {
          "description": "The specified quarter duration for this IFTA report.",
          "type": "string",
          "example": "Q4"
        },
        "troubleshooting": {
          "$ref": "#/definitions/IftaReportTroubleshootingObjectResponseBody"
        },
        "year": {
          "description": "The specified year for this IFTA report.",
          "type": "integer",
          "format": "int64",
          "example": 2021
        }
      }
    },
    "IftaJurisdictionSummaryObjectResponseBody": {
      "description": "A summary of this jurisdiction's IFTA data.",
      "type": "object",
      "required": [
        "jurisdiction",
        "totalMeters",
        "taxableMeters"
      ],
      "properties": {
        "jurisdiction": {
          "description": "Jurisdiction code.",
          "type": "string",
          "example": "GA"
        },
        "taxPaidLiters": {
          "description": "Liters purchased for all qualified vehicles.",
          "type": "number",
          "format": "double",
          "example": 25.5
        },
        "taxableMeters": {
          "description": "Distance in meters traveled on public roads in an IFTA jurisdiction.",
          "type": "number",
          "format": "double",
          "example": 2350
        },
        "totalMeters": {
          "description": "Total meters driven in this jurisdiction, taxable and non-taxable.",
          "type": "number",
          "format": "double",
          "example": 2350
        }
      }
    },
    "IftaReportTroubleshootingObjectResponseBody": {
      "description": "IFTA report troubleshooting information.",
      "type": "object",
      "required": [
        "unassignedFuelTypePurchases",
        "unassignedFuelTypeVehicles",
        "unassignedVehiclePurchases",
        "noPurchasesFound"
      ],
      "properties": {
        "noPurchasesFound": {
          "description": "Whether or not fuel purchases were found for this report.",
          "type": "boolean",
          "example": true
        },
        "unassignedFuelTypePurchases": {
          "description": "The number of fuel purchases without a fuel type assigned. Fuel purchases are used to calculate tax paid gallons.",
          "type": "integer",
          "format": "int64",
          "example": 200
        },
        "unassignedFuelTypeVehicles": {
          "description": "The number of vehicles without a fuel type assigned. Vehicles without an assigned fuel type may affect total mileage.",
          "type": "integer",
          "format": "int64",
          "example": 2500
        },
        "unassignedVehiclePurchases": {
          "description": "Purchases without an assigned fuel type may affect tax-paid gallons and fleet mpg.",
          "type": "integer",
          "format": "int64",
          "example": 2500
        }
      }
    },
    "IftaVehicleReportDataObjectResponseBody": {
      "description": "Dictionary containing summarized vehicle report data.",
      "type": "object",
      "required": [
        "vehicleReports",
        "year"
      ],
      "properties": {
        "month": {
          "description": "The specified month duration for this IFTA report.",
          "type": "string",
          "example": "January"
        },
        "quarter": {
          "description": "The specified quarter duration for this IFTA report.",
          "type": "string",
          "example": "Q4"
        },
        "troubleshooting": {
          "$ref": "#/definitions/IftaReportTroubleshootingObjectResponseBody"
        },
        "vehicleReports": {
          "description": "List of summarized vehicle reports.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IftaVehicleReportObjectResponseBody"
          }
        },
        "year": {
          "description": "The specified year for this IFTA report.",
          "type": "integer",
          "format": "int64",
          "example": 2021
        }
      }
    },
    "IftaVehicleReportObjectResponseBody": {
      "description": "A summary of this vehicle's IFTA data.",
      "type": "object",
      "required": [
        "vehicle",
        "jurisdictions"
      ],
      "properties": {
        "jurisdictions": {
          "description": "List of jurisdiction summaries.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IftaJurisdictionSummaryObjectResponseBody"
          }
        },
        "vehicle": {
          "$ref": "#/definitions/GoaVehicleTinyResponseResponseBody"
        }
      }
    },
    "ImageDataObjectResponseBody": {
      "type": "object",
      "properties": {
        "cameraView": {
          "description": "A description of the cameras view. Empty if none can be inferred. (Examples: `frontFacing`, `driverFacing`).",
          "type": "string",
          "example": "`frontFacing`"
        },
        "url": {
          "description": "The s3 url of the image.",
          "type": "string",
          "example": "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com"
        },
        "urlExpiryTime": {
          "description": "The expiry time of the URL in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        }
      }
    },
    "ImageObjectResponseBody": {
      "type": "object",
      "properties": {
        "captureTime": {
          "description": "The capture time of the image in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2015-09-15T14:00:12-04:00"
        },
        "imageData": {
          "description": "List of image data objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageDataObjectResponseBody"
          }
        }
      }
    },
    "J1939D1StatusDataPoint": {
      "description": "Active J1939D1 statuses of a device.",
      "type": "object",
      "properties": {
        "time": {
          "$ref": "#/definitions/time"
        },
        "value": {
          "description": "List of active statuses.",
          "type": "array",
          "items": {
            "description": "A single J1939D1 status",
            "type": "object",
            "properties": {
              "amberLampStatus": {
                "type": "number",
                "format": "int32"
              },
              "fmi": {
                "type": "number",
                "format": "int32"
              },
              "milStatus": {
                "type": "number",
                "format": "int32"
              },
              "occuranceCount": {
                "type": "number",
                "format": "int32"
              },
              "protectLampStatus": {
                "type": "number",
                "format": "int32"
              },
              "redLampStatus": {
                "type": "number",
                "format": "int32"
              },
              "spn": {
                "type": "number",
                "format": "int32"
              },
              "txId": {
                "type": "number",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "JobResponseObjectResponseBody": {
      "description": "Job object to be passed back",
      "type": "object",
      "required": [
        "uuid",
        "id",
        "name",
        "industrialAssets",
        "startDate",
        "endDate",
        "createdAt",
        "modifiedAt",
        "status",
        "customerName",
        "address",
        "notes"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/jobLocationResponseObjectResponseBody"
        },
        "createdAt": {
          "description": "When the job was created",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        },
        "customerName": {
          "description": "Customer name for job",
          "type": "string",
          "example": "Samsara"
        },
        "endDate": {
          "description": "End date of job in RFC 3339 format",
          "type": "string",
          "example": "2019-06-13"
        },
        "id": {
          "description": "Job id",
          "type": "string",
          "example": "1553"
        },
        "industrialAssets": {
          "description": "Industrial Assets in this job (cannot have both industrial assets and fleet devices in the same job)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/industrialAssetObjectResponseBody"
          }
        },
        "modifiedAt": {
          "description": "When the job was last modified",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        },
        "name": {
          "description": "Job name",
          "type": "string",
          "example": "My Job Name"
        },
        "notes": {
          "description": "Notes for the upcoming job",
          "type": "string",
          "maxLength": 2000,
          "example": "These are my notes"
        },
        "startDate": {
          "description": "Start date of job in RFC 3339 format",
          "type": "string",
          "example": "2019-06-13"
        },
        "status": {
          "description": "The current job status",
          "type": "string",
          "enum": [
            "active",
            "scheduled",
            "completed"
          ],
          "example": "active"
        },
        "uuid": {
          "description": "Samsara uuid",
          "type": "string",
          "example": "8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"
        }
      }
    },
    "JobsCreateJobBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsCreateJobBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsCreateJobGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsCreateJobInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsCreateJobMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsCreateJobNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsCreateJobNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsCreateJobRequestBody": {
      "description": "Job object to be created",
      "type": "object",
      "required": [
        "job"
      ],
      "properties": {
        "job": {
          "$ref": "#/definitions/PostJobObjectRequestBody"
        }
      }
    },
    "JobsCreateJobResponseBody": {
      "type": "object",
      "required": [
        "statusCode"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/JobResponseObjectResponseBody"
        },
        "errorMessage": {
          "description": "The error message",
          "type": "string",
          "example": "Invalid Job Id provided"
        },
        "id": {
          "description": "The job id of the failed request",
          "type": "string",
          "example": "1553"
        },
        "statusCode": {
          "description": "The status code of the request. 200 indicates the request succeeded for this data output. 500 indicates an internal server error.",
          "type": "integer",
          "format": "int64",
          "example": 200
        },
        "uuid": {
          "description": "The uuid of the failed request",
          "type": "string",
          "example": "8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"
        }
      }
    },
    "JobsCreateJobServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsCreateJobTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsCreateJobUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsDeleteJobBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsDeleteJobBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsDeleteJobGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsDeleteJobInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsDeleteJobMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsDeleteJobNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsDeleteJobNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsDeleteJobResponseBody": {
      "type": "object",
      "required": [
        "statusCode"
      ],
      "properties": {
        "errorMessage": {
          "description": "The error message",
          "type": "string",
          "example": "Invalid Job Id provided"
        },
        "id": {
          "description": "The job id of the failed request",
          "type": "string",
          "example": "1553"
        },
        "statusCode": {
          "description": "The status code of the request. 200 indicates the request succeeded for this data output. 500 indicates an internal server error.",
          "type": "integer",
          "format": "int64",
          "example": 200
        },
        "uuid": {
          "description": "The uuid of the failed request",
          "type": "string",
          "example": "8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"
        }
      }
    },
    "JobsDeleteJobServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsDeleteJobTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsDeleteJobUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsGetJobsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsGetJobsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsGetJobsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsGetJobsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsGetJobsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsGetJobsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsGetJobsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsGetJobsResponseBody": {
      "type": "object",
      "required": [
        "pagination",
        "statusCode"
      ],
      "properties": {
        "data": {
          "description": "List of Job Objects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobResponseObjectResponseBody"
          }
        },
        "errorMessage": {
          "description": "The error message",
          "type": "string",
          "example": "Invalid Job Id provided"
        },
        "id": {
          "description": "The job id of the failed request",
          "type": "string",
          "example": "1553"
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        },
        "statusCode": {
          "description": "The status code of the request. 200 indicates the request succeeded for this data output. 500 indicates an internal server error.",
          "type": "integer",
          "format": "int64",
          "example": 200
        },
        "uuid": {
          "description": "The uuid of the failed request",
          "type": "string",
          "example": "8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"
        }
      }
    },
    "JobsGetJobsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsGetJobsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsGetJobsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsPatchJobBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsPatchJobBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsPatchJobGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsPatchJobInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsPatchJobMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsPatchJobNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsPatchJobNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsPatchJobRequestBody": {
      "description": "Job object with fields to update. If a field is not provided, it will not be updated",
      "type": "object",
      "required": [
        "job"
      ],
      "properties": {
        "job": {
          "$ref": "#/definitions/PatchJobObjectRequestBody"
        },
        "keepHistory": {
          "description": "Defaults to true if user does not want to overwrite entire history for an active job (irrelevant for scheduled/completed jobs)",
          "type": "boolean",
          "default": true,
          "example": true
        }
      }
    },
    "JobsPatchJobResponseBody": {
      "type": "object",
      "required": [
        "statusCode"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/JobResponseObjectResponseBody"
        },
        "errorMessage": {
          "description": "The error message",
          "type": "string",
          "example": "Invalid Job Id provided"
        },
        "id": {
          "description": "The job id of the failed request",
          "type": "string",
          "example": "1553"
        },
        "statusCode": {
          "description": "The status code of the request. 200 indicates the request succeeded for this data output. 500 indicates an internal server error.",
          "type": "integer",
          "format": "int64",
          "example": 200
        },
        "uuid": {
          "description": "The uuid of the failed request",
          "type": "string",
          "example": "8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"
        }
      }
    },
    "JobsPatchJobServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsPatchJobTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "JobsPatchJobUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "ListAddressesResponse": {
      "description": "A list of Addresses and pagination information.",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "A list of Addresses.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "ListCarrierProposedAssignmentResponse": {
      "description": "A list of carrier-proposed assignments and pagination information.",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "A list of carrier-proposed assignments",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarrierProposedAssignment"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "ListContactsResponse": {
      "description": "A list of contacts.",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "ListDriversResponse": {
      "description": "A list of drivers.",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Driver"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "ListIndustrialAssetsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "ListTagsResponse": {
      "description": "A list of tags.",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "ListUserRolesResponse": {
      "description": "A list of user roles.",
      "type": "object",
      "properties": {
        "data": {
          "description": "A list of user roles",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserRole"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "ListUsersResponse": {
      "description": "A list of users.",
      "type": "object",
      "properties": {
        "data": {
          "description": "A list of users.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "ListVehiclesResponse": {
      "description": "Response for retrieving a list of vehicles.",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vehicle"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "LocationDataPoint": {
      "description": "A single location data point of a data input.",
      "type": "object",
      "properties": {
        "gpsLocation": {
          "description": "GPS location information of the data input's datapoint.",
          "type": "object",
          "properties": {
            "formattedAddress": {
              "description": "Formatted address of the location",
              "type": "string",
              "format": "string",
              "example": "350 Rhode Island St, San Francisco CA, 94103"
            },
            "gpsMetersPerSecond": {
              "description": "Speed of GPS (meters per second)",
              "type": "number",
              "format": "double",
              "example": 35.5
            },
            "headingDegrees": {
              "description": "Heading degrees",
              "type": "number",
              "format": "double",
              "example": 91.2
            },
            "latitude": {
              "description": "Latitude of the location",
              "type": "number",
              "format": "double",
              "example": 42.44817
            },
            "longitude": {
              "description": "Longitude of the location",
              "type": "number",
              "format": "double",
              "example": -71.224716
            },
            "place": {
              "description": "Address of the location",
              "type": "object",
              "properties": {
                "city": {
                  "description": "City",
                  "type": "string",
                  "format": "string",
                  "example": "San Francisco"
                },
                "houseNumber": {
                  "description": "House number",
                  "type": "string",
                  "format": "string",
                  "example": "350"
                },
                "neighborhood": {
                  "description": "Neighborhood",
                  "type": "string",
                  "format": "string",
                  "example": "Castro"
                },
                "poi": {
                  "description": "POI",
                  "type": "string",
                  "format": "string",
                  "example": "400"
                },
                "postcode": {
                  "description": "Postcode",
                  "type": "string",
                  "format": "string",
                  "example": "94103"
                },
                "state": {
                  "description": "State",
                  "type": "string",
                  "format": "string",
                  "example": "CA"
                },
                "street": {
                  "description": "Street",
                  "type": "string",
                  "format": "string",
                  "example": "Rhode Island"
                }
              }
            }
          }
        },
        "time": {
          "$ref": "#/definitions/time"
        }
      }
    },
    "LocationResponseBody": {
      "description": "Equipment location.",
      "type": "object",
      "properties": {
        "Latitude": {
          "description": "Location latitude.",
          "type": "number",
          "format": "double",
          "example": 12.34
        },
        "Longitude": {
          "description": "Location longitude.",
          "type": "number",
          "format": "double",
          "example": 12.34
        },
        "datetime": {
          "description": "Date time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        }
      }
    },
    "LocationType": {
      "description": "The format of the location. This field is required if a location is provided.",
      "type": "string",
      "enum": [
        "point",
        "address",
        "dataInput"
      ]
    },
    "LogMetaDataObjectResponseBody": {
      "description": "The metadata of the log.",
      "type": "object",
      "properties": {
        "adverseDrivingClaimed": {
          "description": "Whether the driver has claimed the [Adverse Driving Exemption](https://kb.samsara.com/hc/en-us/articles/360047336792-Adverse-Driving-Exemption) for this HOS day chart.",
          "type": "boolean",
          "example": true
        },
        "bigDayClaimed": {
          "description": "Whether the driver has claimed the [Big Day Exemption](https://kb.samsara.com/hc/en-us/articles/360055496492-16-hour-Short-haul-Big-Day-Exemption) for this HOS day chart.",
          "type": "boolean",
          "example": true
        },
        "carrierFormattedAddress": {
          "description": "The address of the carrier used for this HOS chart.",
          "type": "string",
          "example": "1990 Alameda Street, San Francisco, CA 94103"
        },
        "carrierName": {
          "description": "The name of the carrier used for this HOS chart.",
          "type": "string",
          "example": "Carrier Name"
        },
        "carrierUsDotNumber": {
          "description": "The US DOT number of the carrier used for this HOS chart.",
          "type": "integer",
          "format": "int64",
          "example": 1234
        },
        "certifiedAtTime": {
          "description": "The time this log was certified in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-01T06:00:00Z"
        },
        "homeTerminalFormattedAddress": {
          "description": "The address of the Home Terminal used for this HOS chart.",
          "type": "string",
          "example": "1990 Alameda Street, San Francisco, CA 94103"
        },
        "homeTerminalName": {
          "description": "The name of the Home Terminal used for this HOS chart.",
          "type": "string",
          "example": "Carrier Name"
        },
        "isCertified": {
          "description": "Whether this HOS day chart was certified by the driver.",
          "type": "boolean",
          "example": true
        },
        "isUsShortHaulActive": {
          "description": "Whether the driver has the 150 air-mile Short Haul Exemption active for this HOS day chart.",
          "type": "boolean",
          "example": false
        },
        "shippingDocs": {
          "description": "List of shipping document names associated with the driver for the day.",
          "type": "string",
          "example": "Delivery 123, chips and soda"
        },
        "trailerNames": {
          "description": "List of trailer names associated with the driver for the day. If a trailer was associated with a log through the driver app the trailer name will be the trailer ID.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "Consequatur nesciunt ea quod velit."
          },
          "example": [
            "10293",
            "Trailer ID 1"
          ]
        },
        "vehicles": {
          "description": "List of vehicles associated with the driver for the day.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleResponseResponseBody"
          }
        }
      }
    },
    "MinimalRouteResponseBody": {
      "description": "A single route. Only the fields that have changed are present in the response. All other fields, including the route id, will not be present in the response. For now, only routeStops are included since only Route Tracking updates are supported.",
      "type": "object",
      "properties": {
        "stops": {
          "description": "The route stops in the route. Only stops that have been updated will be included in the response.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MinimalRouteStopResponseBody"
          }
        }
      }
    },
    "MinimalRouteStopResponseBody": {
      "description": "A single route stop for a route.",
      "type": "object",
      "required": [
        "id",
        "state"
      ],
      "properties": {
        "actualArrivalTime": {
          "description": "Actual arrival time, if it exists, for the route stop in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2006-01-02T15:04:05+07:00"
        },
        "actualDepartureTime": {
          "description": "Actual departure time, if it exists, for the route stop in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2006-01-02T15:04:05+07:00"
        },
        "enRouteTime": {
          "description": "The time the stop became en-route, in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2006-01-02T15:04:05+07:00"
        },
        "eta": {
          "description": "Estimated time of arrival, if this stop is currently en-route, in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2006-01-02T15:04:05+07:00"
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "Unique identifier for the route stop.",
          "type": "string",
          "example": "141414"
        },
        "liveSharingUrl": {
          "description": "The shareable url of the stop's current status.",
          "type": "string",
          "example": "https://cloud.samsara.com/fleet/viewer/job/fleet_viewer_token"
        },
        "skippedTime": {
          "description": "Skipped time, if it exists, for the route stop in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2006-01-02T15:04:05+07:00"
        },
        "state": {
          "description": "The current state of the route stop.",
          "type": "string",
          "enum": [
            "unassigned",
            "scheduled",
            "en route",
            "skipped",
            "arrived",
            "departed"
          ],
          "example": "scheduled"
        }
      }
    },
    "NumberDataPoint": {
      "description": "A single numeric data point of a data input.",
      "type": "object",
      "properties": {
        "time": {
          "$ref": "#/definitions/time"
        },
        "value": {
          "description": "Numeric value of the data point.",
          "type": "number",
          "format": "double",
          "example": 1992.0506
        }
      }
    },
    "OrganizationInfo": {
      "description": "Information about your organization.",
      "type": "object",
      "properties": {
        "carrierSettings": {
          "description": "Carrier for a given organization.",
          "type": "object",
          "properties": {
            "carrierName": {
              "description": "Carrier for a given organization.",
              "type": "string",
              "maxLength": 255,
              "example": "Acme Inc."
            },
            "dotNumber": {
              "description": "Carrier US DOT Number for the organization.",
              "type": "integer",
              "format": "int64",
              "example": 98231
            },
            "mainOfficeAddress": {
              "description": "Main office address for a given organization.",
              "type": "string",
              "maxLength": 255,
              "example": "1234 Pear St., Scranton, PA 62814"
            }
          }
        },
        "id": {
          "description": "ID of the organization.",
          "type": "string",
          "example": "123"
        },
        "name": {
          "description": "Name of organization.",
          "type": "string",
          "example": "Charlie's Dining Services"
        }
      }
    },
    "OrganizationInfoResponse": {
      "description": "Information about an organization.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/OrganizationInfo"
        }
      }
    },
    "ParentId": {
      "description": "The id of the parent asset that the asset belongs to.",
      "type": "string",
      "example": "123abcde-4567-8910-1112-fghi1314jklm"
    },
    "ParentTag": {
      "description": "If this tag is part a hierarchical tag tree, this is the parent tag, otherwise this will be omitted.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/TaggedObjectId"
        },
        "name": {
          "$ref": "#/definitions/ParentTagName"
        }
      }
    },
    "ParentTagId": {
      "description": "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
      "type": "string",
      "example": "4815"
    },
    "ParentTagName": {
      "description": "The tag name.",
      "type": "string",
      "example": "US West Vehicles"
    },
    "PatchAssetDataOutputsSingleResponseResponseBody": {
      "description": "A response that corresponds to an element in the original request body.",
      "type": "object",
      "required": [
        "id",
        "statusCode"
      ],
      "properties": {
        "errorMessage": {
          "description": "If the request failed, this displays the error message.",
          "type": "string",
          "example": "Failed to write to Device: GFRV-43N-VGX"
        },
        "id": {
          "description": "The data output ID.",
          "type": "string",
          "example": "8a9371af-82d1-4158-bf91-4ecc8d3a114c"
        },
        "statusCode": {
          "description": "The status code of the request. 200 indicates the request succeeded for this data output. 500 indicates an internal server error.",
          "type": "integer",
          "format": "int64",
          "example": 200
        }
      }
    },
    "PatchJobObjectRequestBody": {
      "description": "Job object with fields to update. If a field is not provided, it will not be updated",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/PatchJobObjectjobLocationRequestObjectRequestBody"
        },
        "customerName": {
          "description": "Customer name for job",
          "type": "string",
          "example": "Samsara"
        },
        "endDate": {
          "description": "End date of job in RFC 3339 format. Must be greater than or equal to the start date",
          "type": "string",
          "example": "2019-06-13"
        },
        "id": {
          "description": "Job Id",
          "type": "string",
          "example": "123-asdf"
        },
        "industrialAssetIds": {
          "description": "IndustrialAssets to be added to this job (cannot have both industrial assets and fleet devices in the same job, but must have one or the other)",
          "type": "array",
          "items": {
            "type": "string",
            "example": "Debitis ut quia."
          },
          "example": [
            "8d218e6c-7a16-4f9f-90f7-cc1d93b9e596",
            "ba84a7e2-9c8d-481f-a248-7cce6b22be9d"
          ]
        },
        "name": {
          "description": "Job name",
          "type": "string",
          "example": "My Job Name"
        },
        "notes": {
          "description": "Notes for the upcoming job",
          "type": "string",
          "maxLength": 2000,
          "example": "These are my notes"
        },
        "startDate": {
          "description": "Start date of job in RFC 3339 format.",
          "type": "string",
          "example": "2019-06-13"
        }
      }
    },
    "PatchJobObjectjobLocationRequestObjectRequestBody": {
      "description": "A location object for the job",
      "type": "object",
      "required": [
        "name",
        "address",
        "latitude",
        "longitude"
      ],
      "properties": {
        "address": {
          "description": "Address of a location",
          "type": "string",
          "example": "1990 Alameda st, San Francisco, Ca 94103"
        },
        "latitude": {
          "description": "Latitude of a location",
          "type": "number",
          "format": "double",
          "example": 37.456345
        },
        "longitude": {
          "description": "Longitude of a location",
          "type": "number",
          "format": "double",
          "example": 34.5633749
        },
        "name": {
          "description": "Name of the location",
          "type": "string",
          "example": "Worksite #1"
        }
      }
    },
    "PatchTagRequest": {
      "type": "object",
      "properties": {
        "addresses": {
          "description": "The addresses that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "assets": {
          "description": "The trailers, unpowered, and powered assets that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "drivers": {
          "description": "The drivers that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "externalIds": {
          "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "maintenanceId": "250020",
            "payrollId": "ABFS18600"
          }
        },
        "machines": {
          "description": "The machines that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "name": {
          "description": "Name of this tag.",
          "type": "string",
          "maxLength": 191,
          "minLength": 1,
          "example": "California"
        },
        "parentTagId": {
          "description": "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
          "type": "string",
          "example": "4815"
        },
        "sensors": {
          "description": "The sensors that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "vehicles": {
          "description": "The vehicles that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        }
      }
    },
    "PendingDutyStatusDurationsObjectResponseBody": {
      "description": "What the duty status durations on the driver’s log would be if all pending carrier edits are accepted by the driver.",
      "type": "object",
      "properties": {
        "activeDurationMs": {
          "description": "Duration the driver was active for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 38825000
        },
        "driveDurationMs": {
          "description": "Duration the driver was driving for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 31970000
        },
        "offDutyDurationMs": {
          "description": "Duration the driver was off duty for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 20555000
        },
        "onDutyDurationMs": {
          "description": "Duration the driver was on duty for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 5423000
        },
        "personalConveyanceDurationMs": {
          "description": "Duration the driver was driving for personal conveyance for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 4358000
        },
        "sleeperBerthDurationMs": {
          "description": "Duration the driver was in their sleeper berth for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 27020000
        },
        "waitingTimeDurationMs": {
          "description": "Duration the driver was waiting for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 1560000
        },
        "yardMoveDurationMs": {
          "description": "Duration the driver was driving for yard moves for in the log period in milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 1432000
        }
      }
    },
    "PostJobObjectRequestBody": {
      "description": "Job object to be created",
      "type": "object",
      "required": [
        "id",
        "name",
        "startDate",
        "endDate"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/PostJobObjectjobLocationRequestObjectRequestBody"
        },
        "customerName": {
          "description": "Customer name for job",
          "type": "string",
          "example": "Samsara"
        },
        "endDate": {
          "description": "End date of job in RFC 3339 format. Must be greater than or equal to the start date",
          "type": "string",
          "example": "2019-06-13"
        },
        "id": {
          "description": "Job Id",
          "type": "string",
          "example": "123-asdf"
        },
        "industrialAssetIds": {
          "description": "IndustrialAssets to be added to this job (cannot have both industrial assets and fleet devices in the same job, but must have one or the other)",
          "type": "array",
          "items": {
            "type": "string",
            "example": "Sunt molestiae fuga quisquam distinctio nostrum."
          },
          "example": [
            "8d218e6c-7a16-4f9f-90f7-cc1d93b9e596",
            "ba84a7e2-9c8d-481f-a248-7cce6b22be9d"
          ]
        },
        "name": {
          "description": "Job name",
          "type": "string",
          "example": "My Job Name"
        },
        "notes": {
          "description": "Notes for the upcoming job",
          "type": "string",
          "maxLength": 2000,
          "example": "These are my notes"
        },
        "startDate": {
          "description": "Start date of job in RFC 3339 format.",
          "type": "string",
          "example": "2019-06-13"
        }
      }
    },
    "PostJobObjectjobLocationRequestObjectRequestBody": {
      "description": "A location object for the job",
      "type": "object",
      "required": [
        "name",
        "address",
        "latitude",
        "longitude"
      ],
      "properties": {
        "address": {
          "description": "Address of a location",
          "type": "string",
          "example": "1990 Alameda st, San Francisco, Ca 94103"
        },
        "latitude": {
          "description": "Latitude of a location",
          "type": "number",
          "format": "double",
          "example": 37.456345
        },
        "longitude": {
          "description": "Longitude of a location",
          "type": "number",
          "format": "double",
          "example": 34.5633749
        },
        "name": {
          "description": "Name of the location",
          "type": "string",
          "example": "Worksite #1"
        }
      }
    },
    "PowerTakeOffDurationMs": {
      "description": "Time spent with power take off enabled while idling in milliseconds.",
      "type": "number"
    },
    "ReplaceTagRequest": {
      "type": "object",
      "properties": {
        "addresses": {
          "description": "The addresses that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "assets": {
          "description": "The trailers, unpowered, and powered assets that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "drivers": {
          "description": "The drivers that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "machines": {
          "description": "The machines that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "name": {
          "description": "Name of this tag.",
          "type": "string",
          "maxLength": 191,
          "minLength": 1,
          "example": "California"
        },
        "parentTagId": {
          "description": "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
          "type": "string",
          "example": "4815"
        },
        "sensors": {
          "description": "The sensors that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        },
        "vehicles": {
          "description": "The vehicles that belong to this tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedObjectId"
          }
        }
      }
    },
    "ResolvedBy": {
      "description": "Information about the user who is resolving a defect.",
      "type": "object",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "description": "The Id of user who is resolving the defect.",
          "type": "string",
          "example": "11"
        },
        "type": {
          "description": "The type of user who is resolving the defect. Must be \"mechanic\".",
          "type": "string",
          "enum": [
            "mechanic"
          ],
          "example": "mechanic"
        }
      }
    },
    "ReverseGeoObjectResponseBody": {
      "description": "Reverse geocoded information",
      "type": "object",
      "properties": {
        "formattedLocation": {
          "description": "Formatted address of the reverse geocoding data.",
          "type": "string",
          "example": "850 Made Up Lane, Orange, CA"
        }
      }
    },
    "RouteChangesResponseBody": {
      "description": "A diff of the changes for a route update.",
      "type": "object",
      "required": [
        "before",
        "after"
      ],
      "properties": {
        "after": {
          "$ref": "#/definitions/MinimalRouteResponseBody"
        },
        "before": {
          "$ref": "#/definitions/MinimalRouteResponseBody"
        }
      }
    },
    "RouteFeedObjectResponseBody": {
      "description": "Route feed object.",
      "type": "object",
      "required": [
        "time",
        "type",
        "source",
        "route",
        "changes"
      ],
      "properties": {
        "changes": {
          "$ref": "#/definitions/RouteChangesResponseBody"
        },
        "operation": {
          "description": "The operation that was performed as part of this route update.",
          "type": "string",
          "enum": [
            "stop scheduled",
            "stop en route",
            "stop skipped",
            "stop arrived",
            "stop departed",
            "stop ETA updated",
            "stop arrival time updated",
            "stop completion time updated"
          ],
          "example": "stop skipped"
        },
        "route": {
          "$ref": "#/definitions/baseRouteResponseObjectResponseBody"
        },
        "source": {
          "description": "The source of this route update. Updates that are triggered by time or by the route being completed are 'automatic'.",
          "type": "string",
          "enum": [
            "automatic",
            "driver",
            "admin"
          ],
          "example": "automatic"
        },
        "time": {
          "description": "The timestamp of the route in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2020-01-27T07:06:25Z"
        },
        "type": {
          "description": "The type of route update. The route tracking updates occur as a route is completed and stops transition from one state to another. Currently only Route Tracking updates are supported, but this will change in the future when additional types are added.",
          "type": "string",
          "enum": [
            "route tracking"
          ],
          "example": "route tracking"
        }
      }
    },
    "RouteSettingsRequestBody": {
      "description": "An optional dictionary, only necessary to override the defaults for route start and end conditions.",
      "type": "object",
      "properties": {
        "routeCompletionCondition": {
          "description": "Defaults to 'arriveLastStop' which ends the route upon arriving at the final stop. The condition 'departLastStop' \nends the route upon departing the last stop. If 'arriveLastStop' is set, then the departure time of the final stop should not be set.",
          "type": "string",
          "default": "arriveLastStop",
          "enum": [
            "arriveLastStop",
            "departLastStop"
          ],
          "example": "arriveLastStop"
        },
        "routeStartingCondition": {
          "description": "Defaults to 'departFirstStop' which starts the route upon departing the first stop in the route.\n The condition 'arriveFirstStop' starts the route upon arriving at the first stop in the route. If 'departFirstStop' is set,\nthe arrival time of the first stop should not be set.",
          "type": "string",
          "default": "departFirstStop",
          "enum": [
            "departFirstStop",
            "arriveFirstStop"
          ],
          "example": "departFirstStop"
        }
      }
    },
    "RouteSettingsResponseBody": {
      "description": "An optional dictionary, only necessary to override the defaults for route start and end conditions.",
      "type": "object",
      "properties": {
        "routeCompletionCondition": {
          "description": "Defaults to 'arriveLastStop' which ends the route upon arriving at the final stop. The condition 'departLastStop' \nends the route upon departing the last stop. If 'arriveLastStop' is set, then the departure time of the final stop should not be set.",
          "type": "string",
          "default": "arriveLastStop",
          "enum": [
            "arriveLastStop",
            "departLastStop"
          ],
          "example": "arriveLastStop"
        },
        "routeStartingCondition": {
          "description": "Defaults to 'departFirstStop' which starts the route upon departing the first stop in the route.\n The condition 'arriveFirstStop' starts the route upon arriving at the first stop in the route. If 'departFirstStop' is set,\nthe arrival time of the first stop should not be set.",
          "type": "string",
          "default": "departFirstStop",
          "enum": [
            "departFirstStop",
            "arriveFirstStop"
          ],
          "example": "departFirstStop"
        }
      }
    },
    "RoutesCreateRouteBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesCreateRouteBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesCreateRouteGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesCreateRouteInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesCreateRouteMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesCreateRouteNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesCreateRouteNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesCreateRouteRequestBody": {
      "type": "object",
      "required": [
        "name",
        "stops"
      ],
      "properties": {
        "driverId": {
          "description": "ID of the driver",
          "type": "string",
          "example": "1234"
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name for the route",
          "type": "string",
          "example": "Bid 123"
        },
        "notes": {
          "description": "Notes about the route.",
          "type": "string",
          "maxLength": 2000,
          "example": "These are my notes"
        },
        "settings": {
          "$ref": "#/definitions/RouteSettingsRequestBody"
        },
        "stops": {
          "description": "List of stops along the route. For each stop, exactly one of `addressId` and `singleUseLocation` are required. Depending on the `settings` on your route, either a `scheduledArrivalTime` or `scheduledDepartureTime` must be specified for the first job.",
          "type": "array",
          "minItems": 2,
          "items": {
            "$ref": "#/definitions/CreateRoutesStopRequestObjectRequestBody"
          }
        },
        "vehicleId": {
          "description": "ID of the vehicle",
          "type": "string",
          "example": "453546"
        }
      }
    },
    "RoutesCreateRouteResponseBody": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/baseRouteResponseObjectResponseBody"
        }
      }
    },
    "RoutesCreateRouteServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesCreateRouteTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesCreateRouteUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRouteBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRouteBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRouteGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRouteInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRouteMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRouteNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRouteNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRouteResponseBody": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/baseRouteResponseObjectResponseBody"
        }
      }
    },
    "RoutesFetchRouteServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRouteTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRouteUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRoutesBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRoutesBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRoutesGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRoutesInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRoutesMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRoutesNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRoutesNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRoutesResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "An array containing multiple routes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/baseRouteResponseObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "RoutesFetchRoutesServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRoutesTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesFetchRoutesUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesGetRoutesFeedBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesGetRoutesFeedBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesGetRoutesFeedGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesGetRoutesFeedInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesGetRoutesFeedMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesGetRoutesFeedNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesGetRoutesFeedNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesGetRoutesFeedResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "Route feed response.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteFeedObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "RoutesGetRoutesFeedServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesGetRoutesFeedTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesGetRoutesFeedUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesPatchRouteBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesPatchRouteBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesPatchRouteGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesPatchRouteInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesPatchRouteMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesPatchRouteNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesPatchRouteNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesPatchRouteRequestBody": {
      "type": "object",
      "properties": {
        "driverId": {
          "description": "ID of the driver",
          "type": "string",
          "example": "1234"
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name for the route",
          "type": "string",
          "example": "Bid 123"
        },
        "notes": {
          "description": "Notes about the route.",
          "type": "string",
          "maxLength": 2000,
          "example": "These are my notes"
        },
        "settings": {
          "$ref": "#/definitions/RouteSettingsRequestBody"
        },
        "stops": {
          "description": "List of stops along the route. If a valid `id` of a stop is provided, that stop will be updated. If no `id` is provided for a passed in stop, that stop will be created. If `id` value are passed in for some stops and not for others, those with `id` value specified will be retained and updated in the original route, those without `id` value specified in the body will be created, and those without `id` value specified that already existed on the route will be deleted. For each new stop, exactly one of `addressId` and `singleUseLocation` are required. Depending on the `settings` on your route, either a `scheduledArrivalTime` or `scheduledDepartureTime` must be specified for the first job, if a new first job is being added.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateRoutesStopRequestObjectRequestBody"
          }
        },
        "vehicleId": {
          "description": "ID of the vehicle",
          "type": "string",
          "example": "453546"
        }
      }
    },
    "RoutesPatchRouteResponseBody": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/baseRouteResponseObjectResponseBody"
        }
      }
    },
    "RoutesPatchRouteServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesPatchRouteTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesPatchRouteUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "RoutesSingleUseAddressObjectRequestBody": {
      "description": "This field is used to indicate stops along the route for which an address has not been persisted. This field is mutually exclusive with addressId.",
      "type": "object",
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "address": {
          "description": "Address of the stop.",
          "type": "string",
          "example": "1234 Main St, San Jose, CA"
        },
        "latitude": {
          "description": "The latitude of the location",
          "type": "number",
          "format": "double",
          "example": 123.456
        },
        "longitude": {
          "description": "The longitude of the location",
          "type": "number",
          "format": "double",
          "example": 37.459
        }
      }
    },
    "RoutesSingleUseAddressObjectResponseBody": {
      "description": "This field is used to indicate stops along the route for which an address has not been persisted. This field is mutually exclusive with addressId.",
      "type": "object",
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "address": {
          "description": "Address of the stop.",
          "type": "string",
          "example": "1234 Main St, San Jose, CA"
        },
        "latitude": {
          "description": "The latitude of the location",
          "type": "number",
          "format": "double",
          "example": 123.456
        },
        "longitude": {
          "description": "The longitude of the location",
          "type": "number",
          "format": "double",
          "example": 37.459
        }
      }
    },
    "RoutesStopResponseObjectResponseBody": {
      "type": "object",
      "required": [
        "id",
        "name",
        "state"
      ],
      "properties": {
        "actualArrivalTime": {
          "description": "Actual arrival time, if it exists, for the route stop in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2006-01-02T15:04:05+07:00"
        },
        "actualDepartureTime": {
          "description": "Actual departure time, if it exists, for the route stop in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2006-01-02T15:04:05+07:00"
        },
        "address": {
          "$ref": "#/definitions/GoaAddressTinyResponseResponseBody"
        },
        "documents": {
          "description": "List of documents associated with the stop.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoaDocumentTinyResponseResponseBody"
          }
        },
        "enRouteTime": {
          "description": "The time the stop became en-route, in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2006-01-02T15:04:05+07:00"
        },
        "eta": {
          "description": "Estimated time of arrival, if this stop is currently en-route, in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2006-01-02T15:04:05+07:00"
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "Id of the stop",
          "type": "string",
          "example": "324231"
        },
        "liveSharingUrl": {
          "description": "The shareable url of the stop's current status.",
          "type": "string",
          "example": "https://cloud.samsara.com/fleet/viewer/job/fleet_viewer_token"
        },
        "name": {
          "description": "Name of the stop",
          "type": "string",
          "example": "Stop #1"
        },
        "notes": {
          "description": "Notes for the stop",
          "type": "string",
          "maxLength": 2000,
          "example": "These are my notes"
        },
        "scheduledArrivalTime": {
          "description": "Scheduled arrival time, if it exists, for the stop in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2019-06-13T19:08:25Z"
        },
        "scheduledDepartureTime": {
          "description": "Scheduled departure time, if it exists, for the stop in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2019-06-13T19:08:25Z"
        },
        "singleUseLocation": {
          "$ref": "#/definitions/RoutesSingleUseAddressObjectResponseBody"
        },
        "skippedTime": {
          "description": "Skipped time, if it exists, for the route stop in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2006-01-02T15:04:05+07:00"
        },
        "state": {
          "description": "The current state of the route stop.",
          "type": "string",
          "enum": [
            "unassigned",
            "scheduled",
            "en route",
            "skipped",
            "arrived",
            "departed"
          ],
          "example": "scheduled"
        }
      }
    },
    "SafetyEvent": {
      "description": "A safety event.",
      "type": "object",
      "properties": {
        "behaviorLabels": {
          "$ref": "#/definitions/SafetyEventBehaviorLabels"
        },
        "coachingState": {
          "$ref": "#/definitions/SafetyEventCoachingState"
        },
        "downloadForwardVideoUrl": {
          "$ref": "#/definitions/SafetyEventDownloadForwardVideoUrl"
        },
        "downloadInwardVideoUrl": {
          "$ref": "#/definitions/SafetyEventDownloadInwardVideoUrl"
        },
        "downloadTrackedInwardVideoUrl": {
          "$ref": "#/definitions/SafetyEventDownloadTrackedInwardVideoUrl"
        },
        "driver": {
          "$ref": "#/definitions/SafetyEventDriver"
        },
        "id": {
          "$ref": "#/definitions/SafetyEventId"
        },
        "location": {
          "$ref": "#/definitions/SafetyEventLocation"
        },
        "maxAccelerationGForce": {
          "$ref": "#/definitions/SafetyEventMaxAccelerationGForce"
        },
        "time": {
          "$ref": "#/definitions/SafetyEventTime"
        },
        "vehicle": {
          "$ref": "#/definitions/SafetyEventVehicle"
        }
      }
    },
    "SafetyEventActivityFeedItemResponseBody": {
      "description": "Safety event activity feed item.",
      "type": "object",
      "required": [
        "time",
        "type",
        "operation",
        "id",
        "safetyEvent"
      ],
      "properties": {
        "id": {
          "description": "The ID of the activity feed line item.",
          "type": "string",
          "example": "212014918174029-1550954461759-1622151765"
        },
        "operation": {
          "description": "The type of operation that occured in the safety event.",
          "type": "string",
          "enum": [
            "create",
            "update",
            "delete"
          ],
          "example": "create"
        },
        "safetyEvent": {
          "$ref": "#/definitions/SafetyEventObjectResponseBody"
        },
        "time": {
          "description": "The time the activity occurred in the corresponding safety event in RFC 3339 milliseconds format.",
          "type": "string",
          "example": "2019-10-12T07:20:50.52Z"
        },
        "type": {
          "description": "The type of activity that occurred in the safety event. We currently only support InboxActivityType, BehaviorLabelActivityType, and CreateSafetyEventType, but we may add support for more activity types in the future.",
          "type": "string",
          "enum": [
            "BehaviorLabelActivityType",
            "CreateSafetyEventActivityType",
            "InboxActivityType"
          ],
          "example": "CreateSafetyEventActivityType"
        }
      }
    },
    "SafetyEventBehaviorLabel": {
      "description": "The label and source of the label associated with the safety event.",
      "type": "object",
      "required": [
        "label",
        "source"
      ],
      "properties": {
        "label": {
          "$ref": "#/definitions/SafetyEventBehaviorLabelType"
        },
        "source": {
          "$ref": "#/definitions/SafetyEventBehaviorLabelSource"
        }
      }
    },
    "SafetyEventBehaviorLabelSource": {
      "description": "The source of the label associated with the safety event.",
      "type": "string",
      "enum": [
        "automated",
        "userGenerated"
      ]
    },
    "SafetyEventBehaviorLabelType": {
      "description": "The label associated with the safety event. This list often changes, so it is recommended that clients gracefully handle any types not enumerated in this list.",
      "type": "string",
      "enum": [
        "genericTailgating",
        "genericDistraction",
        "defensiveDriving",
        "rollingStop",
        "nearCollison",
        "speeding",
        "obstructedCamera",
        "didNotYield",
        "noSeatbelt",
        "mobileUsage",
        "drowsy",
        "laneDeparture",
        "followingDistanceSevere",
        "followingDistanceModerate",
        "lateResponse",
        "acceleration",
        "braking",
        "harshTurn",
        "crash",
        "rolloverProtection",
        "yawControl",
        "ranRedLight",
        "forwardCollisionWarning",
        "eatingDrinking",
        "smoking",
        "followingDistance",
        "edgeDistractedDriving"
      ]
    },
    "SafetyEventBehaviorLabels": {
      "description": "The most up-to-date behavior labels associated with the safety event. These labels can be updated by the Safety Report Admin.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/SafetyEventBehaviorLabel"
      }
    },
    "SafetyEventCoachingState": {
      "description": "The current coaching status of the event.",
      "type": "string",
      "enum": [
        "needsReview",
        "coached",
        "dismissed",
        "reviewed",
        "archived",
        "manualReview",
        "needsCoaching",
        "autoDismissed",
        "needsRecognition",
        "recognized",
        "invalid"
      ]
    },
    "SafetyEventDownloadForwardVideoUrl": {
      "description": "URL to download the forward video.",
      "type": "string",
      "example": "https://s3.console.aws.amazon.com/s3/buckets/samsara-dashcam-videos/21575/212014918400828/1553060687222/huKA7IhpBV-camera-video-segment-1244214895.mp4"
    },
    "SafetyEventDownloadInwardVideoUrl": {
      "description": "URL to download the inward video.",
      "type": "string",
      "example": "https://s3.console.aws.amazon.com/s3/buckets/samsara-dashcam-videos/21575/212014918400828/1553060687222/huKA7IhpBV-camera-video-segment-1244214895.mp4"
    },
    "SafetyEventDownloadTrackedInwardVideoUrl": {
      "description": "URL to download the tracked inward video.",
      "type": "string",
      "example": "https://s3.console.aws.amazon.com/s3/buckets/samsara-dashcam-videos/21575/212014918400828/1553060687222/huKA7IhpBV-camera-video-segment-1244214895.mp4"
    },
    "SafetyEventDriver": {
      "$ref": "#/definitions/driverTinyResponse"
    },
    "SafetyEventId": {
      "description": "The unique Samsara ID of the safety event.",
      "type": "string",
      "example": "212014918174029-1550954461759"
    },
    "SafetyEventLocation": {
      "$ref": "#/definitions/location"
    },
    "SafetyEventMaxAccelerationGForce": {
      "description": "The maximum acceleration value as a multiplier on the force of gravity (g).",
      "type": "number",
      "example": 0.123
    },
    "SafetyEventObjectResponseBody": {
      "description": "The safety event that was updated.",
      "type": "object",
      "properties": {
        "behaviorLabels": {
          "description": "List of behavior labels associated with this safety event.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BehaviorLabelsObjectResponseBody"
          }
        },
        "downloadForwardVideoUrl": {
          "description": "URL to download the forward video.",
          "type": "string",
          "example": "https://s3.console.aws.amazon.com/s3/buckets/samsara-dashcam-videos/21575/212014918400828/1553060687222/huKA7IhpBV-camera-video-segment-1244214895.mp4"
        },
        "downloadInwardVideoUrl": {
          "description": "URL to download the inward video.",
          "type": "string",
          "example": "https://s3.console.aws.amazon.com/s3/buckets/samsara-dashcam-videos/21575/212014918400828/1553060687222/huKA7IhpBV-camera-video-segment-1244214895.mp4"
        },
        "driver": {
          "$ref": "#/definitions/DriverObjectResponseBody"
        },
        "id": {
          "description": "The unique Samsara ID of the safety event.",
          "type": "string",
          "example": "212014918174029-1550954461759"
        },
        "location": {
          "$ref": "#/definitions/locationResponseBody"
        },
        "maxAccelerationGForce": {
          "description": "The maximum acceleration value as a multiplier on the force of gravity (g).",
          "type": "number",
          "format": "double",
          "example": 0.123
        },
        "time": {
          "description": "The time the safety event occurred in RFC 3339 milliseconds format.",
          "type": "string",
          "example": "2019-06-13T19:08:25.455Z"
        },
        "vehicle": {
          "$ref": "#/definitions/VehicleObjectResponseBody"
        }
      }
    },
    "SafetyEventTime": {
      "description": "The time the safety event occurred in RFC 3339 milliseconds format.",
      "type": "string",
      "example": "2019-06-13T19:08:25.455Z"
    },
    "SafetyEventVehicle": {
      "$ref": "#/definitions/vehicleTinyResponse"
    },
    "SafetyEventsGetSafetyActivityEventFeedBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SafetyEventsGetSafetyActivityEventFeedBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SafetyEventsGetSafetyActivityEventFeedGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SafetyEventsGetSafetyActivityEventFeedInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SafetyEventsGetSafetyActivityEventFeedMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SafetyEventsGetSafetyActivityEventFeedNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SafetyEventsGetSafetyActivityEventFeedNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SafetyEventsGetSafetyActivityEventFeedResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "Paginated safety event activity feed limited to 10 events.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SafetyEventActivityFeedItemResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "SafetyEventsGetSafetyActivityEventFeedServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SafetyEventsGetSafetyActivityEventFeedTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SafetyEventsGetSafetyActivityEventFeedUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SafetyEventsListResponse": {
      "description": "List of safety events.",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SafetyEvent"
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "Serial": {
      "description": "The serial number of the gateway installed in the vehicle.",
      "type": "string",
      "example": "VG12345"
    },
    "SettingsComplianceResponseObjectResponseBody": {
      "description": "Information set here will be displayed in roadside inspections and in the transferred US DOT datafile.",
      "type": "object",
      "properties": {
        "allowUnregulatedVehiclesEnabled": {
          "description": "Allow Unregulated Vehicles",
          "type": "boolean",
          "example": false
        },
        "canadaHosEnabled": {
          "description": "Enable Canada HOS",
          "type": "boolean",
          "example": true
        },
        "carrierName": {
          "description": "Carrier name of the organization",
          "type": "string",
          "example": "ABC Trucking"
        },
        "dotNumber": {
          "description": "DOT Number",
          "type": "integer",
          "format": "int64",
          "example": 12345678
        },
        "driverAutoDutyEnabled": {
          "description": "Enable Driver Auto-Duty",
          "type": "boolean",
          "example": false
        },
        "editCertifiedLogsEnabled": {
          "description": "Drivers Can Edit Certified Log",
          "type": "boolean",
          "example": false
        },
        "forceManualLocationForDutyStatusChangesEnabled": {
          "description": "Force Manual Location For Duty Status Changes",
          "type": "boolean",
          "example": false
        },
        "forceReviewUnassignedHosEnabled": {
          "description": "Force Review of Unassigned HOS",
          "type": "boolean",
          "example": true
        },
        "mainOfficeFormattedAddress": {
          "description": "Office Address",
          "type": "string",
          "example": "123 Main Street"
        },
        "persistentDutyStatusEnabled": {
          "description": "Persistent Duty Status",
          "type": "boolean",
          "example": true
        }
      }
    },
    "SettingsGetComplianceSettingsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetComplianceSettingsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetComplianceSettingsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetComplianceSettingsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetComplianceSettingsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetComplianceSettingsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetComplianceSettingsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetComplianceSettingsResponseBody": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SettingsComplianceResponseObjectResponseBody"
        }
      }
    },
    "SettingsGetComplianceSettingsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetComplianceSettingsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetComplianceSettingsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetDriverAppSettingsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetDriverAppSettingsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetDriverAppSettingsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetDriverAppSettingsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetDriverAppSettingsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetDriverAppSettingsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetDriverAppSettingsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetDriverAppSettingsResponseBody": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/DriverAppSettingsResponseObjectResponseBody"
        }
      }
    },
    "SettingsGetDriverAppSettingsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetDriverAppSettingsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsGetDriverAppSettingsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchComplianceSettingsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchComplianceSettingsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchComplianceSettingsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchComplianceSettingsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchComplianceSettingsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchComplianceSettingsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchComplianceSettingsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchComplianceSettingsRequestBody": {
      "description": "Information set here will be displayed in roadside inspections and in the transferred US DOT datafile. Can be set or updated through the Samsara Settings page or the API at any time. To override these fields for specific drivers, please visit Driver Settings",
      "type": "object",
      "properties": {
        "allowUnregulatedVehiclesEnabled": {
          "description": "Allow Unregulated Vehicles",
          "type": "boolean",
          "example": true
        },
        "canadaHosEnabled": {
          "description": "Enable Canada HOS",
          "type": "boolean",
          "example": false
        },
        "carrierName": {
          "description": "Carrier Name / Principal Place of Business Name",
          "type": "string",
          "example": "ABC Trucking"
        },
        "dotNumber": {
          "description": "Carrier US DOT Number",
          "type": "integer",
          "format": "int64",
          "example": 12345678
        },
        "driverAutoDutyEnabled": {
          "description": "Enable Driver Auto-Duty",
          "type": "boolean",
          "example": false
        },
        "editCertifiedLogsEnabled": {
          "description": "Drivers Can Edit Certified Log",
          "type": "boolean",
          "example": true
        },
        "forceManualLocationForDutyStatusChangesEnabled": {
          "description": "Force Manual Location For Duty Status Changes",
          "type": "boolean",
          "example": false
        },
        "forceReviewUnassignedHosEnabled": {
          "description": "Force Review of Unassigned HOS",
          "type": "boolean",
          "example": true
        },
        "mainOfficeFormattedAddress": {
          "description": "Main Office Address / Principal Place of Businesss Address",
          "type": "string",
          "example": "123 Main Street"
        },
        "persistentDutyStatusEnabled": {
          "description": "Persistent Duty Status",
          "type": "boolean",
          "example": true
        }
      }
    },
    "SettingsPatchComplianceSettingsResponseBody": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SettingsComplianceResponseObjectResponseBody"
        }
      }
    },
    "SettingsPatchComplianceSettingsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchComplianceSettingsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchComplianceSettingsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchDriverAppSettingsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchDriverAppSettingsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchDriverAppSettingsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchDriverAppSettingsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchDriverAppSettingsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchDriverAppSettingsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchDriverAppSettingsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchDriverAppSettingsRequestBody": {
      "description": "The configuration settings for the Samsara Driver App. Can be set or updated through the Samsara Settings page or the API at any time.",
      "type": "object",
      "properties": {
        "driverFleetId": {
          "description": "Global login user name for the fleet driver app",
          "type": "string",
          "pattern": "^[a-zA-Z0-9-:]*$",
          "example": "abc-trucking-co"
        },
        "gamification": {
          "description": "Driver gamification feature. Enabling this will turn on the feature for all drivers using the mobile app. Drivers can be configured into peer groups within the Drivers Page. Unconfigured drivers will be grouped on an organization level.",
          "type": "boolean",
          "example": false
        },
        "gamificationConfig": {
          "$ref": "#/definitions/DriverAppSettingsGamificationConfigTinyObjectRequestBody"
        },
        "orgVehicleSearch": {
          "description": "Allow drivers to search for vehicles outside of their selection tag when connected to the internet.",
          "type": "boolean",
          "example": false
        },
        "trailerSelection": {
          "description": "Allow drivers to see and select trailers in the Samsara Driver app. ",
          "type": "boolean",
          "example": true
        },
        "trailerSelectionConfig": {
          "$ref": "#/definitions/DriverAppSettingsTrailerSelectionConfigTinyObjectRequestBody"
        }
      }
    },
    "SettingsPatchDriverAppSettingsResponseBody": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/DriverAppSettingsResponseObjectResponseBody"
        }
      }
    },
    "SettingsPatchDriverAppSettingsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchDriverAppSettingsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "SettingsPatchDriverAppSettingsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "StringDataPoint": {
      "description": "A single string data point of a data input.",
      "type": "object",
      "properties": {
        "time": {
          "$ref": "#/definitions/time"
        },
        "value": {
          "description": "String value of the data point.",
          "type": "string",
          "format": "string",
          "example": "On"
        }
      }
    },
    "TachographActivity": {
      "description": "Tachograph activity",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "End time of state in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-03T16:04:05Z07:00"
        },
        "isManualEntry": {
          "description": "A flag indicating whether the activity was manually entered by the driver. If this is `true`, the state cannot be \"UNKNOWN\"",
          "type": "boolean",
          "example": false
        },
        "startTime": {
          "description": "Start time of state in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-02T15:04:05Z07:00"
        },
        "state": {
          "description": "Tachograph activity state",
          "type": "string",
          "enum": [
            "BREAK/REST",
            "WORK",
            "AVAILABILITY",
            "DRIVING",
            "UNKNOWN"
          ]
        }
      }
    },
    "TachographActivityList": {
      "description": "List of all driver tachograph activities in a specified time range.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/TachographActivity"
      }
    },
    "TachographActivityListWrapper": {
      "type": "object",
      "properties": {
        "activity": {
          "$ref": "#/definitions/TachographActivityList"
        },
        "driver": {
          "$ref": "#/definitions/driverTinyResponse"
        }
      }
    },
    "TachographDriverFile": {
      "description": "Tachograph driver file",
      "type": "object",
      "properties": {
        "cardNumber": {
          "description": "Tachograph card number associated with the file.",
          "type": "string",
          "example": "1000000492436002"
        },
        "createdAtTime": {
          "description": "Creation time of files in RFC 3339 format. This is either the download time from the tachograph itself (for files downloaded via Samsara VG) or upload time (for files manually uploaded via Samsara UI).",
          "type": "string",
          "example": "2020-01-02T15:04:05Z07:00"
        },
        "id": {
          "description": "ID of the file.",
          "type": "string",
          "example": "4aff772c-a7bb-45e6-8e41-6a53e34feb83"
        },
        "url": {
          "description": "A temporary URL which can be used to download the file. The link can be used multiple times and expires after an hour.",
          "type": "string",
          "example": "https://samsara-tachograph-files.s3.us-west-2.amazonaws.com/123/456/789/4aff772c-a7bb-45e6-8e41-6a53e34feb83.ddd"
        }
      }
    },
    "TachographDriverFileData": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TachographDriverFileListWrapper"
      }
    },
    "TachographDriverFileList": {
      "description": "List of all tachograph driver files in a specified time range.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/TachographDriverFile"
      }
    },
    "TachographDriverFileListWrapper": {
      "type": "object",
      "properties": {
        "driver": {
          "$ref": "#/definitions/driverTinyResponse"
        },
        "files": {
          "$ref": "#/definitions/TachographDriverFileList"
        }
      }
    },
    "TachographDriverFilesResponse": {
      "description": "List of all driver tachograph files in a specified time range.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/TachographDriverFileData"
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "TachographVehicleFile": {
      "description": "Tachograph vehicle file",
      "type": "object",
      "properties": {
        "createdAtTime": {
          "description": "Creation time of files in RFC 3339 format. This is either the download time from the tachograph itself (for files downloaded via Samsara VG) or upload time (for files manually uploaded via Samsara UI).",
          "type": "string",
          "example": "2020-01-02T15:04:05Z07:00"
        },
        "id": {
          "description": "ID of the file.",
          "type": "string",
          "example": "4aff772c-a7bb-45e6-8e41-6a53e34feb83"
        },
        "url": {
          "description": "A temporary URL which can be used to download the file. The link can be used multiple times and expires after an hour.",
          "type": "string",
          "example": "https://samsara-tachograph-files.s3.us-west-2.amazonaws.com/123/456/789/4aff772c-a7bb-45e6-8e41-6a53e34feb83.ddd"
        },
        "vehicleIdentificationNumber": {
          "description": "VIN associated with the vehicle file.",
          "type": "string",
          "example": "1000000492436002"
        }
      }
    },
    "TachographVehicleFileData": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TachographVehicleFileListWrapper"
      }
    },
    "TachographVehicleFileList": {
      "description": "List of all tachograph vehicle files in a specified time range.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/TachographVehicleFile"
      }
    },
    "TachographVehicleFileListWrapper": {
      "type": "object",
      "properties": {
        "files": {
          "$ref": "#/definitions/TachographVehicleFileList"
        },
        "vehicle": {
          "$ref": "#/definitions/vehicleTinyResponse"
        }
      }
    },
    "TachographVehicleFilesResponse": {
      "description": "List of all vehicle tachograph files in a specified time range.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/TachographVehicleFileData"
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "Tag": {
      "allOf": [
        {
          "$ref": "#/definitions/TinyTag"
        },
        {
          "type": "object",
          "properties": {
            "addresses": {
              "description": "The addresses that belong to this tag.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaggedObject"
              }
            },
            "assets": {
              "description": "The trailers, unpowered, and powered assets that belong to this tag.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaggedObject"
              }
            },
            "drivers": {
              "description": "The drivers that belong to this tag.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaggedObject"
              }
            },
            "externalIds": {
              "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
              "type": "object",
              "example": {
                "maintenanceId": "250020",
                "payrollId": "ABFS18600"
              }
            },
            "machines": {
              "description": "The machines that belong to thistag.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaggedObject"
              }
            },
            "parentTag": {
              "$ref": "#/definitions/ParentTag"
            },
            "sensors": {
              "description": "The sensors that belong to this tag.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaggedObject"
              }
            },
            "vehicles": {
              "description": "The vehicles that belong to this tag.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaggedObject"
              }
            }
          }
        }
      ]
    },
    "TagId": {
      "description": "Unique Samsara ID of this tag.",
      "type": "string",
      "example": "342417"
    },
    "TagIds": {
      "description": "The ids of the tags that the asset should belong to.",
      "type": "array",
      "items": {
        "type": "string",
        "example": "123"
      }
    },
    "TagName": {
      "description": "Name of this tag.",
      "type": "string",
      "maxLength": 191,
      "minLength": 1,
      "example": "California"
    },
    "TagResponse": {
      "description": "A single tag.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Tag"
        }
      }
    },
    "TaggedObject": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/TaggedObjectId"
        },
        "name": {
          "$ref": "#/definitions/TaggedObjectName"
        }
      }
    },
    "TaggedObjectId": {
      "description": "The object ID.",
      "type": "string",
      "example": "23502866574"
    },
    "TaggedObjectName": {
      "description": "The object name.",
      "type": "string",
      "example": "Driver Don"
    },
    "TinyTag": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/TagId"
        },
        "name": {
          "$ref": "#/definitions/TagName"
        },
        "parentTagId": {
          "$ref": "#/definitions/ParentTagId"
        }
      }
    },
    "TrailerGoaGatewayTinyResponseResponseBody": {
      "description": "A minified gateway object. This field will be omitted if the trailer does not have a gateway installed.",
      "type": "object",
      "required": [
        "serial",
        "model"
      ],
      "properties": {
        "model": {
          "description": "The model of the gateway installed on the asset.",
          "type": "string",
          "enum": [
            "AG15",
            "AG24",
            "AG24EU",
            "AG26",
            "AG26EU",
            "AG41",
            "AG41EU",
            "AG45",
            "AG45EU",
            "AG46",
            "AG46EU",
            "AG46P",
            "IG15",
            "IG21",
            "IG41",
            "IG61",
            "SG1",
            "VG32",
            "VG33",
            "VG34",
            "VG34EU",
            "VG34FN",
            "VG54EU",
            "VG54NA"
          ],
          "example": "VG34"
        },
        "serial": {
          "description": "The serial number of the gateway installed on the asset.",
          "type": "string",
          "example": "GFRV-43N-VGX"
        }
      }
    },
    "TrailerResponseObjectResponseBody": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "enabledForMobile": {
          "description": "Indicates if the trailer is visible on the Samsara mobile apps.",
          "type": "boolean",
          "example": true
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "The unique Samsara ID of the Trailer. This is automatically generated when the Trailer object is created. It cannot be changed.",
          "type": "string",
          "example": "494123"
        },
        "installedGateway": {
          "$ref": "#/definitions/TrailerGoaGatewayTinyResponseResponseBody"
        },
        "licensePlate": {
          "description": "The license plate of the Trailer. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 12,
          "example": "7TYP290"
        },
        "name": {
          "description": "The human-readable name of the Trailer. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. By default, this name is the serial number of the Samsara Asset Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.",
          "type": "string",
          "example": "Trailer-123"
        },
        "notes": {
          "description": "These are generic notes about the Trailer. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 255,
          "example": "These are my trailer notes"
        },
        "tags": {
          "description": "The list of [tags](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting) associated with the Trailer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoaTagTinyResponseResponseBody"
          }
        },
        "trailerSerialNumber": {
          "description": "The serial number of the trailer.",
          "type": "string",
          "example": "8V8WD530FLN016251"
        }
      }
    },
    "TrailerStatDecorationResponseBody": {
      "description": "Decorated values for the primary trailer stat datapoints.",
      "type": "object",
      "properties": {
        "carrierReeferState": {
          "$ref": "#/definitions/TrailerStatReeferStateTypeResponseBody"
        },
        "gps": {
          "$ref": "#/definitions/TrailerStatGpsTypeResponseBody"
        },
        "gpsOdometerMeters": {
          "$ref": "#/definitions/TrailerStatGpsOdometerMetersTypeResponseBody"
        },
        "reeferAlarms": {
          "$ref": "#/definitions/TrailerStatReeferAlarmTypeResponseBody"
        },
        "reeferAmbientAirTemperatureMilliC": {
          "$ref": "#/definitions/TrailerStatReeferAmbientAirTemperatureMilliCTypeResponseBody"
        },
        "reeferFuelPercent": {
          "$ref": "#/definitions/TrailerStatReeferFuelPercentTypeResponseBody"
        },
        "reeferObdEngineSeconds": {
          "$ref": "#/definitions/TrailerStatReeferObdEngineSecondsTypeResponseBody"
        },
        "reeferReturnAirTemperatureMilliCZone1": {
          "$ref": "#/definitions/TrailerStatReeferReturnAirTemperatureMilliCZone1TypeResponseBody"
        },
        "reeferReturnAirTemperatureMilliCZone2": {
          "$ref": "#/definitions/TrailerStatReeferReturnAirTemperatureMilliCZone2TypeResponseBody"
        },
        "reeferReturnAirTemperatureMilliCZone3": {
          "$ref": "#/definitions/TrailerStatReeferReturnAirTemperatureMilliCZone3TypeResponseBody"
        },
        "reeferRunMode": {
          "$ref": "#/definitions/TrailerStatReeferRunModeTypeResponseBody"
        },
        "reeferSetPointTemperatureMilliCZone1": {
          "$ref": "#/definitions/TrailerStatReeferSetPointTemperatureMilliCZone1TypeResponseBody"
        },
        "reeferSetPointTemperatureMilliCZone2": {
          "$ref": "#/definitions/TrailerStatReeferSetPointTemperatureMilliCZone2TypeResponseBody"
        },
        "reeferSetPointTemperatureMilliCZone3": {
          "$ref": "#/definitions/TrailerStatReeferSetPointTemperatureMilliCZone3TypeResponseBody"
        },
        "reeferStateZone1": {
          "$ref": "#/definitions/TrailerStatReeferStateZone1TypeResponseBody"
        },
        "reeferStateZone2": {
          "$ref": "#/definitions/TrailerStatReeferStateZone2TypeResponseBody"
        },
        "reeferStateZone3": {
          "$ref": "#/definitions/TrailerStatReeferStateZone3TypeResponseBody"
        },
        "reeferSupplyAirTemperatureMilliCZone1": {
          "$ref": "#/definitions/TrailerStatReeferSupplyAirTemperatureMilliCZone1TypeResponseBody"
        },
        "reeferSupplyAirTemperatureMilliCZone2": {
          "$ref": "#/definitions/TrailerStatReeferSupplyAirTemperatureMilliCZone2TypeResponseBody"
        },
        "reeferSupplyAirTemperatureMilliCZone3": {
          "$ref": "#/definitions/TrailerStatReeferSupplyAirTemperatureMilliCZone3TypeResponseBody"
        }
      }
    },
    "TrailerStatGpsOdometerMetersTypeResponseBody": {
      "description": "Trailer GPS odometer event.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "Number of meters the trailer has traveled according to the GPS calculations and the manually specified odometer reading.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatGpsOdometerMetersWithDecorationsTypeResponseBody": {
      "description": "Trailer GPS odometer event.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "Number of meters the trailer has traveled according to the GPS calculations and the manually specified odometer reading.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatGpsTypeResponseBody": {
      "description": "GPS location data for the trailer.",
      "type": "object",
      "required": [
        "latitude",
        "longitude",
        "time"
      ],
      "properties": {
        "headingDegrees": {
          "description": "Heading of the trailer in degrees.",
          "type": "integer",
          "format": "int64",
          "example": 5898377342654406000
        },
        "latitude": {
          "description": "GPS latitude represented in degrees.",
          "type": "number",
          "format": "double",
          "example": 0.40594329532804035
        },
        "longitude": {
          "description": "GPS longitude represented in degrees.",
          "type": "number",
          "format": "double",
          "example": 0.9353933786239367
        },
        "reverseGeo": {
          "$ref": "#/definitions/ReverseGeoObjectResponseBody"
        },
        "speedMilesPerHour": {
          "description": "GPS speed of the trailer in miles per hour.",
          "type": "integer",
          "format": "int64",
          "example": 1928651334225073200
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        }
      }
    },
    "TrailerStatGpsWithDecorationsTypeResponseBody": {
      "description": "GPS location data for the trailer.",
      "type": "object",
      "required": [
        "latitude",
        "longitude",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "headingDegrees": {
          "description": "Heading of the trailer in degrees.",
          "type": "integer",
          "format": "int64",
          "example": 8645379593613884000
        },
        "latitude": {
          "description": "GPS latitude represented in degrees.",
          "type": "number",
          "format": "double",
          "example": 0.8721548568616473
        },
        "longitude": {
          "description": "GPS longitude represented in degrees.",
          "type": "number",
          "format": "double",
          "example": 0.7908075233711628
        },
        "reverseGeo": {
          "$ref": "#/definitions/ReverseGeoObjectResponseBody"
        },
        "speedMilesPerHour": {
          "description": "GPS speed of the trailer in miles per hour.",
          "type": "integer",
          "format": "int64",
          "example": 1412650536872380700
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        }
      }
    },
    "TrailerStatReeferAlarmResponseBody": {
      "type": "object",
      "required": [
        "alarmCode",
        "description",
        "operatorAction",
        "severity"
      ],
      "properties": {
        "alarmCode": {
          "description": "The ID of the alarm.",
          "type": "string",
          "example": "3"
        },
        "description": {
          "description": "The description of the alarm.",
          "type": "string",
          "example": "Test alarm"
        },
        "operatorAction": {
          "description": "The recommended operator action.",
          "type": "string",
          "example": "Manually disable alarm"
        },
        "severity": {
          "description": "The severity of the alarm. `1`: Ok to run, `2`: Check as specified, `3`: Take immediate action.",
          "type": "integer",
          "format": "int64",
          "example": 1623989735203046700
        }
      }
    },
    "TrailerStatReeferAlarmTypeResponseBody": {
      "description": "Alarms that have been emitted by the reefer.",
      "type": "object",
      "required": [
        "alarms",
        "time"
      ],
      "properties": {
        "alarms": {
          "description": "The alarms reported by the reefer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferAlarmResponseBody"
          }
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        }
      }
    },
    "TrailerStatReeferAlarmWithDecorationsTypeResponseBody": {
      "description": "Alarms that have been emitted by the reefer.",
      "type": "object",
      "required": [
        "alarms",
        "time"
      ],
      "properties": {
        "alarms": {
          "description": "The alarms reported by the reefer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferAlarmResponseBody"
          }
        },
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        }
      }
    },
    "TrailerStatReeferAmbientAirTemperatureMilliCTypeResponseBody": {
      "description": "Reefer ambient air temperature reading.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The ambient air temperature reading of the reefer in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferAmbientAirTemperatureWithDecorationsTypeResponseBody": {
      "description": "Reefer ambient air temperature reading.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The ambient air temperature reading of the reefer in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferFuelPercentTypeResponseBody": {
      "description": "The fuel percentage of the reefer.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The fuel level in percentage points (e.g. `99`, `50`, etc).",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferFuelPercentWithDecorationsTypeResponseBody": {
      "description": "The fuel percentage of the reefer.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The fuel level in percentage points (e.g. `99`, `50`, etc).",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferObdEngineSecondsTypeResponseBody": {
      "description": "Reefer onboard engine seconds reading.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The number of seconds the reefer has been on according to the onboard diagnostics.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferObdEngineSecondsWithDecorationsTypeResponseBody": {
      "description": "Reefer onboard engine seconds reading.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The number of seconds the reefer has been on according to the onboard diagnostics.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferReturnAirTemperatureMilliCZone1TypeResponseBody": {
      "description": "Return air temperature of zone 1 of the reefer. This is the temperature of the air as it enters the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The return air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferReturnAirTemperatureMilliCZone1WithDecorationsTypeResponseBody": {
      "description": "Return air temperature of zone 1 of the reefer. This is the temperature of the air as it enters the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The return air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferReturnAirTemperatureMilliCZone2TypeResponseBody": {
      "description": "Return air temperature of zone 2 of the reefer. This is the temperature of the air as it enters the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The return air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferReturnAirTemperatureMilliCZone2WithDecorationsTypeResponseBody": {
      "description": "Return air temperature of zone 2 of the reefer. This is the temperature of the air as it enters the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The return air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferReturnAirTemperatureMilliCZone3TypeResponseBody": {
      "description": "Return air temperature of zone 3 of the reefer. This is the temperature of the air as it enters the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The return air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferReturnAirTemperatureMilliCZone3WithDecorationsTypeResponseBody": {
      "description": "Return air temperature of zone 3 of the reefer. This is the temperature of the air as it enters the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The return air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferRunModeTypeResponseBody": {
      "description": "The run mode of the reefer.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The operational mode of the reefer.",
          "type": "string",
          "example": "`Start/Stop`,`Continuous`"
        }
      }
    },
    "TrailerStatReeferRunModeWithDecorationsTypeResponseBody": {
      "description": "The run mode of the reefer.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The operational mode of the reefer.",
          "type": "string",
          "example": "`Start/Stop`,`Continuous`"
        }
      }
    },
    "TrailerStatReeferSetPointTemperatureMilliCZone1TypeResponseBody": {
      "description": "Set point temperature of zone 1 of the reefer.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The set point temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferSetPointTemperatureMilliCZone1WithDecorationsTypeResponseBody": {
      "description": "Set point temperature of zone 1 of the reefer.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The set point temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferSetPointTemperatureMilliCZone2TypeResponseBody": {
      "description": "Set point temperature of zone 2 of the reefer.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The set point temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferSetPointTemperatureMilliCZone2WithDecorationsTypeResponseBody": {
      "description": "Set point temperature of zone 2 of the reefer.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The set point temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferSetPointTemperatureMilliCZone3TypeResponseBody": {
      "description": "Set point temperature of zone 3 of the reefer.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The set point temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferSetPointTemperatureMilliCZone3WithDecorationsTypeResponseBody": {
      "description": "Set point temperature of zone 3 of the reefer.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The set point temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferStateTypeResponseBody": {
      "description": "Reefer state event.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The overall state of the multizone carrier reefer.",
          "type": "string",
          "example": "`Off`, `On`"
        }
      }
    },
    "TrailerStatReeferStateWithDecorationsTypeResponseBody": {
      "description": "Reefer state event.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The overall state of the multizone carrier reefer.",
          "type": "string",
          "example": "`Off`, `On`"
        }
      }
    },
    "TrailerStatReeferStateZone1TypeResponseBody": {
      "description": "Reefer state event.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The state zone 1 of the reefer.",
          "type": "string",
          "example": "`Off`, `On`"
        }
      }
    },
    "TrailerStatReeferStateZone1WithDecorationsTypeResponseBody": {
      "description": "Reefer state event.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The state zone 1 of the reefer.",
          "type": "string",
          "example": "`Off`, `On`"
        }
      }
    },
    "TrailerStatReeferStateZone2TypeResponseBody": {
      "description": "Reefer state event.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The state zone 2 of the reefer.",
          "type": "string",
          "example": "`Off`, `On`"
        }
      }
    },
    "TrailerStatReeferStateZone2WithDecorationsTypeResponseBody": {
      "description": "Reefer state event.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The state zone 2 of the reefer.",
          "type": "string",
          "example": "`Off`, `On`"
        }
      }
    },
    "TrailerStatReeferStateZone3TypeResponseBody": {
      "description": "Reefer state event.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The state zone 3 of the reefer.",
          "type": "string",
          "example": "`Off`, `On`"
        }
      }
    },
    "TrailerStatReeferStateZone3WithDecorationsTypeResponseBody": {
      "description": "Reefer state event.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The state zone 3 of the reefer.",
          "type": "string",
          "example": "`Off`, `On`"
        }
      }
    },
    "TrailerStatReeferSupplyAirTemperatureMilliCZone1TypeResponseBody": {
      "description": "Supply or discharge air temperature of zone 2 of the reefer. This is the temperature of the air as it leaves the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The supply or discharge air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferSupplyAirTemperatureMilliCZone1WithDecorationsTypeResponseBody": {
      "description": "Supply or discharge air temperature of zone 2 of the reefer. This is the temperature of the air as it leaves the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The supply or discharge air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferSupplyAirTemperatureMilliCZone2TypeResponseBody": {
      "description": "Supply or discharge air temperature of zone 2 of the reefer. This is the temperature of the air as it leaves the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The supply or discharge air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferSupplyAirTemperatureMilliCZone2WithDecorationsTypeResponseBody": {
      "description": "Supply or discharge air temperature of zone 2 of the reefer. This is the temperature of the air as it leaves the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The supply or discharge air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferSupplyAirTemperatureMilliCZone3TypeResponseBody": {
      "description": "Supply or discharge air temperature of zone 2 of the reefer. This is the temperature of the air as it leaves the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The supply or discharge air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatReeferSupplyAirTemperatureMilliCZone3WithDecorationsTypeResponseBody": {
      "description": "Supply or discharge air temperature of zone 2 of the reefer. This is the temperature of the air as it leaves the cooling unit.",
      "type": "object",
      "required": [
        "value",
        "time"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/TrailerStatDecorationResponseBody"
        },
        "time": {
          "description": "UTC timestamp in RFC 3339 format.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "value": {
          "description": "The supply or discharge air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 50
        }
      }
    },
    "TrailerStatsGetTrailerStatsFeedBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsFeedBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsFeedGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsFeedInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsFeedMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsFeedNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsFeedNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsFeedResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of trailers and their stats",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatsObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "TrailerStatsGetTrailerStatsFeedServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsFeedTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsFeedUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsHistoryBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsHistoryBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsHistoryGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsHistoryInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsHistoryMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsHistoryNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsHistoryNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsHistoryResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of trailers and their stats",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatsObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "TrailerStatsGetTrailerStatsHistoryServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsHistoryTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsHistoryUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsSnapshotBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsSnapshotBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsSnapshotGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsSnapshotInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsSnapshotMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsSnapshotNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsSnapshotNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsSnapshotResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of trailers and their stats",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatsSnapshotObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "TrailerStatsGetTrailerStatsSnapshotServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsSnapshotTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsGetTrailerStatsSnapshotUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailerStatsObjectResponseBody": {
      "description": "A trailer and its stats",
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "carrierReeferState": {
          "description": "A list of engine state points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferStateWithDecorationsTypeResponseBody"
          }
        },
        "gps": {
          "description": "A list of GPS points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatGpsWithDecorationsTypeResponseBody"
          }
        },
        "gpsOdometerMeters": {
          "description": "A list of odometer points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatGpsOdometerMetersWithDecorationsTypeResponseBody"
          }
        },
        "id": {
          "description": "ID of the trailer.",
          "type": "string",
          "example": "1234"
        },
        "name": {
          "description": "Name of the vehicle.",
          "type": "string",
          "example": "Trailer-123"
        },
        "reeferAlarms": {
          "description": "A list of reefer alarm points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferAlarmWithDecorationsTypeResponseBody"
          }
        },
        "reeferAmbientAirTemperatureMilliC": {
          "description": "A list of ambient air temperature points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferAmbientAirTemperatureWithDecorationsTypeResponseBody"
          }
        },
        "reeferFuelPercent": {
          "description": "A list of fuel percent points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferFuelPercentWithDecorationsTypeResponseBody"
          }
        },
        "reeferObdEngineSeconds": {
          "description": "A list of engine second points",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferObdEngineSecondsWithDecorationsTypeResponseBody"
          }
        },
        "reeferReturnAirTemperatureMilliCZone1": {
          "description": "A list of return air temperature points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferReturnAirTemperatureMilliCZone1WithDecorationsTypeResponseBody"
          }
        },
        "reeferReturnAirTemperatureMilliCZone2": {
          "description": "A list of return air temperature points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferReturnAirTemperatureMilliCZone2WithDecorationsTypeResponseBody"
          }
        },
        "reeferReturnAirTemperatureMilliCZone3": {
          "description": "A list of return air temperature points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferReturnAirTemperatureMilliCZone3WithDecorationsTypeResponseBody"
          }
        },
        "reeferRunMode": {
          "description": "A list of run mode points",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferRunModeWithDecorationsTypeResponseBody"
          }
        },
        "reeferSetPointTemperatureMilliCZone1": {
          "description": "A list of set point temperature points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferSetPointTemperatureMilliCZone1WithDecorationsTypeResponseBody"
          }
        },
        "reeferSetPointTemperatureMilliCZone2": {
          "description": "A list of set point temperature points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferSetPointTemperatureMilliCZone2WithDecorationsTypeResponseBody"
          }
        },
        "reeferSetPointTemperatureMilliCZone3": {
          "description": "A list of set point temperature points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferSetPointTemperatureMilliCZone3WithDecorationsTypeResponseBody"
          }
        },
        "reeferStateZone1": {
          "description": "A list of engine state points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferStateZone1WithDecorationsTypeResponseBody"
          }
        },
        "reeferStateZone2": {
          "description": "A list of engine state points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferStateZone2WithDecorationsTypeResponseBody"
          }
        },
        "reeferStateZone3": {
          "description": "A list of engine state points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferStateZone3WithDecorationsTypeResponseBody"
          }
        },
        "reeferSupplyAirTemperatureMilliCZone1": {
          "description": "A list of supply air temperature points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferSupplyAirTemperatureMilliCZone1WithDecorationsTypeResponseBody"
          }
        },
        "reeferSupplyAirTemperatureMilliCZone2": {
          "description": "A list of supply air temperature points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferSupplyAirTemperatureMilliCZone2WithDecorationsTypeResponseBody"
          }
        },
        "reeferSupplyAirTemperatureMilliCZone3": {
          "description": "A list of supply air temperature points.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerStatReeferSupplyAirTemperatureMilliCZone3WithDecorationsTypeResponseBody"
          }
        }
      }
    },
    "TrailerStatsSnapshotObjectResponseBody": {
      "description": "A trailer and its stats",
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "carrierReeferState": {
          "$ref": "#/definitions/TrailerStatReeferStateTypeResponseBody"
        },
        "gps": {
          "$ref": "#/definitions/TrailerStatGpsTypeResponseBody"
        },
        "gpsOdometerMeters": {
          "$ref": "#/definitions/TrailerStatGpsOdometerMetersTypeResponseBody"
        },
        "id": {
          "description": "ID of the trailer.",
          "type": "string",
          "example": "1234"
        },
        "name": {
          "description": "Name of the vehicle.",
          "type": "string",
          "example": "Trailer-123"
        },
        "reeferAlarms": {
          "$ref": "#/definitions/TrailerStatReeferAlarmTypeResponseBody"
        },
        "reeferAmbientAirTemperatureMilliC": {
          "$ref": "#/definitions/TrailerStatReeferAmbientAirTemperatureMilliCTypeResponseBody"
        },
        "reeferFuelPercent": {
          "$ref": "#/definitions/TrailerStatReeferFuelPercentTypeResponseBody"
        },
        "reeferObdEngineSeconds": {
          "$ref": "#/definitions/TrailerStatReeferObdEngineSecondsTypeResponseBody"
        },
        "reeferReturnAirTemperatureMilliCZone1": {
          "$ref": "#/definitions/TrailerStatReeferReturnAirTemperatureMilliCZone1TypeResponseBody"
        },
        "reeferReturnAirTemperatureMilliCZone2": {
          "$ref": "#/definitions/TrailerStatReeferReturnAirTemperatureMilliCZone2TypeResponseBody"
        },
        "reeferReturnAirTemperatureMilliCZone3": {
          "$ref": "#/definitions/TrailerStatReeferReturnAirTemperatureMilliCZone3TypeResponseBody"
        },
        "reeferRunMode": {
          "$ref": "#/definitions/TrailerStatReeferRunModeTypeResponseBody"
        },
        "reeferSetPointTemperatureMilliCZone1": {
          "$ref": "#/definitions/TrailerStatReeferSetPointTemperatureMilliCZone1TypeResponseBody"
        },
        "reeferSetPointTemperatureMilliCZone2": {
          "$ref": "#/definitions/TrailerStatReeferSetPointTemperatureMilliCZone2TypeResponseBody"
        },
        "reeferSetPointTemperatureMilliCZone3": {
          "$ref": "#/definitions/TrailerStatReeferSetPointTemperatureMilliCZone3TypeResponseBody"
        },
        "reeferStateZone1": {
          "$ref": "#/definitions/TrailerStatReeferStateZone1TypeResponseBody"
        },
        "reeferStateZone2": {
          "$ref": "#/definitions/TrailerStatReeferStateZone2TypeResponseBody"
        },
        "reeferStateZone3": {
          "$ref": "#/definitions/TrailerStatReeferStateZone3TypeResponseBody"
        },
        "reeferSupplyAirTemperatureMilliCZone1": {
          "$ref": "#/definitions/TrailerStatReeferSupplyAirTemperatureMilliCZone1TypeResponseBody"
        },
        "reeferSupplyAirTemperatureMilliCZone2": {
          "$ref": "#/definitions/TrailerStatReeferSupplyAirTemperatureMilliCZone2TypeResponseBody"
        },
        "reeferSupplyAirTemperatureMilliCZone3": {
          "$ref": "#/definitions/TrailerStatReeferSupplyAirTemperatureMilliCZone3TypeResponseBody"
        }
      }
    },
    "TrailerWithAttributesResponseObjectResponseBody": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "attributes": {
          "description": "List of attributes associated with the entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoaAttributeTinyResponseBody"
          }
        },
        "enabledForMobile": {
          "description": "Indicates if the trailer is visible on the Samsara mobile apps.",
          "type": "boolean",
          "example": true
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "The unique Samsara ID of the Trailer. This is automatically generated when the Trailer object is created. It cannot be changed.",
          "type": "string",
          "example": "494123"
        },
        "installedGateway": {
          "$ref": "#/definitions/TrailerGoaGatewayTinyResponseResponseBody"
        },
        "licensePlate": {
          "description": "The license plate of the Trailer. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 12,
          "example": "7TYP290"
        },
        "name": {
          "description": "The human-readable name of the Trailer. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. By default, this name is the serial number of the Samsara Asset Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.",
          "type": "string",
          "example": "Trailer-123"
        },
        "notes": {
          "description": "These are generic notes about the Trailer. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 255,
          "example": "These are my trailer notes"
        },
        "tags": {
          "description": "The list of [tags](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting) associated with the Trailer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoaTagTinyResponseResponseBody"
          }
        },
        "trailerSerialNumber": {
          "description": "The serial number of the trailer.",
          "type": "string",
          "example": "8V8WD530FLN016251"
        }
      }
    },
    "TrailersCreateTrailerBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersCreateTrailerBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersCreateTrailerGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersCreateTrailerInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersCreateTrailerMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersCreateTrailerNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersCreateTrailerNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersCreateTrailerRequestBody": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "attributes": {
          "description": "A list of attributes to assign to the trailer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoaAttributeTinyRequestBody"
          }
        },
        "enabledForMobile": {
          "description": "Indicates if the trailer is visible on the Samsara mobile apps.",
          "type": "boolean",
          "example": true
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "licensePlate": {
          "description": "The license plate of the Trailer. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 12,
          "example": "7TYP290"
        },
        "name": {
          "description": "The human-readable name of the Trailer. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. By default, this name is the serial number of the Samsara Asset Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.",
          "type": "string",
          "example": "Trailer-123"
        },
        "notes": {
          "description": "These are generic notes about the Trailer. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 255,
          "example": "These are my trailer notes"
        },
        "tagIds": {
          "description": "An array of IDs of tags to associate with this trailer.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "Dolorum ut."
          },
          "example": [
            "Qui ad et et non.",
            "Et numquam ut.",
            "Qui eligendi vel ab ut."
          ]
        },
        "trailerSerialNumber": {
          "description": "The serial number of the trailer.",
          "type": "string",
          "example": "8V8WD530FLN016251"
        }
      }
    },
    "TrailersCreateTrailerResponseBody": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/TrailerWithAttributesResponseObjectResponseBody"
        }
      }
    },
    "TrailersCreateTrailerServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersCreateTrailerTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersCreateTrailerUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersDeleteTrailerBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersDeleteTrailerBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersDeleteTrailerGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersDeleteTrailerInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersDeleteTrailerMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersDeleteTrailerNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersDeleteTrailerNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersDeleteTrailerServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersDeleteTrailerTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersDeleteTrailerUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersGetTrailerBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersGetTrailerBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersGetTrailerGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersGetTrailerInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersGetTrailerMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersGetTrailerNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersGetTrailerNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersGetTrailerResponseBody": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/TrailerWithAttributesResponseObjectResponseBody"
        }
      }
    },
    "TrailersGetTrailerServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersGetTrailerTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersGetTrailerUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersListTrailersBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersListTrailersBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersListTrailersGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersListTrailersInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersListTrailersMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersListTrailersNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersListTrailersNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersListTrailersResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of trailer objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrailerResponseObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "TrailersListTrailersServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersListTrailersTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersListTrailersUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersUpdateTrailerBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersUpdateTrailerBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersUpdateTrailerGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersUpdateTrailerInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersUpdateTrailerMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersUpdateTrailerNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersUpdateTrailerNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersUpdateTrailerRequestBody": {
      "type": "object",
      "properties": {
        "attributes": {
          "description": "A list of attributes to assign to the trailer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoaAttributeTinyRequestBody"
          }
        },
        "enabledForMobile": {
          "description": "Indicates if the trailer is visible on the Samsara mobile apps.",
          "type": "boolean",
          "example": true
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "licensePlate": {
          "description": "The license plate of the Trailer. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 12,
          "example": "7TYP290"
        },
        "name": {
          "description": "The human-readable name of the Trailer. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. By default, this name is the serial number of the Samsara Asset Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.",
          "type": "string",
          "example": "Trailer-123"
        },
        "notes": {
          "description": "These are generic notes about the Trailer. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 255,
          "example": "These are my trailer notes"
        },
        "odometerMeters": {
          "description": "When you provide a manual odometer override, Samsara will begin updating a trailer's odometer using GPS distance traveled since this override was set. Only applies to trailers installed with Samsara gateways.",
          "type": "integer",
          "format": "int64",
          "example": 1234
        },
        "tagIds": {
          "description": "An array of IDs of tags to associate with this trailer.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "Expedita facilis qui asperiores repellendus laudantium."
          },
          "example": [
            "Consequatur deserunt.",
            "Et dolore.",
            "Molestiae in fugit dicta amet asperiores magni."
          ]
        },
        "trailerSerialNumber": {
          "description": "The serial number of the trailer.",
          "type": "string",
          "example": "8V8WD530FLN016251"
        }
      }
    },
    "TrailersUpdateTrailerResponseBody": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/TrailerWithAttributesResponseObjectResponseBody"
        }
      }
    },
    "TrailersUpdateTrailerServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersUpdateTrailerTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "TrailersUpdateTrailerUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "UpdateAddressRequest": {
      "description": "A request body to update an Address.",
      "type": "object",
      "properties": {
        "addressTypes": {
          "description": "Reporting location type associated with the address (used for ELD reporting purposes).",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "yard",
              "shortHaul",
              "workforceSite"
            ],
            "example": "yard"
          }
        },
        "contactIds": {
          "description": "An array of Contact IDs associated with this Address.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "22408"
          }
        },
        "externalIds": {
          "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "maintenanceId": "250020",
            "payrollId": "ABFS18600"
          }
        },
        "formattedAddress": {
          "description": "The full street address for this address/geofence, as it might be recognized by Google Maps.",
          "type": "string",
          "maxLength": 1024,
          "example": "350 Rhode Island St, San Francisco, CA"
        },
        "geofence": {
          "description": "The geofence that defines this address and its bounds. This can either be a circle or a polygon, but not both.",
          "type": "object",
          "properties": {
            "circle": {
              "description": "Information about a circular geofence. This field is only needed if the geofence is a circle.",
              "type": "object",
              "required": [
                "radiusMeters"
              ],
              "properties": {
                "latitude": {
                  "description": "Latitude of the address. Will be geocoded from `formattedAddress` if not provided.",
                  "type": "number",
                  "format": "double",
                  "example": 37.765363
                },
                "longitude": {
                  "description": "Longitude of the address. Will be geocoded from `formattedAddress` if not provided.",
                  "type": "number",
                  "format": "double",
                  "example": -122.4029238
                },
                "radiusMeters": {
                  "description": "The radius of the circular geofence in meters.",
                  "type": "integer",
                  "format": "int64",
                  "example": 25
                }
              }
            },
            "polygon": {
              "description": "Information about a polygon geofence. This field is only needed if the geofence is a polygon.",
              "type": "object",
              "required": [
                "vertices"
              ],
              "properties": {
                "vertices": {
                  "description": "The vertices of the polygon geofence. These geofence vertices describe the perimeter of the polygon, and must consist of at least 3 vertices and less than 40.",
                  "type": "array",
                  "maxItems": 40,
                  "minItems": 3,
                  "items": {
                    "type": "object",
                    "required": [
                      "latitude",
                      "longitude"
                    ],
                    "properties": {
                      "latitude": {
                        "description": "The latitude of a geofence vertex in decimal degrees.",
                        "type": "number",
                        "format": "double"
                      },
                      "longitude": {
                        "description": "The longitude of a geofence vertex in decimal degrees.",
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "example": [
                    {
                      "latitude": 37.765363,
                      "longitude": -122.403098
                    },
                    {
                      "latitude": 38.765363,
                      "longitude": -122.403098
                    },
                    {
                      "latitude": 37.765363,
                      "longitude": -123.403098
                    }
                  ]
                }
              }
            }
          }
        },
        "latitude": {
          "description": "Latitude of the address. Will be geocoded from `formattedAddress` if not provided.",
          "type": "number",
          "format": "double",
          "example": 37.765363
        },
        "longitude": {
          "description": "Longitude of the address. Will be geocoded from `formattedAddress` if not provided.",
          "type": "number",
          "format": "double",
          "example": -122.4029238
        },
        "name": {
          "description": "Name of the address.",
          "type": "string",
          "maxLength": 255,
          "example": "Samsara HQ"
        },
        "notes": {
          "description": "Notes about the address.",
          "type": "string",
          "maxLength": 280,
          "example": "Hours of operation: 8am - 6pm; Truck entrance on the Rhode Island street side."
        },
        "tagIds": {
          "description": "An array of IDs of tags to associate with this address.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "3914"
          }
        }
      }
    },
    "UpdateAttributeRequest": {
      "description": "A request body to update an Attribute.",
      "type": "object",
      "required": [
        "entityType"
      ],
      "properties": {
        "attributeType": {
          "description": "Denotes the data type of the attribute's values.",
          "type": "string",
          "default": "string",
          "enum": [
            "string",
            "number"
          ],
          "example": "string"
        },
        "attributeValueQuantity": {
          "description": "Defines whether or not this attribute can be used on the same entity many times (with different values).",
          "type": "string",
          "default": "multi",
          "enum": [
            "single",
            "multi"
          ],
          "example": "multi"
        },
        "entities": {
          "description": "Entities that will be applied to this attribute",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "entityId": {
                "description": "Entity id, based on the entity type.",
                "type": "string"
              },
              "externalIds": {
                "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "maintenanceId": "250020",
                  "payrollId": "ABFS18600"
                }
              },
              "numberValues": {
                "description": "Number values that can be associated with this attribute",
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "double"
                }
              },
              "stringValues": {
                "description": "String values that can be associated with this attribute",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "entityType": {
          "description": "Denotes the type of entity, driver or asset.",
          "type": "string",
          "enum": [
            "driver",
            "asset"
          ],
          "example": "asset"
        },
        "name": {
          "description": "Name",
          "type": "string",
          "example": "License Certifications"
        },
        "numberValues": {
          "description": "Number values that can be associated with this attribute",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "stringValues": {
          "description": "String values that can be associated with this attribute",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateContactRequest": {
      "description": "Information for adding a notification contact for alerts.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Email address of the contact.",
          "type": "string",
          "maxLength": 255,
          "example": "jane.jones@yahoo.com"
        },
        "firstName": {
          "description": "First name of the contact.",
          "type": "string",
          "maxLength": 255,
          "example": "Jane"
        },
        "lastName": {
          "description": "Last name of the contact.",
          "type": "string",
          "maxLength": 255,
          "example": "Jones"
        },
        "phone": {
          "description": "Phone number of the contact.",
          "type": "string",
          "maxLength": 255,
          "example": "111-222-3344"
        }
      }
    },
    "UpdateDriverRequest": {
      "description": "Driver that should be updated.",
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "description": "A minified attribute.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The samsara id of the attribute object.",
                "type": "string",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "name": {
                "description": "Name of attribute.",
                "type": "string",
                "example": "License Certifications"
              },
              "numberValues": {
                "description": "Number values that are associated with this attribute.",
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "double"
                }
              },
              "stringValues": {
                "description": "String values that are associated with this attribute.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "carrierSettings": {
          "$ref": "#/definitions/DriverCarrierSettings"
        },
        "currentIdCardCode": {
          "description": "The ID Card Code on the back of the physical card assigned to the driver.  Contact Samsara if you would like to enable this feature.",
          "type": "string",
          "example": "941767043"
        },
        "deactivatedAtTime": {
          "description": "The date and time this driver is considered to be deactivated in RFC 3339 format.",
          "type": "string",
          "example": "2019-05-18T20:27:35Z"
        },
        "driverActivationStatus": {
          "description": "A value indicating whether the driver is active or deactivated.",
          "type": "string",
          "enum": [
            "active",
            "deactivated"
          ]
        },
        "eldAdverseWeatherExemptionEnabled": {
          "description": "Flag indicating this driver may use Adverse Weather exemptions in ELD logs.",
          "type": "boolean"
        },
        "eldBigDayExemptionEnabled": {
          "description": "Flag indicating this driver may use Big Day exemption in ELD logs.",
          "type": "boolean"
        },
        "eldDayStartHour": {
          "description": "`0` indicating midnight-to-midnight ELD driving hours, `12` to indicate noon-to-noon driving hours.",
          "type": "integer"
        },
        "eldExempt": {
          "description": "Flag indicating this driver is exempt from the Electronic Logging Mandate.",
          "type": "boolean"
        },
        "eldExemptReason": {
          "description": "Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt).",
          "type": "string",
          "example": "Bad driver"
        },
        "eldPcEnabled": {
          "description": "Flag indicating this driver may select the Personal Conveyance duty status in ELD logs.",
          "type": "boolean"
        },
        "eldYmEnabled": {
          "description": "Flag indicating this driver may select the Yard Move duty status in ELD logs.",
          "type": "boolean"
        },
        "externalIds": {
          "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "maintenanceId": "250020",
            "payrollId": "ABFS18600"
          }
        },
        "licenseNumber": {
          "description": "Driver's state issued license number. The combination of this number and `licenseState` must be unique.",
          "type": "string",
          "example": "E1234567"
        },
        "licenseState": {
          "description": "Abbreviation of US state, Canadian province, or US territory that issued driver's license.",
          "type": "string",
          "example": "CA"
        },
        "locale": {
          "description": "Locale override (uncommon). These are specified by ISO 3166-2 country codes for supported locales.",
          "type": "string",
          "enum": [
            "us",
            "at",
            "be",
            "ca",
            "gb",
            "fr",
            "de",
            "ie",
            "it",
            "lu",
            "mx",
            "nl",
            "es",
            "ch",
            "pr"
          ]
        },
        "name": {
          "description": "Driver's name.",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "example": "Susan Jones"
        },
        "notes": {
          "description": "Notes about the driver.",
          "type": "string",
          "maxLength": 4096,
          "example": "Also goes by the nickname Furious Fred."
        },
        "password": {
          "description": "Password that the driver can use to login to the Samsara driver app.",
          "type": "string",
          "example": "aSecurePassword1234"
        },
        "phone": {
          "description": "Phone number of the driver.",
          "type": "string",
          "maxLength": 255,
          "example": "5558234327"
        },
        "staticAssignedVehicleId": {
          "description": "ID of vehicle that the driver is permanently assigned to. (uncommon).",
          "type": "string",
          "example": "456"
        },
        "tachographCardNumber": {
          "description": "Driver's assigned tachograph card number (Europe specific)",
          "type": "string",
          "example": "1000000492436002"
        },
        "tagIds": {
          "description": "IDs of tags the driver is associated with.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "147"
          }
        },
        "timezone": {
          "description": "Home terminal timezone, in order to indicate what time zone should be used to calculate the ELD logs. Driver timezones use [IANA timezone database](https://www.iana.org/time-zones) keys (e.g. `America/Los_Angeles`, `America/New_York`, `Europe/London`, etc.). You can find a mapping of common timezone formats to IANA timezone keys [here](https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html).",
          "type": "string",
          "example": "America/Los_Angeles"
        },
        "usDriverRulesetOverride": {
          "$ref": "#/definitions/UsDriverRulesetOverride"
        },
        "username": {
          "description": "Driver's login username into the driver app. The username may not contain spaces or the '@' symbol. The username must be unique.",
          "type": "string",
          "maxLength": 189,
          "minLength": 1,
          "example": "SusanJones"
        },
        "vehicleGroupTagId": {
          "description": "Tag ID which determines which vehicles a driver will see when selecting vehicles.",
          "type": "string",
          "example": "342417"
        }
      }
    },
    "UpdateDvirRequest": {
      "description": "Information about resolving a DVIR.",
      "type": "object",
      "required": [
        "authorId",
        "isResolved"
      ],
      "properties": {
        "authorId": {
          "description": "The user who is resolving the dvir.",
          "type": "string",
          "example": "11"
        },
        "isResolved": {
          "description": "Resolves the DVIR. Must be `true`.",
          "type": "boolean"
        },
        "mechanicNotes": {
          "description": "The mechanics notes on the DVIR.",
          "type": "string",
          "example": "Replaced headlight on passenger side."
        },
        "signedAtTime": {
          "description": "Time when user signed this DVIR. Defaults to now. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        }
      }
    },
    "UpdateRoutesStopRequestObjectRequestBody": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "ID of the address. An address [externalId](https://developers.samsara.com/docs/external-ids#using-external-ids) can also be used interchangeably here.",
          "type": "string",
          "example": "45934"
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "ID of the stop",
          "type": "string",
          "example": "4125"
        },
        "name": {
          "description": "Name of the stop",
          "type": "string",
          "example": "Stop #1"
        },
        "notes": {
          "description": "Notes for the stop",
          "type": "string",
          "maxLength": 2000,
          "example": "These are my notes"
        },
        "scheduledArrivalTime": {
          "type": "string",
          "format": "date-time",
          "example": "2019-06-13T19:08:25Z"
        },
        "scheduledDepartureTime": {
          "type": "string",
          "format": "date-time",
          "example": "2019-06-13T19:08:25Z"
        },
        "singleUseLocation": {
          "$ref": "#/definitions/RoutesSingleUseAddressObjectRequestBody"
        }
      }
    },
    "UpdateUserRequest": {
      "description": "The user update arguments",
      "type": "object",
      "properties": {
        "authType": {
          "description": "The authentication type the user uses to authenticate. To use SAML this organization must have a configured SAML integration.",
          "type": "string",
          "enum": [
            "default",
            "saml"
          ]
        },
        "name": {
          "description": "The first and last name of the user.",
          "type": "string",
          "example": "Bob Smith"
        },
        "roles": {
          "description": "The list of roles that applies to this user. A user may have \"organizational\" roles, which apply to the user at the organizational level, and \"tag-specific\" roles, which apply to the user for a given tag.",
          "type": "array",
          "items": {
            "description": "A role that applies to a user. If the role has a `tagId`, then the role applies for that tag. If there is no `tagId`, then the role applies at the organizational level. A user may have many tag-specific roles, but may only have one organizational role. If the organizational level role has higher privileges than a tag-specific role, then the organizational role privileges will take precedence.",
            "type": "object",
            "required": [
              "roleId"
            ],
            "properties": {
              "roleId": {
                "description": "The unique ID for the role.",
                "type": "string",
                "example": "8a9371af-82d1-4158-bf91-4ecc8d3a114c"
              },
              "tagId": {
                "description": "ID of the tag this role applies to.",
                "type": "string",
                "example": "3914"
              }
            }
          }
        }
      }
    },
    "UpdateVehicleRequest": {
      "description": "All the editable portions of the vehicle object.",
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/attributeTiny"
          }
        },
        "auxInputType1": {
          "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
          "type": "string",
          "enum": [
            "none",
            "emergencyLights",
            "emergencyAlarm",
            "stopPaddle",
            "powerTakeOff",
            "plow",
            "sweeper",
            "salter",
            "reefer",
            "door",
            "boom",
            "auxiliaryEngine",
            "generator",
            "eightWayLights",
            "panicButton",
            "privacyButton",
            "frontAxleDrive",
            "weightSensor",
            "other",
            "secondaryFuelSource",
            "ecuPowerTakeOff"
          ],
          "example": "boom"
        },
        "auxInputType10": {
          "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
          "type": "string",
          "enum": [
            "none",
            "emergencyLights",
            "emergencyAlarm",
            "stopPaddle",
            "powerTakeOff",
            "plow",
            "sweeper",
            "salter",
            "reefer",
            "door",
            "boom",
            "auxiliaryEngine",
            "generator",
            "eightWayLights",
            "panicButton",
            "privacyButton",
            "frontAxleDrive",
            "weightSensor",
            "other",
            "secondaryFuelSource",
            "ecuPowerTakeOff"
          ],
          "example": "boom"
        },
        "auxInputType2": {
          "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
          "type": "string",
          "enum": [
            "none",
            "emergencyLights",
            "emergencyAlarm",
            "stopPaddle",
            "powerTakeOff",
            "plow",
            "sweeper",
            "salter",
            "reefer",
            "door",
            "boom",
            "auxiliaryEngine",
            "generator",
            "eightWayLights",
            "panicButton",
            "privacyButton",
            "frontAxleDrive",
            "weightSensor",
            "other",
            "secondaryFuelSource",
            "ecuPowerTakeOff"
          ],
          "example": "boom"
        },
        "auxInputType3": {
          "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
          "type": "string",
          "enum": [
            "none",
            "emergencyLights",
            "emergencyAlarm",
            "stopPaddle",
            "powerTakeOff",
            "plow",
            "sweeper",
            "salter",
            "reefer",
            "door",
            "boom",
            "auxiliaryEngine",
            "generator",
            "eightWayLights",
            "panicButton",
            "privacyButton",
            "frontAxleDrive",
            "weightSensor",
            "other",
            "secondaryFuelSource",
            "ecuPowerTakeOff"
          ],
          "example": "boom"
        },
        "auxInputType4": {
          "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
          "type": "string",
          "enum": [
            "none",
            "emergencyLights",
            "emergencyAlarm",
            "stopPaddle",
            "powerTakeOff",
            "plow",
            "sweeper",
            "salter",
            "reefer",
            "door",
            "boom",
            "auxiliaryEngine",
            "generator",
            "eightWayLights",
            "panicButton",
            "privacyButton",
            "frontAxleDrive",
            "weightSensor",
            "other",
            "secondaryFuelSource",
            "ecuPowerTakeOff"
          ],
          "example": "boom"
        },
        "auxInputType5": {
          "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
          "type": "string",
          "enum": [
            "none",
            "emergencyLights",
            "emergencyAlarm",
            "stopPaddle",
            "powerTakeOff",
            "plow",
            "sweeper",
            "salter",
            "reefer",
            "door",
            "boom",
            "auxiliaryEngine",
            "generator",
            "eightWayLights",
            "panicButton",
            "privacyButton",
            "frontAxleDrive",
            "weightSensor",
            "other",
            "secondaryFuelSource",
            "ecuPowerTakeOff"
          ],
          "example": "boom"
        },
        "auxInputType6": {
          "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
          "type": "string",
          "enum": [
            "none",
            "emergencyLights",
            "emergencyAlarm",
            "stopPaddle",
            "powerTakeOff",
            "plow",
            "sweeper",
            "salter",
            "reefer",
            "door",
            "boom",
            "auxiliaryEngine",
            "generator",
            "eightWayLights",
            "panicButton",
            "privacyButton",
            "frontAxleDrive",
            "weightSensor",
            "other",
            "secondaryFuelSource",
            "ecuPowerTakeOff"
          ],
          "example": "boom"
        },
        "auxInputType7": {
          "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
          "type": "string",
          "enum": [
            "none",
            "emergencyLights",
            "emergencyAlarm",
            "stopPaddle",
            "powerTakeOff",
            "plow",
            "sweeper",
            "salter",
            "reefer",
            "door",
            "boom",
            "auxiliaryEngine",
            "generator",
            "eightWayLights",
            "panicButton",
            "privacyButton",
            "frontAxleDrive",
            "weightSensor",
            "other",
            "secondaryFuelSource",
            "ecuPowerTakeOff"
          ],
          "example": "boom"
        },
        "auxInputType8": {
          "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
          "type": "string",
          "enum": [
            "none",
            "emergencyLights",
            "emergencyAlarm",
            "stopPaddle",
            "powerTakeOff",
            "plow",
            "sweeper",
            "salter",
            "reefer",
            "door",
            "boom",
            "auxiliaryEngine",
            "generator",
            "eightWayLights",
            "panicButton",
            "privacyButton",
            "frontAxleDrive",
            "weightSensor",
            "other",
            "secondaryFuelSource",
            "ecuPowerTakeOff"
          ],
          "example": "boom"
        },
        "auxInputType9": {
          "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
          "type": "string",
          "enum": [
            "none",
            "emergencyLights",
            "emergencyAlarm",
            "stopPaddle",
            "powerTakeOff",
            "plow",
            "sweeper",
            "salter",
            "reefer",
            "door",
            "boom",
            "auxiliaryEngine",
            "generator",
            "eightWayLights",
            "panicButton",
            "privacyButton",
            "frontAxleDrive",
            "weightSensor",
            "other",
            "secondaryFuelSource",
            "ecuPowerTakeOff"
          ],
          "example": "boom"
        },
        "engineHours": {
          "description": "A manual override for the vehicle's engine hours. You may only override a vehicle's engine hours if it cannot be read from on-board diagnostics. When you provide a manual engine hours override, Samsara will begin updating a vehicle's engine hours based on when the Samsara Vehicle Gateway is recieving power or not.",
          "type": "integer",
          "format": "int64",
          "example": 10943
        },
        "externalIds": {
          "description": "The \u003ca href=\"/docs/external-ids\" target=\"_blank\"\u003eexternal IDs\u003c/a\u003e for the given object.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "maintenanceId": "250020",
            "payrollId": "ABFS18600"
          }
        },
        "gatewaySerial": {
          "$ref": "#/definitions/UserIdentifierSerial"
        },
        "harshAccelerationSettingType": {
          "description": "The harsh acceleration setting type. This setting influences the acceleration sensitivity from which a \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043051792-Safety-Event-Overview\" target=\"_blank\"\u003eharsh event\u003c/a\u003e is triggered. **By default**, this setting is inferred by the Samsara Vehicle Gateway from the engine computer, but it may be set or updated through the Samsara Dashboard or the API at any time. If set to `off`, then no acceleration based harsh events are triggered for the vehicle.",
          "type": "string",
          "enum": [
            "passengerCar",
            "lightTruck",
            "heavyDuty",
            "off",
            "automatic"
          ],
          "example": "off"
        },
        "licensePlate": {
          "description": "The license plate of the Vehicle. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 12,
          "example": "XHK1234"
        },
        "name": {
          "description": "The human-readable name of the Vehicle. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. **By default**, this name is the serial number of the Samsara Vehicle Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.",
          "type": "string",
          "example": "Truck A7"
        },
        "notes": {
          "description": "These are generic notes about the Vehicle. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 255,
          "example": "These are notes about this given vehicle."
        },
        "odometerMeters": {
          "description": "A manual override for the vehicle's odometer. You may only override a vehicle's odometer if it cannot be read from on-board diagnostics. When you provide a manual odometer override, Samsara will begin updating a vehicle's odometer using GPS distance traveled since this override was set. See \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/115005273667\" target=\"_blank\"\u003ehere\u003c/a\u003e for more details.",
          "type": "integer",
          "format": "int64",
          "example": 9182
        },
        "staticAssignedDriverId": {
          "description": "ID for the static assigned driver of the vehicle. Setting the value to 0 will unassign the current driver.",
          "type": "string",
          "example": "123"
        },
        "tagIds": {
          "description": "An array of IDs of tags to associate with this vehicle.",
          "type": "array",
          "items": {
            "type": "string",
            "example": "321"
          }
        },
        "vin": {
          "description": "The VIN of the Vehicle. Most of the time, this will be automatically read from the engine computer by the Samsara Vehicle Gateway. It will be empty if it cannot be read. It can be set or updated through the Samsara Dashboard or the API at any time.",
          "type": "string",
          "maxLength": 17,
          "minLength": 11,
          "example": "1FUJA6BD31LJ09646"
        }
      }
    },
    "UsDriverRulesetOverride": {
      "description": "US Driver Ruleset override for a given driver. If the driver is operating under a ruleset different from the organization default, the override is used. Updating this value only updates the override setting for this driver. Explicitly setting this field to 'null' will delete driver's ruleset override. If the driver does not have an override ruleset set, the response will not include any usDriverRulesetOverride information.",
      "type": "object",
      "required": [
        "cycle",
        "usStateToOverride",
        "restart",
        "restbreak"
      ],
      "properties": {
        "cycle": {
          "description": "The driver's working cycle.",
          "type": "string",
          "enum": [
            "USA Property (8/70)",
            "USA Property (7/60)",
            "USA Passenger (8/70)",
            "USA Passenger (7/60)",
            "Alaska Property (8/80)",
            "Alaska Property (7/70)",
            "Alaska Passenger (8/80)",
            "Alaska Passenger (7/70)",
            "California School/FLV (8/80)",
            "California Farm (8/112)",
            "California Property (8/80)",
            "California Flammable Liquid (8/80)",
            "California Passenger (8/80)",
            "California Motion Picture (8/80)",
            "Florida (8/80)",
            "Florida (7/70)",
            "Nebraska (8/80)",
            "Nebraska (7/70)",
            "North Carolina (8/80)",
            "North Carolina (7/70)",
            "Oklahoma (8/70)",
            "Oklahoma (7/60)",
            "Oregon (8/80)",
            "Oregon (7/70)",
            "South Carolina (8/80)",
            "South Carolina (7/70)",
            "Texas (7/70)",
            "Wisconsin (8/80)",
            "Wisconsin (7/70)"
          ],
          "example": "TX 70 hour / 7 day"
        },
        "restart": {
          "description": "Amount of time necessary for the driver to be resting in order to restart their cycle.",
          "type": "string",
          "enum": [
            "34-hour Restart",
            "24-hour Restart",
            "36-hour Restart",
            "72-hour Restart",
            "None"
          ],
          "example": "34-hour Restart"
        },
        "restbreak": {
          "description": "The restbreak required for this driver.",
          "type": "string",
          "enum": [
            "Property (off-duty/sleeper)",
            "California Mealbreak (off-duty/sleeper)",
            "None"
          ],
          "example": "None"
        },
        "usStateToOverride": {
          "description": "The jurisdiction of the ruleset applied to this driver. These are specified by either the ISO 3166-2 postal code for the supported US states, or empty string '' for US Federal Ruleset jurisdiction.",
          "type": "string",
          "enum": [
            "",
            "AK",
            "CA",
            "FL",
            "NE",
            "NC",
            "OK",
            "OR",
            "SC",
            "TX",
            "WI"
          ],
          "example": "TX"
        }
      }
    },
    "User": {
      "description": "A user object.",
      "type": "object",
      "required": [
        "id",
        "authType",
        "name",
        "roles",
        "email"
      ],
      "properties": {
        "authType": {
          "$ref": "#/definitions/UserAuthType"
        },
        "email": {
          "$ref": "#/definitions/UserEmail"
        },
        "id": {
          "$ref": "#/definitions/UserId"
        },
        "name": {
          "$ref": "#/definitions/UserName"
        },
        "roles": {
          "$ref": "#/definitions/UserRoles"
        }
      }
    },
    "UserAuthType": {
      "description": "The authentication type the user uses to authenticate. To use SAML this organization must have a configured SAML integration.",
      "type": "string",
      "enum": [
        "default",
        "saml"
      ]
    },
    "UserEmail": {
      "description": "The email address of this user.",
      "type": "string",
      "example": "user@company.com"
    },
    "UserId": {
      "description": "ID of the user.",
      "type": "string",
      "example": "123"
    },
    "UserIdentifierSerial": {
      "description": "The serial number of the gateway.",
      "type": "string",
      "example": "ABCD-123-XYZ"
    },
    "UserName": {
      "description": "The first and last name of the user.",
      "type": "string",
      "example": "Bob Smith"
    },
    "UserResponse": {
      "description": "A single user.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "UserRole": {
      "description": "A user role object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID for the role.",
          "type": "string",
          "example": "8a9371af-82d1-4158-bf91-4ecc8d3a114c"
        },
        "name": {
          "description": "The name of the role.",
          "type": "string",
          "example": "Full Admin"
        }
      }
    },
    "UserRoleAssignment": {
      "description": "A role that applies to a user. If the role has a `tag`, then the role applies for that tag. If there is no `tag`, then the role applies at the organizational level. A user may have many tag-specific roles, but may only have one organizational level role. If the organizational level role has higher privileges than a tag-specific role, then the organizational role privileges will take precedence.",
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/UserRole"
        },
        "tag": {
          "$ref": "#/definitions/tagTinyResponse"
        }
      }
    },
    "UserRoleAssignmentRequest": {
      "description": "A role that applies to a user. If the role has a `tagId`, then the role applies for that tag. If there is no `tagId`, then the role applies at the organizational level. A user may have many tag-specific roles, but may only have one organizational role. If the organizational level role has higher privileges than a tag-specific role, then the organizational role privileges will take precedence.",
      "type": "object",
      "required": [
        "roleId"
      ],
      "properties": {
        "roleId": {
          "description": "The unique ID for the role.",
          "type": "string",
          "example": "8a9371af-82d1-4158-bf91-4ecc8d3a114c"
        },
        "tagId": {
          "description": "ID of the tag this role applies to.",
          "type": "string",
          "example": "3914"
        }
      }
    },
    "UserRoles": {
      "description": "The list of roles that applies to this user. A user may have \"organizational\" roles, which apply to the user at the organizational level, and \"tag-specific\" roles, which apply to the user for a given tag.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserRoleAssignment"
      }
    },
    "UserRolesRequest": {
      "description": "The list of roles that applies to this user. A user may have \"organizational\" roles, which apply to the user at the organizational level, and \"tag-specific\" roles, which apply to the user for a given tag.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserRoleAssignmentRequest"
      }
    },
    "V1Asset": {
      "description": "Basic information of an asset",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "assetSerialNumber": {
          "description": "Serial number of the host asset",
          "type": "string",
          "example": "SNTEST123"
        },
        "cable": {
          "description": "The cable connected to the asset",
          "type": "object",
          "properties": {
            "assetType": {
              "description": "Asset type",
              "type": "string",
              "example": "Thermo King"
            }
          }
        },
        "engineHours": {
          "description": "Engine hours",
          "type": "integer",
          "example": 104
        },
        "id": {
          "description": "Asset ID",
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "description": "Asset name",
          "type": "string",
          "example": "Trailer 123"
        },
        "vehicleId": {
          "description": "The ID of the Vehicle associated to the Asset (if present)",
          "type": "integer",
          "format": "int64",
          "example": 2
        }
      }
    },
    "V1AssetCurrentLocation": {
      "description": "Current location of an asset",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "The latitude of the location in degrees.",
          "type": "number",
          "example": 37
        },
        "location": {
          "description": "The best effort (street,city,state) for the latitude and longitude.",
          "type": "string",
          "example": "525 York, San Francisco, CA"
        },
        "longitude": {
          "description": "The longitude of the location in degrees.",
          "type": "number",
          "example": -122.7
        },
        "speedMilesPerHour": {
          "description": "The speed calculated from GPS that the asset was traveling at in miles per hour.",
          "type": "number",
          "example": 35
        },
        "timeMs": {
          "description": "Time in Unix milliseconds since epoch when the asset was at the location.",
          "type": "number",
          "example": 12314151
        }
      }
    },
    "V1AssetCurrentLocationsResponse": {
      "description": "Basic information of an asset",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "assetSerialNumber": {
          "description": "Asset serial number",
          "type": "string",
          "example": "8dka2810"
        },
        "cable": {
          "description": "The cable connected to the asset",
          "type": "object",
          "properties": {
            "assetType": {
              "description": "Asset type",
              "type": "string",
              "example": "Thermo King"
            }
          }
        },
        "engineHours": {
          "description": "Engine hours",
          "type": "integer",
          "example": 104
        },
        "id": {
          "description": "Asset ID",
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "location": {
          "description": "Current location of an asset",
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1AssetCurrentLocation"
          }
        },
        "name": {
          "description": "Asset name",
          "type": "string",
          "example": "Trailer 123"
        }
      }
    },
    "V1AssetLocationResponse": {
      "description": "A list of historical asset locations.",
      "type": "array",
      "items": {
        "description": "Asset location details.",
        "type": "object",
        "properties": {
          "latitude": {
            "description": "The latitude of the location in degrees.",
            "type": "number",
            "example": 37
          },
          "location": {
            "description": "The best effort (street,city,state) for the latitude and longitude.",
            "type": "string",
            "example": "525 York, San Francisco, CA"
          },
          "longitude": {
            "description": "The longitude of the location in degrees.",
            "type": "number",
            "example": -122.7
          },
          "speedMilesPerHour": {
            "description": "The speed calculated from GPS that the asset was traveling at in miles per hour.",
            "type": "number",
            "example": 35
          },
          "time": {
            "description": "Time in Unix milliseconds since epoch when the asset was at the location.",
            "type": "number",
            "example": 12314151
          }
        }
      }
    },
    "V1AssetReeferResponse": {
      "description": "Reefer-specific asset details",
      "type": "object",
      "properties": {
        "assetType": {
          "description": "Asset type",
          "type": "string",
          "example": "Thermo King"
        },
        "id": {
          "description": "Asset ID",
          "type": "integer",
          "example": 1
        },
        "name": {
          "description": "Asset name",
          "type": "string",
          "example": "Reefer 123"
        },
        "reeferStats": {
          "type": "object",
          "properties": {
            "alarms": {
              "description": "Reefer alarms",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alarms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "alarmCode": {
                          "description": "ID of the alarm",
                          "type": "integer",
                          "format": "int64",
                          "example": 102
                        },
                        "description": {
                          "description": "Description of the alarm",
                          "type": "string",
                          "example": "Check Return Air Sensor"
                        },
                        "operatorAction": {
                          "description": "Recommended operator action",
                          "type": "string",
                          "example": "Check and repair at end of trip"
                        },
                        "severity": {
                          "description": "Severity of the alarm: 1: OK to run, 2: Check as specified, 3: Take immediate action",
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      }
                    }
                  },
                  "changedAtMs": {
                    "description": "Timestamp when the alarms were reported, in Unix milliseconds since epoch",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  }
                }
              }
            },
            "engineHours": {
              "description": "Engine hours of the reefer",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "engineHours": {
                    "description": "Engine hours of the reefer.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1200
                  }
                }
              }
            },
            "fuelPercentage": {
              "description": "Fuel percentage of the reefer",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "fuelPercentage": {
                    "description": "Fuel percentage of the reefer.",
                    "type": "integer",
                    "format": "int64",
                    "example": 99
                  }
                }
              }
            },
            "powerStatus": {
              "description": "Power status of the reefer",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "status": {
                    "description": "Power status of the reefer.",
                    "type": "string",
                    "example": "Active (Continuous)"
                  }
                }
              }
            },
            "returnAirTemp": {
              "description": "Return air temperature of the reefer",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "tempInMilliC": {
                    "description": "Return air temperature in millidegree Celsius.",
                    "type": "integer",
                    "format": "int64",
                    "example": 31110
                  }
                }
              }
            },
            "setPoint": {
              "description": "Set point temperature of the reefer",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "tempInMilliC": {
                    "description": "Set point temperature in millidegree Celsius.",
                    "type": "integer",
                    "format": "int64",
                    "example": 31110
                  }
                }
              }
            }
          }
        }
      }
    },
    "V1AssetsReefer": {
      "description": "Reefer-specific details",
      "type": "object",
      "properties": {
        "assetType": {
          "description": "Asset type",
          "type": "string",
          "example": "Thermo King"
        },
        "id": {
          "description": "Asset ID",
          "type": "integer",
          "example": 1
        },
        "name": {
          "description": "Asset name",
          "type": "string",
          "example": "Reefer 123"
        },
        "reeferStats": {
          "description": "Contains all the state changes of the reefer for the included stat types. Each state change is recorded independently, so the number of records in each array may differ depending on when that stat changed state. Stat types with a continuous value (such as temperature) will be recorded at different rates depending on the reefer, but generally readings have a frequency on the order of seconds.",
          "type": "object",
          "properties": {
            "ambientAirTemperature": {
              "description": "Ambient temperature of the reefer. This is the temperature of the air around the Samsara Asset Gateway.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "tempInMilliC": {
                    "description": "Ambient temperature in millidegree Celsius.",
                    "type": "integer",
                    "format": "int64",
                    "example": 31110
                  }
                }
              }
            },
            "dischargeAirTemperature": {
              "description": "Discharge air temperature of the reefer. This is the temperature of the air as it leaves the cooling unit.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "tempInMilliC": {
                    "description": "Discharge temperature in millidegree Celsius.",
                    "type": "integer",
                    "format": "int64",
                    "example": 31110
                  }
                }
              }
            },
            "engineHours": {
              "description": "Engine hours of the reefer",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "engineHours": {
                    "description": "Engine hours of the reefer.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1200
                  }
                }
              }
            },
            "fuelPercentage": {
              "description": "Fuel percentage of the reefer",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "fuelPercentage": {
                    "description": "Fuel percentage of the reefer.",
                    "type": "integer",
                    "format": "int64",
                    "example": 99
                  }
                }
              }
            },
            "powerStatus": {
              "description": "Power status of the reefer",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "status": {
                    "description": "Power status of the reefer.",
                    "type": "string",
                    "enum": [
                      "Off",
                      "Active",
                      "Active (Start/Stop)",
                      "Active (Continuous)"
                    ],
                    "example": "Active (Continuous)"
                  }
                }
              }
            },
            "reeferAlarms": {
              "description": "Reefer alarms",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alarms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "alarmCode": {
                          "description": "ID of the alarm",
                          "type": "integer",
                          "format": "int64",
                          "example": 102
                        },
                        "description": {
                          "description": "Description of the alarm",
                          "type": "string",
                          "example": "Check Return Air Sensor"
                        },
                        "operatorAction": {
                          "description": "Recommended operator action",
                          "type": "string",
                          "example": "Check and repair at end of trip"
                        },
                        "severity": {
                          "description": "Severity of the alarm: 1: OK to run, 2: Check as specified, 3: Take immediate action",
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        }
                      }
                    }
                  },
                  "changedAtMs": {
                    "description": "Timestamp when the alarms were reported, in Unix milliseconds since epoch",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  }
                }
              }
            },
            "returnAirTemperature": {
              "description": "Return air temperature of the reefer. This is the temperature read by the reefer module (Carrier, Thermo King) that shows the temperature of the air as it enters the system.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "tempInMilliC": {
                    "description": "Return air temperature in millidegree Celsius.",
                    "type": "integer",
                    "format": "int64",
                    "example": 31110
                  }
                }
              }
            },
            "setPoint": {
              "description": "Set point temperature of the reefer",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "changedAtMs": {
                    "description": "Timestamp in Unix milliseconds since epoch.",
                    "type": "integer",
                    "format": "int64",
                    "example": 1453449599999
                  },
                  "tempInMilliC": {
                    "description": "Set point temperature in millidegree Celsius.",
                    "type": "integer",
                    "format": "int64",
                    "example": 31110
                  }
                }
              }
            }
          }
        }
      }
    },
    "V1CargoResponse": {
      "description": "Contains the current cargo status of a sensor.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "Deprecated.",
          "type": "integer",
          "format": "int64",
          "example": 101
        },
        "sensors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cargoEmpty": {
                "description": "Flag indicating whether the current cargo is empty or loaded.",
                "type": "boolean",
                "example": true
              },
              "cargoStatusTime": {
                "description": "The timestamp of reported cargo status, specified in RFC 3339 time.",
                "type": "string",
                "example": "2019-04-17T16:42:55Z"
              },
              "id": {
                "description": "ID of the sensor.",
                "type": "integer",
                "format": "int64",
                "example": 122
              },
              "name": {
                "description": "Name of the sensor.",
                "type": "string",
                "example": "Trailer Cargo V1Sensor"
              },
              "trailerId": {
                "description": "ID of the trailer associated with the sensor for the data point. If no trailer is connected, this parameter will not be reported.",
                "type": "integer",
                "example": 123
              },
              "vehicleId": {
                "description": "ID of the vehicle associated with the sensor for the data point. If no vehicle is connected, this parameter will not be reported.",
                "type": "integer",
                "example": 124
              }
            }
          }
        }
      }
    },
    "V1DataInputHistoryResponse": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "description": "The ID of this data input",
          "type": "integer",
          "format": "int64",
          "example": 12345
        },
        "name": {
          "description": "Name of this data input",
          "type": "string",
          "example": "Pump Flow"
        },
        "points": {
          "description": "Data points from this data input",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "timeMs": {
                "type": "integer",
                "format": "int64",
                "example": 1453449599999
              },
              "value": {
                "type": "number",
                "format": "double",
                "example": 12.332
              }
            }
          }
        }
      }
    },
    "V1DispatchJob": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "id",
            "dispatch_route_id",
            "job_state"
          ],
          "properties": {
            "arrived_at_ms": {
              "description": "The time at which the driver arrived at the job destination.",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "completed_at_ms": {
              "description": "The time at which the job was marked complete (e.g. started driving to the next destination).",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "dispatch_route_id": {
              "description": "ID of the route that this job belongs to.",
              "type": "integer",
              "format": "int64",
              "example": 55
            },
            "documents": {
              "description": "Document submissions associated with this job.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1DispatchJobDocumentInfo"
              }
            },
            "driver_id": {
              "description": "ID of the driver assigned to the dispatch job.",
              "type": "integer",
              "format": "int64",
              "example": 444
            },
            "en_route_at_ms": {
              "description": "The time at which the assigned driver started fulfilling the job (e.g. started driving to the destination).",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "estimated_arrival_ms": {
              "description": "The time at which the assigned driver is estimated to arrive at the job destination. Only valid for en-route jobs.",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "fleet_viewer_url": {
              "description": "Fleet viewer url of the dispatch job.",
              "type": "string",
              "example": "https://cloud.samsara.com/fleet/viewer/job/fleet_viewer_token"
            },
            "group_id": {
              "description": "Deprecated.",
              "type": "integer",
              "format": "int64",
              "example": 101
            },
            "id": {
              "description": "ID of the Samsara dispatch job.",
              "type": "integer",
              "format": "int64",
              "example": 773
            },
            "job_state": {
              "$ref": "#/definitions/V1JobStatus"
            },
            "skipped_at_ms": {
              "description": "The time at which the job was marked skipped.",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "vehicle_id": {
              "description": "ID of the vehicle used for the dispatch job.",
              "type": "integer",
              "format": "int64",
              "example": 112
            }
          }
        },
        {
          "$ref": "#/definitions/V1DispatchJobCreate"
        }
      ]
    },
    "V1DispatchJobCreate": {
      "type": "object",
      "required": [
        "scheduled_arrival_time_ms"
      ],
      "properties": {
        "destination_address": {
          "description": "The address of the job destination, as it would be recognized if provided to maps.google.com. Optional if a valid destination address ID is provided.",
          "type": "string",
          "example": "123 Main St, Philadelphia, PA 19106"
        },
        "destination_address_id": {
          "description": "ID of the job destination associated with an address book entry. Optional if valid values are provided for destination address and latitude/longitude. If a valid destination address ID is provided, address/latitude/longitude will be used from the address book entry. Name of the address book entry will only be used if the destination name is not provided.",
          "type": "integer",
          "format": "int64",
          "example": 67890
        },
        "destination_lat": {
          "description": "Latitude of the destination in decimal degrees. Optional if a valid destination address ID is provided.",
          "type": "number",
          "format": "double",
          "example": 123.456
        },
        "destination_lng": {
          "description": "Longitude of the destination in decimal degrees. Optional if a valid destination address ID is provided.",
          "type": "number",
          "format": "double",
          "example": 37.459
        },
        "destination_name": {
          "description": "The name of the job destination. If provided, it will take precedence over the name of the address book entry.",
          "type": "string",
          "example": "ACME Inc. Philadelphia HQ"
        },
        "external_ids": {
          "$ref": "#/definitions/V1DispatchRouteJobExternalIds"
        },
        "notes": {
          "description": "Notes regarding the details of this job, maximum of 2000 characters; newline characters ('\\n')can be used for formatting.",
          "type": "string",
          "example": "Ensure crates are stacked no more than 3 high."
        },
        "scheduled_arrival_time_ms": {
          "description": "The time at which the assigned driver is scheduled to arrive at the job destination.",
          "type": "integer",
          "format": "int64",
          "example": 1462881998034
        },
        "scheduled_departure_time_ms": {
          "description": "The time at which the assigned driver is scheduled to depart from the job destination.",
          "type": "integer",
          "format": "int64",
          "example": 1462881998034
        }
      }
    },
    "V1DispatchJobDocumentInfo": {
      "type": "object",
      "required": [
        "driverId",
        "id"
      ],
      "properties": {
        "driverId": {
          "description": "ID of driver that submitted the document.",
          "type": "integer",
          "example": 1234
        },
        "id": {
          "description": "ID of document. This can be used to query for the document's info via the /v1/fleet/drivers/{driver_id}/documents/{document_id} endpoint",
          "type": "string",
          "example": "2018_42424242"
        }
      }
    },
    "V1DispatchJobWithoutETA": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "id",
            "dispatch_route_id",
            "job_state"
          ],
          "properties": {
            "arrived_at_ms": {
              "description": "The time at which the driver arrived at the job destination.",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "completed_at_ms": {
              "description": "The time at which the job was marked complete (e.g. started driving to the next destination).",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "dispatch_route_id": {
              "description": "ID of the route that this job belongs to.",
              "type": "integer",
              "format": "int64",
              "example": 55
            },
            "documents": {
              "description": "Document submissions associated with this job.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1DispatchJobDocumentInfo"
              }
            },
            "driver_id": {
              "description": "ID of the driver assigned to the dispatch job.",
              "type": "integer",
              "format": "int64",
              "example": 444
            },
            "en_route_at_ms": {
              "description": "The time at which the assigned driver started fulfilling the job (e.g. started driving to the destination).",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "fleet_viewer_url": {
              "description": "Fleet viewer url of the dispatch job.",
              "type": "string",
              "example": "https://cloud.samsara.com/fleet/viewer/job/fleet_viewer_token"
            },
            "group_id": {
              "description": "Deprecated.",
              "type": "integer",
              "format": "int64",
              "example": 101
            },
            "id": {
              "description": "ID of the Samsara dispatch job.",
              "type": "integer",
              "format": "int64",
              "example": 773
            },
            "job_state": {
              "$ref": "#/definitions/V1JobStatus"
            },
            "skipped_at_ms": {
              "description": "The time at which the job was marked skipped.",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "vehicle_id": {
              "description": "ID of the vehicle used for the dispatch job.",
              "type": "integer",
              "format": "int64",
              "example": 112
            }
          }
        },
        {
          "$ref": "#/definitions/V1DispatchJobCreate"
        }
      ]
    },
    "V1DispatchRoute": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "dispatch_jobs": {
              "description": "The dispatch jobs associated with this route.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1DispatchJob"
              }
            },
            "id": {
              "description": "ID of the Samsara dispatch route.",
              "type": "integer",
              "format": "int64",
              "example": 556
            }
          }
        },
        {
          "$ref": "#/definitions/V1DispatchRouteBase"
        }
      ]
    },
    "V1DispatchRouteBase": {
      "type": "object",
      "properties": {
        "actual_end_ms": {
          "description": "The time in Unix epoch milliseconds that the route actually ended.",
          "type": "integer",
          "format": "int64",
          "example": 1462882101000
        },
        "actual_start_ms": {
          "description": "The time in Unix epoch milliseconds that the route actually started.",
          "type": "integer",
          "format": "int64",
          "example": 1462882098000
        },
        "complete_last_stop_on_arrival": {
          "description": "When set to true (default), this causes the Route to complete on arrival at the final stop. When set to false, the last stop will capture arrival and departure separately as with other stops.",
          "type": "boolean",
          "default": true
        },
        "driver_id": {
          "description": "ID of the driver assigned to the dispatch route. Note that driver_id and vehicle_id are mutually exclusive. If neither is specified, then the route is unassigned.",
          "type": "integer",
          "format": "int64",
          "example": 555
        },
        "externalIds": {
          "$ref": "#/definitions/V1DispatchRouteExternalIds"
        },
        "group_id": {
          "description": "Deprecated.",
          "type": "integer",
          "format": "int64",
          "example": 101
        },
        "name": {
          "description": "Descriptive name of this route.",
          "type": "string",
          "example": "Bid #123"
        },
        "notes": {
          "description": "Notes regarding the details of this route; maximum of 2000 characters; newline characters ('\\n')can be used for formatting.",
          "type": "string",
          "example": "Please make sure to confirm crate count at each stop on this route.\nTotal number of crates for route: 23."
        },
        "odometer_end_meters": {
          "description": "Odometer reading at the end of the route. Will not be returned if Route is not completed or if Odometer information is not available for the relevant vehicle.",
          "type": "integer",
          "format": "int64",
          "example": 2000000
        },
        "odometer_start_meters": {
          "description": "Odometer reading at the start of the route. Will not be returned if Route has not started or if Odometer information is not available for the relevant vehicle.",
          "type": "integer",
          "format": "int64",
          "example": 1000000
        },
        "scheduled_end_ms": {
          "description": "The time in Unix epoch milliseconds that the last job in the route is scheduled to end.",
          "type": "integer",
          "format": "int64",
          "example": 1462881998034
        },
        "scheduled_meters": {
          "description": "The distance expected to be traveled for this route in meters.",
          "type": "integer",
          "format": "int64",
          "example": 10000
        },
        "scheduled_start_ms": {
          "description": "The time in Unix epoch milliseconds that the route is scheduled to start.",
          "type": "integer",
          "format": "int64",
          "example": 1462881998034
        },
        "start_location_address": {
          "description": "The address of the route's starting location, as it would be recognized if provided to maps.google.com. Optional if a valid start location address ID is provided.",
          "type": "string",
          "example": "123 Main St, Philadelphia, PA 19106"
        },
        "start_location_address_id": {
          "description": "ID of the start location associated with an address book entry. Optional if valid values are provided for start location address and latitude/longitude. If a valid start location address ID is provided, address/latitude/longitude will be used from the address book entry. Name of the address book entry will only be used if the start location name is not provided.",
          "type": "integer",
          "format": "int64",
          "example": 67890
        },
        "start_location_lat": {
          "description": "Latitude of the start location in decimal degrees. Optional if a valid start location address ID is provided.",
          "type": "number",
          "format": "double",
          "example": 123.456
        },
        "start_location_lng": {
          "description": "Longitude of the start location in decimal degrees. Optional if a valid start location address ID is provided.",
          "type": "number",
          "format": "double",
          "example": 37.459
        },
        "start_location_name": {
          "description": "The name of the route's starting location. If provided, it will take precedence over the name of the address book entry.",
          "type": "string",
          "example": "ACME Inc. Philadelphia HQ"
        },
        "trailer_id": {
          "description": "ID of the trailer assigned to the dispatch route. Note that trailers can only be assigned to routes that have a Vehicle or Driver assigned to them.",
          "type": "integer",
          "format": "int64",
          "example": 666
        },
        "vehicle_id": {
          "description": "ID of the vehicle assigned to the dispatch route. Note that vehicle_id and driver_id are mutually exclusive. If neither is specified, then the route is unassigned.",
          "type": "integer",
          "format": "int64",
          "example": 444
        }
      }
    },
    "V1DispatchRouteExternalIds": {
      "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
      "type": "object",
      "example": {
        "maintenanceId": "250020",
        "payrollId": "ABFS18600"
      }
    },
    "V1DispatchRouteHistoricalEntry": {
      "type": "object",
      "properties": {
        "changed_at_ms": {
          "description": "Timestamp that the route was updated, represented as Unix milliseconds since epoch.",
          "type": "integer",
          "format": "int64",
          "example": 1499411220000
        },
        "route": {
          "$ref": "#/definitions/V1DispatchRoute"
        }
      }
    },
    "V1DispatchRouteHistory": {
      "type": "object",
      "properties": {
        "history": {
          "description": "History of the route's state changes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1DispatchRouteHistoricalEntry"
          }
        }
      }
    },
    "V1DispatchRouteJobExternalIds": {
      "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
      "type": "object",
      "example": {
        "maintenanceId": "250020",
        "payrollId": "ABFS18600"
      }
    },
    "V1DispatchRouteWithoutETA": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "dispatch_jobs": {
              "description": "The dispatch jobs associated with this route.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1DispatchJobWithoutETA"
              }
            },
            "id": {
              "description": "ID of the Samsara dispatch route.",
              "type": "integer",
              "format": "int64",
              "example": 556
            }
          }
        },
        {
          "$ref": "#/definitions/V1DispatchRouteBase"
        }
      ]
    },
    "V1DispatchRoutes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/V1DispatchRouteWithoutETA"
      }
    },
    "V1Document": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "orgId",
            "driverId",
            "id",
            "driverCreatedAtMs",
            "serverCreatedAtMs",
            "serverUpdatedAtMs",
            "documentType",
            "vehicleId",
            "fields"
          ],
          "properties": {
            "conditionalFieldSections": {
              "$ref": "#/definitions/V1DocumentConditionalFields"
            },
            "documentType": {
              "description": "Name of the document type.",
              "type": "string",
              "example": "Accident Report"
            },
            "driverCreatedAtMs": {
              "description": "The time in Unix epoch milliseconds that the document was created in the driver app.",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "driverId": {
              "description": "ID of the driver for whom the document is submitted.",
              "type": "integer",
              "format": "int64",
              "example": 555
            },
            "fields": {
              "$ref": "#/definitions/V1DocumentFields"
            },
            "id": {
              "description": "ID of the document.",
              "type": "string",
              "example": "2018_42424242"
            },
            "orgId": {
              "description": "Organization ID that the document belongs to.",
              "type": "integer",
              "format": "int64",
              "example": 555
            },
            "serverCreatedAtMs": {
              "description": "The time in Unix epoch milliseconds that the document was received by the server.",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "serverUpdatedAtMs": {
              "description": "The time in Unix epoch milliseconds that the document was updated on the server.",
              "type": "integer",
              "format": "int64",
              "example": 1462881998034
            },
            "vehicleId": {
              "description": "ID of the vehicle the driver was signed into when the document was submitted. Will be `null` if the document `state` is `Required`.",
              "type": "integer",
              "format": "int64",
              "example": 222
            }
          }
        },
        {
          "$ref": "#/definitions/V1DocumentBase"
        }
      ]
    },
    "V1DocumentBase": {
      "type": "object",
      "required": [
        "dispatchJobId",
        "notes"
      ],
      "properties": {
        "dispatchJobId": {
          "description": "ID of the Samsara dispatch job for which the document is submitted.",
          "type": "integer",
          "format": "int64",
          "example": 773
        },
        "name": {
          "description": "Custom name of the document. If no custom name is given to the document, the admin dashboard and driver app will display the template name as the default document name.",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "example": "Fuel Receipt Wichita"
        },
        "notes": {
          "description": "Notes submitted with this document.",
          "type": "string",
          "example": "Fueled up before delivery."
        },
        "state": {
          "description": "The condition of the document created for the driver. Can be either `Required` or `Submitted`. If no value is specified, `state` defaults to `Required`. `Required` documents are pre-populated documents for the Driver to fill out in the Driver App and have not yet been submitted. `Submitted` documents have been submitted by the driver in the Driver App. `Archived` documents have been archived by the admin in the cloud dashboard.",
          "type": "string",
          "default": "Required",
          "enum": [
            "Required",
            "Submitted",
            "Archived"
          ],
          "example": "Submitted"
        }
      }
    },
    "V1DocumentConditionalFields": {
      "description": "An array of objects that describe a set of fields conditionally shown by a multiple choice value.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "conditionalFieldIndexFirst": {
            "description": "Start index of the conditional fields set",
            "type": "number"
          },
          "conditionalFieldIndexLast": {
            "description": "End index of the conditional fields set",
            "type": "number"
          },
          "triggeringFieldIndex": {
            "description": "Index of the multiple choice field that triggers the conditional fields",
            "type": "number"
          },
          "triggeringFieldValue": {
            "description": "Multiple choice value that triggers the conditional fields",
            "type": "string"
          }
        }
      },
      "example": [
        {
          "conditionalFieldFirstIndex": 1,
          "conditionalFieldLastIndex": 4,
          "triggeringFieldIndex": 0,
          "triggeringFieldValue": "Yes"
        }
      ]
    },
    "V1DocumentCreate": {
      "allOf": [
        {
          "description": "Arguments to create a document.",
          "type": "object",
          "required": [
            "documentTypeUuid",
            "fields"
          ],
          "properties": {
            "documentTypeUuid": {
              "description": "Universally unique identifier for the document type that this document is being created for.",
              "type": "string",
              "example": "4aff772c-a7bb-45e6-8e41-6a53e34feb83"
            },
            "fields": {
              "$ref": "#/definitions/V1DocumentCreateFields"
            }
          }
        },
        {
          "$ref": "#/definitions/V1DocumentCreateBase"
        }
      ]
    },
    "V1DocumentCreateBase": {
      "type": "object",
      "properties": {
        "dispatchJobId": {
          "description": "ID of the Samsara dispatch job for which the document is submitted.",
          "type": "integer",
          "format": "int64",
          "example": 773
        },
        "name": {
          "description": "Custom name of the document. If no custom name is given to the document, the admin dashboard and driver app will display the template name as the default document name.",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "example": "Fuel Receipt Wichita"
        },
        "notes": {
          "description": "Notes submitted with this document.",
          "type": "string",
          "example": "Fueled up before delivery."
        },
        "state": {
          "description": "The condition of the document created for the driver. Can be either `Required` or `Submitted`. If no value is specified, `state` defaults to `Required`. `Required` documents are pre-populated documents for the Driver to fill out in the Driver App and have not yet been submitted. `Submitted` documents will show up as submitted by the driver through the driver app.",
          "type": "string",
          "default": "Required",
          "enum": [
            "Required",
            "Submitted"
          ],
          "example": "Required"
        }
      }
    },
    "V1DocumentCreateFields": {
      "description": "List of fields for the document. The fields must be listed in the order that that they appear in the document type. Values of fields can be set to null or omitted if the document state is set to \"Required\".",
      "type": "array",
      "items": {
        "description": "Field item parameters.",
        "type": "object",
        "required": [
          "label",
          "valueType"
        ],
        "properties": {
          "dateTimeValue": {
            "description": "The date time value to populate the field. Use with ValueType_DateTime. Cannot be ommited or set to null",
            "type": "object",
            "properties": {
              "dateTimeMs": {
                "type": "number"
              }
            }
          },
          "label": {
            "description": "label of the field",
            "type": "string"
          },
          "multipleChoiceValue": {
            "description": "The multiple choice value to populate the field. Use with ValueType_MultipleChoice. Cannot be ommited or set to null",
            "type": "array",
            "items": {
              "description": "An option item for a multiple choice field",
              "type": "object",
              "properties": {
                "selected": {
                  "type": "boolean"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "numberValue": {
            "description": "The number value to populate the field. Use with ValueType_Number. Can be ommited or set to null",
            "type": "number"
          },
          "stringValue": {
            "description": "The string value to populate the field. Use with ValueType_String. Can be ommited or set to null",
            "type": "string"
          },
          "value": {
            "description": "DEPRECATED. Please use one of the type-specific parameters."
          },
          "valueType": {
            "description": "The valueType of the field. Use with the corresponding {type of field}Value attribute. Signature and photo fields do not support values added via API. Their values must be omitted or set to null. For example:\n\n```\n\n\"fields\": [\n\n  {\n\n    \"label\": \"Signature\",\n\n    \"valueType\": \"ValueType_Signature\"\n\n  },\n\n  ... more fields\n\n]\n\n```",
            "type": "string"
          }
        }
      },
      "example": [
        {
          "label": "Example number field label",
          "numberValue": 999,
          "valueType": "ValueType_Number"
        },
        {
          "label": "text",
          "stringValue": "example string",
          "valueType": "ValueType_String"
        },
        {
          "label": "Example multi choice label",
          "multipleChoiceValue": [
            {
              "selected": false,
              "value": "option 1"
            },
            {
              "selected": true,
              "value": "option 2"
            }
          ],
          "valueType": "ValueType_MultipleChoice"
        },
        {
          "dateTimeValue": {
            "dateTimeMs": 10855639004823
          },
          "label": "Example date time label",
          "valueType": "ValueType_DateTime"
        },
        {
          "label": "Example photo label",
          "valueType": "ValueType_Photo"
        },
        {
          "label": "Example signature label",
          "valueType": "ValueType_Signature"
        }
      ]
    },
    "V1DocumentFieldType": {
      "type": "object",
      "required": [
        "label",
        "valueType"
      ],
      "properties": {
        "label": {
          "description": "Name of this field type.",
          "type": "string",
          "example": "Fuel Cost ($)"
        },
        "multipleChoiceValueTypeMetadata": {
          "description": "Metadata about the multiple choice field. Only present for value type `ValueType_MultipleChoice`",
          "type": "object",
          "properties": {
            "multipleChoiceOptionLabels": {
              "description": "Array of the multiple choice option labels for the field",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "example": "option 1"
                  }
                }
              }
            }
          }
        },
        "numberValueTypeMetadata": {
          "description": "Metadata about the number field. Only present for value type `ValueType_Number`",
          "type": "object",
          "properties": {
            "numDecimalPlaces": {
              "description": "The number of decimal places allowed for this number field",
              "type": "number",
              "format": "int64",
              "example": 2
            }
          }
        },
        "signatureValueTypeMetadata": {
          "description": "Metadata about the signature field. Only present for value type `ValueType_Signature`",
          "type": "object",
          "properties": {
            "legalText": {
              "description": "Legal text displayed alongside signature",
              "type": "string",
              "example": "I consent on behalf of myself and my employer to using electronic signatures in this transaction. I understand that I can request a copy of the signed documentation from the party requesting my signature."
            }
          }
        },
        "valueType": {
          "description": "The type of value this field can have.\nValid values: `ValueType_Number`, `ValueType_String`, `ValueType_Photo`, `ValueType_MultipleChoice`, `ValueType_Signature`, `ValueType_DateTime`.",
          "type": "string",
          "example": "ValueType_Number"
        }
      }
    },
    "V1DocumentFields": {
      "description": "An array of field objects associated with a document.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "barcodeValue": {
            "description": "The value of a barcode scanning field. Only present for barcode scanning fields",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "barcodeType": {
                  "description": "The barcode type that was scanned",
                  "type": "string"
                },
                "barcodeValue": {
                  "description": "The captured barcode value",
                  "type": "string"
                }
              }
            }
          },
          "dateTimeValue": {
            "description": "The value of a date time field. Only present for date time fields.",
            "type": "object",
            "properties": {
              "dateTimeMs": {
                "description": "Date time value in milliseconds.",
                "type": "number"
              }
            }
          },
          "label": {
            "description": "The name of a field.",
            "type": "string"
          },
          "multipleChoiceValue": {
            "description": "The value of a multiple choice field. Only present for multiple choice fields.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "selected": {
                  "description": "Boolean representing if the choice has been selected.",
                  "type": "boolean"
                },
                "value": {
                  "description": "Description of the choice.",
                  "type": "string"
                }
              }
            }
          },
          "numberValue": {
            "description": "The value of a number field. Only present for number fields.",
            "type": "number",
            "format": "float"
          },
          "photoValue": {
            "description": "The value of a photo or document scanning field. Only present for photo or document scanning fields.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "description": "Url of the photo.",
                  "type": "string"
                },
                "uuid": {
                  "description": "Uuid of the photo.",
                  "type": "string"
                }
              }
            }
          },
          "signatureValue": {
            "description": "The value of a signature field. Only present for signature fields.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the signee for a signature field",
                "type": "string"
              },
              "signedAtMs": {
                "description": "Date time value in milliseconds of the time a signature was captured.",
                "type": "number"
              },
              "url": {
                "description": "Url of a signature field's PNG signature image.",
                "type": "string"
              },
              "uuid": {
                "description": "Uuid of a signature field",
                "type": "string"
              }
            }
          },
          "stringValue": {
            "description": "The value of a string field. Only present for string fields.",
            "type": "string"
          },
          "value": {
            "description": "The value of a field. Type varies by field type."
          },
          "valueType": {
            "description": "The value type of a field.",
            "type": "string"
          }
        }
      },
      "example": [
        {
          "label": "Was there an accident?",
          "multipleChoiceValue": [
            {
              "selected": false,
              "value": "Yes"
            },
            {
              "selected": true,
              "value": "No"
            }
          ],
          "value": [
            {
              "selected": false,
              "value": "Yes"
            },
            {
              "selected": true,
              "value": "No"
            }
          ],
          "valueType": "ValueType_MultipleChoice"
        },
        {
          "label": "Number of cars involved",
          "numberValue": 123,
          "value": 123,
          "valueType": "ValueType_Number"
        },
        {
          "label": "Description of Accident",
          "stringValue": "Example text value",
          "value": "Example text value",
          "valueType": "ValueType_String"
        },
        {
          "label": "Images of the damaged cars",
          "photoValue": [
            {
              "url": "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
            }
          ],
          "value": [
            {
              "url": "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456",
              "uuid": "f5271458-21f9-4a9f-a290-780c6d8840ff"
            }
          ],
          "valueType": "ValueType_Photo"
        },
        {
          "barcodeValue": [
            {
              "barcodeType": "org.gs1.EAN-13",
              "barcodeValue": "0853883003114"
            },
            {
              "barcodeType": "org.gs1.EAN-13",
              "barcodeValue": "0036000318036"
            }
          ],
          "label": "Accident Ticket Barcode",
          "value": [
            {
              "barcodeType": "org.gs1.EAN-13",
              "barcodeValue": "0853883003114"
            },
            {
              "barcodeType": "org.gs1.EAN-13",
              "barcodeValue": "0036000318036"
            }
          ],
          "valueType": "ValueType_Barcode"
        },
        {
          "dateTimeValue": {
            "dateTimeMs": 1596681182972
          },
          "label": "Today's Date",
          "value": {
            "dateTimeMs": 1596681182972
          },
          "valueType": "ValueType_DateTime"
        },
        {
          "label": "Sign Signature",
          "signatureValue": {
            "name": "John Smith",
            "signedAtMs": 1596681191327,
            "url": "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
          },
          "value": {
            "name": "John Smith",
            "signedAtMs": 1596681191327,
            "url": "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456",
            "uuid": "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7"
          },
          "valueType": "ValueType_Signature"
        }
      ]
    },
    "V1DocumentType": {
      "type": "object",
      "required": [
        "orgId",
        "uuid",
        "fieldTypes"
      ],
      "properties": {
        "fieldTypes": {
          "description": "The fields associated with this document type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1DocumentFieldType"
          }
        },
        "name": {
          "description": "Name of the document type.",
          "type": "string",
          "example": "Fuel Receipt"
        },
        "orgId": {
          "description": "ID for the organization this document belongs to.",
          "type": "integer",
          "format": "int64",
          "example": 773
        },
        "uuid": {
          "description": "Universally unique identifier for the document type. Can be passed in as the `documentTypeUuid` when creating a document for this document type.",
          "type": "string",
          "example": "4aff772c-a7bb-45e6-8e41-6a53e34feb83"
        }
      }
    },
    "V1DocumentTypes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/V1DocumentType"
      }
    },
    "V1Documents": {
      "description": "List of documents.",
      "type": "object",
      "properties": {
        "driverDocuments": {
          "description": "List of documents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1Document"
          }
        }
      }
    },
    "V1DoorResponse": {
      "description": "Contains the current door status of a sensor.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "Deprecated.",
          "type": "integer",
          "format": "int64",
          "example": 101
        },
        "sensors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "doorClosed": {
                "description": "Flag indicating whether the current door is closed or open.",
                "type": "boolean",
                "example": true
              },
              "doorStatusTime": {
                "description": "The timestamp of reported door status, specified in RFC 3339 time.",
                "type": "string",
                "example": "2019-04-17T16:42:55Z"
              },
              "id": {
                "description": "ID of the sensor.",
                "type": "integer",
                "format": "int64",
                "example": 122
              },
              "name": {
                "description": "Name of the sensor.",
                "type": "string",
                "example": "Trailer Door V1Sensor"
              },
              "trailerId": {
                "description": "ID of the trailer associated with the sensor for the data point. If no trailer is connected, this parameter will not be reported.",
                "type": "integer",
                "example": 123
              },
              "vehicleId": {
                "description": "ID of the vehicle associated with the sensor for the data point. If no vehicle is connected, this parameter will not be reported.",
                "type": "integer",
                "example": 124
              }
            }
          }
        }
      }
    },
    "V1DriverDailyLogResponse": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "activeHours": {
                "description": "Hours spent on duty or driving, rounded to two decimal places.",
                "type": "number",
                "format": "double",
                "example": 5.4
              },
              "activeMs": {
                "description": "Milliseconds spent on duty or driving.",
                "type": "integer",
                "format": "int64",
                "example": 691200
              },
              "certified": {
                "description": "Whether this HOS day chart was certified by the driver.",
                "type": "boolean"
              },
              "certifiedAtMs": {
                "description": "Unix epoch time (in ms) of time when this chart was certified. If this chart is uncertified, 0.",
                "type": "number",
                "format": "int64"
              },
              "distanceMiles": {
                "description": "Distance driven in miles, rounded to two decimal places.",
                "type": "number",
                "format": "double",
                "example": 123.24
              },
              "endMs": {
                "description": "End of the HOS day, specified in milliseconds UNIX time.",
                "type": "integer",
                "example": 1473836400000
              },
              "shippingDocIds": {
                "description": "List of customer shipping document IDs associated with the driver for the day.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "14334",
                  "Shipping Document ID 1"
                ]
              },
              "startMs": {
                "description": "Start of the HOS day, specified in milliseconds UNIX time.",
                "type": "integer",
                "example": 1473750000000
              },
              "trailerIds": {
                "description": "List of trailer ID's associated with the driver for the day.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "10293",
                  "Trailer ID 1"
                ]
              },
              "vehicleIds": {
                "description": "List of vehicle ID's associated with the driver for the day.",
                "type": "object",
                "format": "int64",
                "example": [
                  192319,
                  12958
                ]
              }
            }
          }
        }
      }
    },
    "V1DriverSafetyScoreResponse": {
      "description": "Safety score details for a driver",
      "type": "object",
      "properties": {
        "crashCount": {
          "description": "Crash event count",
          "type": "integer",
          "example": 0
        },
        "driverId": {
          "description": "Driver ID",
          "type": "integer",
          "example": 1234
        },
        "harshAccelCount": {
          "description": "Harsh acceleration event count",
          "type": "integer",
          "example": 1
        },
        "harshBrakingCount": {
          "description": "Harsh braking event count",
          "type": "integer",
          "example": 2
        },
        "harshEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1SafetyReportHarshEvent"
          }
        },
        "harshTurningCount": {
          "description": "Harsh turning event count",
          "type": "integer",
          "example": 0
        },
        "safetyScore": {
          "description": "Safety Score",
          "type": "integer",
          "example": 97
        },
        "safetyScoreRank": {
          "description": "Safety Score Rank",
          "type": "string",
          "example": "26"
        },
        "timeOverSpeedLimitMs": {
          "description": "Amount of time driven over the speed limit in milliseconds",
          "type": "integer",
          "example": 3769
        },
        "totalDistanceDrivenMeters": {
          "description": "Total distance driven in meters",
          "type": "integer",
          "example": 291836
        },
        "totalHarshEventCount": {
          "description": "Total harsh event count",
          "type": "integer",
          "example": 3
        },
        "totalTimeDrivenMs": {
          "description": "Amount of time driven in milliseconds",
          "type": "integer",
          "example": 19708293
        }
      }
    },
    "V1DvirBase": {
      "type": "object",
      "properties": {
        "authorSignature": {
          "description": "The authors signature for the DVIR.",
          "type": "object",
          "properties": {
            "driverId": {
              "description": "ID of the driver who signed the DVIR. Will not be returned if mechanicUserId is returned.",
              "type": "integer",
              "format": "int64",
              "example": 2581
            },
            "email": {
              "description": "Email of the  driver|mechanic who signed the DVIR.",
              "type": "string",
              "example": "j.smith@yahoo.com"
            },
            "mechanicUserId": {
              "description": "ID of the mechanic who signed the DVIR. Will not be returned if driverId is returned.",
              "type": "integer",
              "format": "int64",
              "example": 14849
            },
            "name": {
              "description": "The name of the driver or mechanic who signed the DVIR.",
              "type": "string",
              "example": "John Smith"
            },
            "signedAt": {
              "description": "The time in millis when the DVIR was signed",
              "type": "integer",
              "format": "int64",
              "example": 12535500000
            },
            "type": {
              "description": "Type corresponds to whether the signature corresponds to driver|mechanic.",
              "type": "string",
              "example": "driver"
            },
            "username": {
              "description": "Username of the  driver|mechanic who signed the DVIR.",
              "type": "string",
              "example": "jsmith"
            }
          }
        },
        "defectsCorrected": {
          "description": "Signifies if the defects on the vehicle corrected after the DVIR is done.",
          "type": "boolean",
          "example": true
        },
        "defectsNeedNotBeCorrected": {
          "description": "Signifies if the defects on this vehicle can be ignored.",
          "type": "boolean",
          "example": false
        },
        "id": {
          "description": "The id of this DVIR record.",
          "type": "integer",
          "format": "int64",
          "example": 19
        },
        "inspectionType": {
          "description": "Inspection type of the DVIR.",
          "type": "string",
          "example": "pre trip"
        },
        "mechanicNotes": {
          "description": "The mechanics notes on the DVIR.",
          "type": "string",
          "example": "The vehicle is now safe."
        },
        "mechanicOrAgentSignature": {
          "description": "The mechanic's or agent's signature for the DVIR.",
          "type": "object",
          "properties": {
            "driverId": {
              "description": "ID of the driver who signed the DVIR. Will not be returned if mechanicUserId is returned.",
              "type": "integer",
              "format": "int64",
              "example": 2581
            },
            "email": {
              "description": "Email of the  agent|mechanic who signed the DVIR.",
              "type": "string",
              "example": "j.smith@yahoo.com"
            },
            "mechanicUserId": {
              "description": "ID of the mechanic who signed the DVIR. Will not be returned if driverId is returned.",
              "type": "integer",
              "format": "int64",
              "example": 14849
            },
            "name": {
              "description": "The name of the agent or mechanic who signed the DVIR.",
              "type": "string",
              "example": "John Smith"
            },
            "signedAt": {
              "description": "The time in millis when the DVIR was signed",
              "type": "integer",
              "format": "int64",
              "example": 12535500000
            },
            "type": {
              "description": "Type corresponds to whether the signature corresponds to driver|mechanic.",
              "type": "string",
              "example": "driver"
            },
            "username": {
              "description": "Username of the  agent|mechanic who signed the DVIR.",
              "type": "string",
              "example": "jsmith"
            }
          }
        },
        "nextDriverSignature": {
          "description": "The next driver signature for the DVIR.",
          "type": "object",
          "properties": {
            "driverId": {
              "description": "ID of the driver who signed the DVIR",
              "type": "integer",
              "format": "int64",
              "example": 2581
            },
            "email": {
              "description": "Email of the  driver who signed the next DVIR on this vehicle.",
              "type": "string",
              "example": "j.smith@yahoo.com"
            },
            "name": {
              "description": "The name of the driver who signed the next DVIR on this vehicle.",
              "type": "string",
              "example": "John Smith"
            },
            "signedAt": {
              "description": "The time in millis when the next driver signed the DVIR on this vehicle.",
              "type": "integer",
              "format": "int64",
              "example": 12535500000
            },
            "type": {
              "description": "Type corresponds to driver.",
              "type": "string",
              "example": "driver"
            },
            "username": {
              "description": "Username of the  driver who signed the next DVIR on this vehicle.",
              "type": "string",
              "example": "jsmith"
            }
          }
        },
        "odometerMiles": {
          "description": "The odometer reading in miles for the vehicle when the DVIR was done.",
          "type": "integer",
          "format": "int64",
          "example": 49912
        },
        "startedAtMs": {
          "description": "Timestamp when driver began filling out this DVIR, in UNIX milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 1453449599999
        },
        "timeMs": {
          "description": "Timestamp of when this DVIR was signed \u0026 completed, in UNIX milliseconds.",
          "type": "integer",
          "format": "int64",
          "example": 1453449599999
        },
        "trailerDefects": {
          "description": "Defects registered for the trailer which was part of the DVIR.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1DvirDefectBase"
          }
        },
        "trailerId": {
          "description": "The id of the trailer which was part of the DVIR.",
          "type": "integer",
          "example": 19
        },
        "trailerName": {
          "description": "The name of the trailer which was part of the DVIR.",
          "type": "string",
          "example": "Storer's Trailer 19"
        },
        "vehicle": {
          "description": "The vehicle on which DVIR was done.",
          "type": "object",
          "properties": {
            "id": {
              "description": "The vehicle id on which DVIR was done.",
              "type": "integer",
              "format": "int64",
              "example": 19
            },
            "name": {
              "description": "The vehicle on which DVIR was done.",
              "type": "string",
              "example": "Storer's vehicle 19"
            }
          }
        },
        "vehicleCondition": {
          "description": "The condition of vechile on which DVIR was done.",
          "type": "string",
          "example": "SATISFACTORY"
        },
        "vehicleDefects": {
          "description": "Defects registered for the vehicle which was part of the DVIR.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1DvirDefectBase"
          }
        }
      }
    },
    "V1DvirDefectBase": {
      "type": "object",
      "properties": {
        "comment": {
          "description": "The comment describing the type of DVIR defect.",
          "type": "string",
          "example": "Air Compressor not working"
        },
        "defectType": {
          "description": "The type of DVIR defect. Possible values: [`AIR_COMPRESSOR`, `AIR_CONDITIONER`, `AIR_LINES`, `BATTERY`, `BELTS_HOSES`, `BRAKE_ACCESSORIES`, `BRAKE_CHECK`, `BRAKE_CONNECTIONS`, `BRAKES`, `CLUTCH`, `COUPLING_DEVICES`, `DEFROSTER_HEATER`, `DOORS`, `DRIVE_LINE`, `EMERGENCY_DOOR_AND_BUZZER`, `ENGINE`, `ENTRANCE_STEPS`, `EXHAUST`, `FIFTH_WHEEL`, `FIRST_AID_KIT`, `FLUID_LEVELS`, `FRAME_ASSEMBLY`, `FRONT_AXLE`, `FUEL_TANKS`, `HORN`, `INTERIOR_AND_FLOOR`, `LANDING_GEAR`, `LIGHTS`, `MIRRORS`, `MUFFLER`, `OIL_PRESSURE`, `OTHER`, `RADIATOR`, `REAR_END`, `REFLECTORS`, `ROOF`, `SAFETY_EQUIPMENT`, `STARTER`, `STEERING`, `STOP_ARM_CONTROL`, `STOP_ARM`, `SUSPENSION`, `TIRE_CHAINS`, `TIRES`, `TRANSMISSION`, `TRIP_RECORDER`, `WHEELS_RIMS`, `WINDOWS`, `WINDSHIELD_WIPERS`, `UNSET`]",
          "type": "string",
          "example": "AIR_COMPRESSOR"
        },
        "id": {
          "description": "The id of this defect.",
          "type": "integer",
          "format": "int64",
          "example": 18
        },
        "resolved": {
          "description": "Signifies if this defect is resolved.",
          "type": "boolean",
          "example": true
        },
        "resolvedAt": {
          "description": "Timestamp when this defect was resolved, in UNIX milliseconds.  Will not be returned if the defect is unresolved.",
          "type": "integer",
          "format": "int64",
          "example": 1453449599999
        },
        "resolvedByDriverId": {
          "description": "ID of the driver who resolved this defect. Will not be returned if the defect is unresolved or resolvedByMechanicId is returned.",
          "type": "integer",
          "format": "int64",
          "example": 2581
        },
        "resolvedByMechanicId": {
          "description": "ID of the mechanic who resolved this defect. Will not be returned if the defect is unresolved or resolvedByDriverId is returned.",
          "type": "integer",
          "format": "int64",
          "example": 14849
        }
      }
    },
    "V1DvirListResponse": {
      "type": "object",
      "properties": {
        "dvirs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1DvirBase"
          }
        }
      }
    },
    "V1ErrorResponse": {
      "description": "Error message describing why the request failed.",
      "type": "string"
    },
    "V1FleetVehicleLocation": {
      "description": "Contains the location and speed of a vehicle at a particular time",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "The latitude of the location in degrees.",
          "type": "number",
          "format": "double",
          "example": 37.2
        },
        "location": {
          "description": "The best effort (street,city,state) for the latitude and longitude.",
          "type": "string",
          "example": "525 York, San Francisco, CA"
        },
        "longitude": {
          "description": "The longitude of the location in degrees.",
          "type": "number",
          "format": "double",
          "example": -122.5
        },
        "speedMilesPerHour": {
          "description": "The speed calculated from GPS that the asset was traveling at in miles per hour.",
          "type": "number",
          "format": "double",
          "example": 35.2
        },
        "timeMs": {
          "description": "Time in Unix milliseconds since epoch when the asset was at the location.",
          "type": "number",
          "format": "int64",
          "example": 1535586471332
        }
      }
    },
    "V1FleetVehicleLocations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/V1FleetVehicleLocation"
      }
    },
    "V1FleetVehiclesLocations": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the vehicle.",
            "type": "integer",
            "format": "int64",
            "example": 112
          },
          "locations": {
            "$ref": "#/definitions/V1FleetVehicleLocations"
          },
          "name": {
            "description": "Name of the vehicle.",
            "type": "string",
            "example": "Truck A7"
          }
        }
      }
    },
    "V1HosAuthenticationLogsResponse": {
      "type": "object",
      "properties": {
        "authenticationLogs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "actionType": {
                "description": "The log type - one of 'signin' or 'signout'",
                "type": "string",
                "example": "signin"
              },
              "address": {
                "description": "DEPRECATED: THIS FIELD MAY NOT BE POPULATED",
                "type": "string",
                "example": "THIS FIELD MAY NOT BE POPULATED"
              },
              "addressName": {
                "description": "DEPRECATED: THIS FIELD MAY NOT BE POPULATED",
                "type": "string",
                "example": "THIS FIELD MAY NOT BE POPULATED"
              },
              "city": {
                "description": "DEPRECATED: THIS FIELD MAY NOT BE POPULATED",
                "type": "string",
                "example": "THIS FIELD MAY NOT BE POPULATED"
              },
              "happenedAtMs": {
                "description": "The time at which the event was recorded in UNIX milliseconds.",
                "type": "integer",
                "format": "int64",
                "example": 1462881998034
              },
              "state": {
                "description": "DEPRECATED: THIS FIELD MAY NOT BE POPULATED",
                "type": "string",
                "example": "THIS FIELD MAY NOT BE POPULATED"
              }
            }
          }
        }
      }
    },
    "V1HosLogsResponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "codriverIds": {
                "type": "array",
                "items": {
                  "description": "Ids of codrivers during any of the logged trips",
                  "type": "number",
                  "example": 445
                }
              },
              "driverId": {
                "description": "ID of the driver.",
                "type": "integer",
                "format": "int64",
                "example": 444
              },
              "groupId": {
                "description": "Deprecated.",
                "type": "integer",
                "format": "int64",
                "example": 101
              },
              "hosStatusType": {
                "description": "The Hours of Service status type. One of `OFF_DUTY`, `SLEEPER_BED`, `DRIVING`, `ON_DUTY`, `YARD_MOVE`, `PERSONAL_CONVEYANCE`.",
                "type": "string",
                "example": "OFF_DUTY"
              },
              "locCity": {
                "description": "City in which the log was recorded.",
                "type": "string",
                "example": "Ahwatukee"
              },
              "locLat": {
                "description": "Latitude at which the log was recorded.",
                "type": "number",
                "format": "float",
                "example": 23.413702345
              },
              "locLng": {
                "description": "Longitude at which the log was recorded.",
                "type": "number",
                "format": "float",
                "example": -98.502888123
              },
              "locName": {
                "description": "Name of location at which the log was recorded.",
                "type": "string",
                "example": "McLean Site A"
              },
              "locState": {
                "description": "State in which the log was recorded.",
                "type": "string",
                "example": "Arizona"
              },
              "logStartMs": {
                "description": "The time at which the log/HOS status started in UNIX milliseconds.",
                "type": "integer",
                "format": "int64",
                "example": 1462881998034
              },
              "remark": {
                "description": "Remark associated with the log entry.",
                "type": "string",
                "example": "Lunch Break"
              },
              "vehicleId": {
                "description": "ID of the vehicle.",
                "type": "integer",
                "format": "int64",
                "example": 112
              }
            }
          }
        }
      }
    },
    "V1HumidityResponse": {
      "description": "Contains the current humidity of a sensor.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "Deprecated.",
          "type": "integer",
          "format": "int64",
          "example": 101
        },
        "sensors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "humidity": {
                "description": "Currently reported relative humidity in percent, from 0-100.",
                "type": "integer",
                "example": 53
              },
              "humidityTime": {
                "description": "The timestamp of reported relative humidity, specified in RFC 3339 time.",
                "type": "string",
                "example": "2019-04-17T16:42:55Z"
              },
              "id": {
                "description": "ID of the sensor.",
                "type": "integer",
                "format": "int64",
                "example": 122
              },
              "name": {
                "description": "Name of the sensor.",
                "type": "string",
                "example": "Freezer Humidity V1Sensor"
              },
              "trailerId": {
                "description": "ID of the trailer associated with the sensor for the data point. If no trailer is connected, this parameter will not be reported.",
                "type": "integer",
                "example": 123
              },
              "vehicleId": {
                "description": "ID of the vehicle associated with the sensor for the data point. If no vehicle is connected, this parameter will not be reported.",
                "type": "integer",
                "example": 124
              }
            }
          }
        }
      }
    },
    "V1JobStatus": {
      "description": "The state of the dispatch job.",
      "type": "string",
      "enum": [
        "JobState_Unassigned",
        "JobState_Scheduled",
        "JobState_EnRoute",
        "JobState_Arrived",
        "JobState_Completed",
        "JobState_Skipped"
      ],
      "example": "JobState_Arrived"
    },
    "V1Machine": {
      "description": "Contains information about a machine.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "ID of the machine.",
          "type": "integer",
          "format": "int64",
          "example": 123
        },
        "name": {
          "description": "Name of the machine.",
          "type": "string",
          "example": "Freezer ABC"
        },
        "notes": {
          "description": "Notes about the machine",
          "type": "string",
          "example": "This is in the left hallway behind the conveyor belt"
        }
      }
    },
    "V1MachineHistoryResponse": {
      "description": "Contains the results for a machine history request",
      "type": "object",
      "properties": {
        "machines": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Machine ID",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Machine name",
                "type": "string",
                "example": "1/3 HP Motor"
              },
              "vibrations": {
                "description": "List of vibration datapoints, with timestamp and vibration measurement for x/y/z axis in mm/s",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "X": {
                      "type": "number",
                      "format": "double",
                      "example": 0.01
                    },
                    "Y": {
                      "type": "number",
                      "format": "double",
                      "example": 1.23
                    },
                    "Z": {
                      "type": "number",
                      "format": "double",
                      "example": 2.55
                    },
                    "time": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1453449599999
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "V1Message": {
      "type": "object",
      "required": [
        "driverId",
        "text"
      ],
      "properties": {
        "driverId": {
          "description": "ID of the driver for whom the message is sent to or sent by.",
          "type": "integer",
          "format": "int64",
          "example": 555
        },
        "text": {
          "description": "The text sent in the message.",
          "type": "string",
          "example": "This is a message."
        }
      }
    },
    "V1MessageResponse": {
      "type": "object",
      "required": [
        "driverId",
        "text",
        "sentAtMs",
        "sender",
        "isRead"
      ],
      "properties": {
        "driverId": {
          "description": "ID of the driver for whom the message is sent to or sent by.",
          "type": "integer",
          "format": "int64",
          "example": 555
        },
        "isRead": {
          "description": "True if the message was read by the recipient.",
          "type": "boolean",
          "example": true
        },
        "sender": {
          "$ref": "#/definitions/V1MessageSender"
        },
        "sentAtMs": {
          "description": "The time in Unix epoch milliseconds that the message is sent to the recipient.",
          "type": "integer",
          "format": "int64",
          "example": 1462881998034
        },
        "text": {
          "description": "The text sent in the message.",
          "type": "string",
          "example": "This is a message."
        }
      }
    },
    "V1MessageSender": {
      "type": "object",
      "required": [
        "type",
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name of user that is sending the message.",
          "type": "string",
          "example": "John Doe"
        },
        "type": {
          "description": "Type of user that is sending the message. It will be either dispatch or driver.",
          "type": "string",
          "example": "dispatch"
        }
      }
    },
    "V1Messages": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/V1Message"
      }
    },
    "V1MessagesResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/V1MessageResponse"
      }
    },
    "V1Pagination": {
      "type": "object",
      "required": [
        "hasNextPage",
        "hasPrevPage",
        "startCursor",
        "endCursor"
      ],
      "properties": {
        "endCursor": {
          "description": "Cursor identifier representing the last element in the response. This value should be used in conjunction with a subsequent request's 'startingAfter' query parameter.",
          "type": "string",
          "example": "MTU5MTEzNjA2OTU0MzQ3"
        },
        "hasNextPage": {
          "description": "True if there are more pages of results after this response.",
          "type": "boolean"
        },
        "hasPrevPage": {
          "description": "True if there are more pages of results before this response.",
          "type": "boolean"
        },
        "startCursor": {
          "description": "Cursor identifier representing the first element in the response. This value should be used in conjunction with a subsequent request's 'ending_before' query parameter.",
          "type": "string",
          "example": "MTU5MTEzNjA2OTU0MzQ3"
        }
      }
    },
    "V1ProgramsForTheCameraResponse": {
      "description": "Contains the list of Programs configured on the given Camera.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "programId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "programName": {
            "type": "string",
            "example": "Barcode verification program"
          }
        }
      }
    },
    "V1SafetyReportHarshEvent": {
      "description": "List of harsh events",
      "type": "object",
      "properties": {
        "harshEventType": {
          "description": "Type of the harsh event",
          "type": "string",
          "example": "Harsh Braking"
        },
        "timestampMs": {
          "description": "Timestamp that the harsh event occurred in Unix milliseconds since epoch",
          "type": "integer",
          "example": 1535590776000
        },
        "vehicleId": {
          "description": "Vehicle associated with the harsh event",
          "type": "integer",
          "example": 212014918086169
        }
      }
    },
    "V1Sensor": {
      "description": "Contains information about a sensor.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "ID of the sensor.",
          "type": "integer",
          "format": "int64",
          "example": 123
        },
        "macAddress": {
          "description": "MAC address of the sensor.",
          "type": "string",
          "example": "11:11:11:11:11:11"
        },
        "name": {
          "description": "Name of the sensor.",
          "type": "string",
          "example": "Freezer ABC"
        }
      }
    },
    "V1SensorHistoryResponse": {
      "description": "Contains the results for a sensor history request. Each result contains a timestamp and datapoint for each requested (sensor, field) pair.",
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "series": {
                "description": "List of datapoints, one for each requested (sensor, field) pair.",
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64",
                  "example": 1
                }
              },
              "timeMs": {
                "description": "Timestamp in UNIX milliseconds.",
                "type": "integer",
                "example": 1453449599999
              }
            }
          }
        }
      }
    },
    "V1TemperatureResponse": {
      "description": "Contains the current temperatures of a sensor.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "Deprecated.",
          "type": "integer",
          "format": "int64",
          "example": 101
        },
        "sensors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ambientTemperature": {
                "description": "Currently reported ambient temperature in millidegrees celsius.",
                "type": "integer",
                "example": 11057
              },
              "ambientTemperatureTime": {
                "description": "The timestamp of reported ambient temperature, specified in RFC 3339 time.",
                "type": "string",
                "example": "2019-04-17T16:42:55Z"
              },
              "id": {
                "description": "ID of the sensor.",
                "type": "integer",
                "format": "int64",
                "example": 122
              },
              "name": {
                "description": "Name of the sensor.",
                "type": "string",
                "example": "Freezer Temp V1Sensor"
              },
              "probeTemperature": {
                "description": "Currently reported probe temperature in millidegrees celsius. If no probe is connected, this parameter will not be reported.",
                "type": "integer",
                "example": -20145
              },
              "probeTemperatureTime": {
                "description": "The timestamp of reported probe temperature, specified in RFC 3339 time.",
                "type": "string",
                "example": "2019-04-17T16:42:55Z"
              },
              "trailerId": {
                "description": "ID of the trailer associated with the sensor for the data point. If no trailer is connected, this parameter will not be reported.",
                "type": "integer",
                "example": 123
              },
              "vehicleId": {
                "description": "ID of the vehicle associated with the sensor for the data point. If no vehicle is connected, this parameter will not be reported.",
                "type": "integer",
                "example": 124
              }
            }
          }
        }
      }
    },
    "V1TrailerAssignmentResponse": {
      "type": "object",
      "properties": {
        "driverId": {
          "description": "The ID of the driver associated with this trailer.",
          "type": "integer",
          "format": "int64",
          "example": 2047
        },
        "endMs": {
          "description": "The time at which the driver ended the assignment. If the assignment is current, this value will be omitted.",
          "type": "integer",
          "format": "int64",
          "example": 1462881998034
        },
        "startMs": {
          "description": "The time at which the driver started the assignment",
          "type": "integer",
          "format": "int64",
          "example": 1462878398034
        }
      }
    },
    "V1TrailerAssignmentsResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/V1TrailerBase"
        },
        {
          "type": "object",
          "properties": {
            "trailerAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/V1TrailerAssignmentResponse"
              }
            }
          }
        }
      ]
    },
    "V1TrailerBase": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "description": "ID of the trailer",
          "type": "integer",
          "format": "int64",
          "example": 2041
        },
        "name": {
          "description": "Assignment trailer name (given when creating trailer via the trailer portal)",
          "type": "string",
          "format": "string",
          "example": "myTrailer"
        }
      }
    },
    "V1TripResponse": {
      "description": "Contains the trips for the vehicle in the requested timeframe. A trip is represented as an object that contains startMs, startLocation, startAddress, startCoordinates, endMs, endLocation, endAddress and endCoordinates. Ongoing trips will be returned with 9223372036854775807 as their endMs.",
      "type": "object",
      "properties": {
        "trips": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "assetIds": {
                "description": "List of associated asset IDs",
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "example": [
                  122
                ]
              },
              "codriverIds": {
                "description": "List of codriver IDs",
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                },
                "example": [
                  122
                ]
              },
              "distanceMeters": {
                "description": "Length of the trip in meters. This value is calculated from the GPS data collected by the Samsara Vehicle Gateway.",
                "type": "integer",
                "example": 2500
              },
              "driverId": {
                "description": "ID of the driver.",
                "type": "integer",
                "example": 719
              },
              "endAddress": {
                "description": "Text representation of nearest identifiable location to the end (latitude, longitude) coordinates.",
                "type": "object",
                "properties": {
                  "address": {
                    "description": "The formatted address",
                    "type": "string",
                    "example": "123 Main St, Sunnyvale, CA 94089"
                  },
                  "id": {
                    "description": "The ID of the address",
                    "type": "number",
                    "format": "int64",
                    "example": 581
                  },
                  "name": {
                    "description": "The name of the address",
                    "type": "string",
                    "example": "Ramen Tatsunoya"
                  }
                }
              },
              "endCoordinates": {
                "description": "End (latitude, longitude) in decimal degrees.",
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "format": "double",
                    "example": 23.413702345
                  },
                  "longitude": {
                    "type": "number",
                    "format": "double",
                    "example": -91.502888123
                  }
                }
              },
              "endLocation": {
                "description": "Geocoded street address of start (latitude, longitude) coordinates.",
                "type": "string",
                "example": "571 S Lake Ave, Pasadena, CA 91101"
              },
              "endMs": {
                "description": "End of the trip in UNIX milliseconds. Ongoing trips are indicated by an endMs value of 9223372036854775807.",
                "type": "integer",
                "example": 1462881998034
              },
              "endOdometer": {
                "description": "Odometer reading (in meters) at the end of the trip. This is read from the vehicle's on-board diagnostics. If Samsara cannot read the vehicle's odometer values from on-board diagnostics, this value will be 0.",
                "type": "integer",
                "example": 210430500
              },
              "fuelConsumedMl": {
                "description": "Amount in milliliters of fuel consumed on this trip.",
                "type": "integer",
                "example": 75700
              },
              "startAddress": {
                "description": "Text representation of nearest identifiable location to the start (latitude, longitude) coordinates.",
                "type": "object",
                "properties": {
                  "address": {
                    "description": "The formatted address",
                    "type": "string",
                    "example": "123 Main St, Sunnyvale, CA 94089"
                  },
                  "id": {
                    "description": "The ID of the address",
                    "type": "number",
                    "format": "int64",
                    "example": 581
                  },
                  "name": {
                    "description": "The name of the address",
                    "type": "string",
                    "example": "Ramen Tatsunoya"
                  }
                }
              },
              "startCoordinates": {
                "description": "Start (latitude, longitude) in decimal degrees.",
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "format": "double",
                    "example": 29.443702345
                  },
                  "longitude": {
                    "type": "number",
                    "format": "double",
                    "example": -98.502888123
                  }
                }
              },
              "startLocation": {
                "description": "Geocoded street address of start (latitude, longitude) coordinates.",
                "type": "string",
                "example": "16 N Fair Oaks Ave, Pasadena, CA 91103"
              },
              "startMs": {
                "description": "Beginning of the trip in UNIX milliseconds.",
                "type": "integer",
                "example": 1462878398034
              },
              "startOdometer": {
                "description": "Odometer reading (in meters) at the beginning of the trip. This is read from the vehicle's on-board diagnostics. If Samsara cannot read the vehicle's odometer values from on-board diagnostics, this value will be 0.",
                "type": "integer",
                "example": 210430450
              },
              "tollMeters": {
                "description": "Length in meters trip spent on toll roads.",
                "type": "integer",
                "example": 32000
              }
            }
          }
        }
      }
    },
    "V1VehicleHarshEventResponse": {
      "description": "Harsh event details for a vehicle",
      "type": "object",
      "required": [
        "incidentReportUrl",
        "harshEventType"
      ],
      "properties": {
        "downloadForwardVideoUrl": {
          "description": "URL for downloading the forward facing video",
          "type": "string",
          "example": "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com/123/212123456789012/1539201872984/abC123De4-camera-video-segment-123456789.mp4?..."
        },
        "downloadInwardVideoUrl": {
          "description": "URL for downloading the inward facing video",
          "type": "string",
          "example": "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com/123/212123456789012/1539201872984/abC123De4-camera-video-segment-driver-123456789.mp4?..."
        },
        "downloadTrackedInwardVideoUrl": {
          "description": "URL for downloading the tracked inward facing video",
          "type": "string",
          "example": "https://samsara-dashcam-videos.s3.us-west-2.amazonaws.com/123/212123456789012/1539201872984/abC123De4-camera-video-segment-driver-123456789.tracked.mp4?..."
        },
        "harshEventType": {
          "description": "Type of the harsh event. One of: [Crash, Harsh Acceleration, Harsh Braking, Harsh Turn, ROP Engine, ROP Brake, YC Engine, YC Brake, Harsh Event]",
          "type": "string",
          "example": "Harsh Braking"
        },
        "incidentReportUrl": {
          "description": "URL of the associated incident report page",
          "type": "string",
          "example": "https://cloud.samsara.com/o/1234/fleet/reports/safety/vehicle/212123456789012/incident/1539201882984"
        },
        "isDistracted": {
          "description": "Whether the driver was deemed distracted during this harsh event",
          "type": "boolean",
          "example": true
        },
        "location": {
          "type": "object",
          "properties": {
            "address": {
              "description": "Address of location where the harsh event occurred",
              "type": "string",
              "example": "350 Rhode Island St, San Francisco, CA"
            },
            "latitude": {
              "description": "Latitude of location where the harsh event occurred",
              "type": "number",
              "example": 33.07614328
            },
            "longitude": {
              "description": "Longitude of location where the harsh event occurred",
              "type": "number",
              "example": -96.14907287
            }
          }
        }
      }
    },
    "V1VehicleLocation": {
      "description": "Contains the location, in latitude and longitude, of a vehicle.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "driverId": {
          "description": "The ID of the driver currently assigned to this vehicle.",
          "type": "integer",
          "example": 1
        },
        "heading": {
          "description": "Heading in degrees.",
          "type": "number",
          "format": "double",
          "example": 246.42
        },
        "id": {
          "description": "ID of the vehicle.",
          "type": "integer",
          "format": "int64",
          "example": 112
        },
        "latitude": {
          "description": "Latitude in decimal degrees.",
          "type": "number",
          "format": "double",
          "example": 123.456
        },
        "location": {
          "description": "Text representation of nearest identifiable location to (latitude, longitude) coordinates.",
          "type": "string",
          "example": "1 Main St, Dallas, TX"
        },
        "longitude": {
          "description": "Longitude in decimal degrees.",
          "type": "number",
          "format": "double",
          "example": 32.897
        },
        "name": {
          "description": "Name of the vehicle.",
          "type": "string",
          "example": "Truck A7"
        },
        "odometerMeters": {
          "description": "The number of meters reported by the odometer.",
          "type": "integer",
          "format": "int64",
          "example": 71774705
        },
        "odometerType": {
          "description": "The source of data for odometerMeters. Will be either GPS or OBD",
          "type": "string",
          "enum": [
            "GPS",
            "OBD"
          ],
          "example": "GPS"
        },
        "onTrip": {
          "description": "Whether or not a trip is currently in progress for this vehicle. More information available via /fleet/trips endpoint.",
          "type": "boolean",
          "example": true
        },
        "routeIds": {
          "description": "A list of currently active route IDs that the vehicle is in.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "example": [
            2244514,
            2311654
          ]
        },
        "speed": {
          "description": "Speed in miles per hour.",
          "type": "number",
          "format": "double",
          "example": 64.37
        },
        "time": {
          "description": "The time the reported location was logged, reported as a UNIX timestamp in milliseconds.",
          "type": "integer",
          "example": 1462881998034
        },
        "vin": {
          "description": "Vehicle Identification Number (VIN) of the vehicle.",
          "type": "string",
          "example": "JTNBB46KX73011966"
        }
      }
    },
    "V1VehicleMaintenance": {
      "description": "Contains any J1939/Passenger engine light warnings and engine faults.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "ID of the vehicle.",
          "type": "integer",
          "format": "int64",
          "example": 112
        },
        "j1939": {
          "description": "J1939 based data. Null if no data is available.",
          "type": "object",
          "properties": {
            "checkEngineLight": {
              "description": "J1939 check engine lights.",
              "type": "object",
              "properties": {
                "emissionsIsOn": {
                  "type": "boolean"
                },
                "protectIsOn": {
                  "type": "boolean"
                },
                "stopIsOn": {
                  "type": "boolean"
                },
                "warningIsOn": {
                  "type": "boolean"
                }
              }
            },
            "diagnosticTroubleCodes": {
              "description": "J1939 DTCs.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "fmiId",
                  "fmiText",
                  "occurrenceCount",
                  "spnDescription",
                  "spnId",
                  "txId"
                ],
                "properties": {
                  "fmiId": {
                    "type": "integer"
                  },
                  "fmiText": {
                    "type": "string"
                  },
                  "occurrenceCount": {
                    "type": "integer"
                  },
                  "spnDescription": {
                    "type": "string"
                  },
                  "spnId": {
                    "type": "integer"
                  },
                  "txId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "passenger": {
          "description": "Passenger vehicle data. Null if no data is available.",
          "type": "object",
          "properties": {
            "checkEngineLight": {
              "description": "Passenger vehicle check engine light.",
              "type": "object",
              "properties": {
                "isOn": {
                  "type": "boolean"
                }
              }
            },
            "diagnosticTroubleCodes": {
              "description": "Passenger vehicle DTCs.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "dtcId",
                  "dtcDescription",
                  "dtcShortCode"
                ],
                "properties": {
                  "dtcDescription": {
                    "type": "string"
                  },
                  "dtcId": {
                    "type": "integer"
                  },
                  "dtcShortCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "V1VehicleSafetyScoreResponse": {
      "description": "Safety score details for a vehicle",
      "type": "object",
      "properties": {
        "crashCount": {
          "description": "Crash event count",
          "type": "integer",
          "example": 0
        },
        "harshAccelCount": {
          "description": "Harsh acceleration event count",
          "type": "integer",
          "example": 1
        },
        "harshBrakingCount": {
          "description": "Harsh braking event count",
          "type": "integer",
          "example": 2
        },
        "harshEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/V1SafetyReportHarshEvent"
          }
        },
        "harshTurningCount": {
          "description": "Harsh turning event count",
          "type": "integer",
          "example": 0
        },
        "safetyScore": {
          "description": "Safety Score",
          "type": "integer",
          "example": 97
        },
        "safetyScoreRank": {
          "description": "Safety Score Rank",
          "type": "string",
          "example": "26"
        },
        "timeOverSpeedLimitMs": {
          "description": "Amount of time driven over the speed limit in milliseconds",
          "type": "integer",
          "example": 3769
        },
        "totalDistanceDrivenMeters": {
          "description": "Total distance driven in meters",
          "type": "integer",
          "example": 291836
        },
        "totalHarshEventCount": {
          "description": "Total harsh event count",
          "type": "integer",
          "example": 3
        },
        "totalTimeDrivenMs": {
          "description": "Amount of time driven in milliseconds",
          "type": "integer",
          "example": 19708293
        },
        "vehicleId": {
          "description": "Vehicle ID",
          "type": "integer",
          "example": 4321
        }
      }
    },
    "V1VisionCamerasResponse": {
      "description": "Contains the list of Cameras installed in the org.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "cameraId": {
            "type": "integer",
            "format": "int64",
            "example": 1234512345999
          },
          "cameraName": {
            "type": "string",
            "example": "Line 32"
          },
          "ethernetIp": {
            "type": "string",
            "example": "10.1.2.34"
          },
          "wifiIp": {
            "type": "string",
            "example": "10.1.2.35"
          }
        }
      }
    },
    "V1VisionRunByCameraResponse": {
      "type": "object",
      "properties": {
        "cameraId": {
          "type": "integer",
          "format": "int64",
          "example": 1234512345123
        },
        "endedAtMs": {
          "type": "integer",
          "format": "int64",
          "example": 0
        },
        "inspectionResults": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "captureAtMs": {
                "type": "number",
                "format": "float64",
                "example": 1553811994730
              },
              "result": {
                "type": "string",
                "example": "PASS"
              },
              "stepResults": {
                "$ref": "#/definitions/V1VisionStepResults"
              }
            }
          }
        },
        "isOngoing": {
          "type": "boolean",
          "example": true
        },
        "program": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "example": 1
            },
            "name": {
              "type": "string",
              "example": "Barcode verification program"
            }
          }
        },
        "runSummary": {
          "type": "object",
          "properties": {
            "itemsPerMinute": {
              "type": "number",
              "format": "float64",
              "example": 0.1
            },
            "noReadCount": {
              "type": "integer",
              "format": "int64",
              "example": 0
            },
            "rejectCount": {
              "type": "integer",
              "format": "int64",
              "example": 0
            },
            "successCount": {
              "type": "integer",
              "format": "int64",
              "example": 181
            }
          }
        },
        "startedAtMs": {
          "type": "integer",
          "format": "int64",
          "example": 1553808606097
        }
      }
    },
    "V1VisionRunsByCameraAndProgramResponse": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "integer",
          "format": "int64",
          "example": 1234512345123
        },
        "endedAtMs": {
          "type": "integer",
          "format": "int64",
          "example": 0
        },
        "programId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "reportMetadata": {
          "type": "object",
          "properties": {
            "itemsPerMinute": {
              "type": "number",
              "format": "float64",
              "example": 0.1
            },
            "noReadCount": {
              "type": "integer",
              "format": "int64",
              "example": 0
            },
            "rejectCount": {
              "type": "integer",
              "format": "int64",
              "example": 0
            },
            "successCount": {
              "type": "integer",
              "format": "int64",
              "example": 181
            }
          }
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "captureAtMs": {
                "type": "number",
                "format": "float64",
                "example": 1553811994730
              },
              "result": {
                "type": "string",
                "example": "PASS"
              },
              "stepResults": {
                "$ref": "#/definitions/V1VisionStepResults"
              }
            }
          }
        },
        "startedAtMs": {
          "type": "integer",
          "format": "int64",
          "example": 1553808606097
        }
      }
    },
    "V1VisionRunsByCameraResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int64",
            "example": 1234512345123
          },
          "endedAtMs": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "program": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "Barcode verification program"
              }
            }
          },
          "reportMetadata": {
            "type": "object",
            "properties": {
              "itemsPerMinute": {
                "type": "number",
                "format": "float64",
                "example": 0.1
              },
              "noReadCount": {
                "type": "integer",
                "format": "int64",
                "example": 0
              },
              "rejectCount": {
                "type": "integer",
                "format": "int64",
                "example": 0
              },
              "successCount": {
                "type": "integer",
                "format": "int64",
                "example": 181
              }
            }
          },
          "startedAtMs": {
            "type": "integer",
            "format": "int64",
            "example": 1553808606097
          }
        }
      }
    },
    "V1VisionRunsResponse": {
      "type": "object",
      "properties": {
        "visionRuns": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "integer",
                "format": "int64",
                "example": 1234512345123
              },
              "endedAtMs": {
                "type": "integer",
                "format": "int64",
                "example": 0
              },
              "programId": {
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "reportMetadata": {
                "description": "The response includes 4 additional fields that are now deprecated",
                "type": "object",
                "properties": {
                  "itemsPerMinute": {
                    "description": "Returns average scanned items per minute. Should be used instead of scanRate.",
                    "type": "number",
                    "format": "float64",
                    "example": 0.1
                  },
                  "noReadCount": {
                    "description": "Returns no read count for the run. Should be used instead of noReadScansCount",
                    "type": "integer",
                    "format": "int64",
                    "example": 181
                  },
                  "rejectCount": {
                    "description": "Returns reject count for the run. Should be used instead of failedScansCount",
                    "type": "integer",
                    "format": "int64",
                    "example": 0
                  },
                  "successCount": {
                    "description": "Returns success count for the run. Should be used instead of successfulScansCount",
                    "type": "integer",
                    "format": "int64",
                    "example": 181
                  }
                }
              },
              "startedAtMs": {
                "type": "integer",
                "format": "int64",
                "example": 1553808606097
              }
            }
          }
        }
      }
    },
    "V1VisionStepResults": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "angleCheck": {
            "type": "object",
            "properties": {
              "angleConfigured": {
                "description": "The configured angle allowance range (in degrees)",
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 150
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 90
                  }
                }
              },
              "angleFound": {
                "description": "The counter-clockwise angle detected from the first edge to the second edge",
                "type": "integer",
                "format": "int64",
                "example": 60
              },
              "endStepName": {
                "description": "The name of the second reference step used to check the angle",
                "type": "string",
                "example": "Edge 2"
              },
              "startStepName": {
                "description": "The name of the first reference step used to check the angle",
                "type": "string",
                "example": "Edge 1"
              }
            }
          },
          "barcode": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "contents": {
                  "type": "string",
                  "example": "10855639004823"
                },
                "matchString": {
                  "type": "string",
                  "example": "10855639004823"
                },
                "type": {
                  "type": "string",
                  "example": "EAN8"
                }
              }
            }
          },
          "booleanLogic": {
            "type": "object",
            "properties": {
              "operator": {
                "type": "string",
                "example": "AND"
              },
              "steps": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Expiration Date"
                    },
                    "result": {
                      "type": "string",
                      "example": "PASS"
                    }
                  }
                }
              }
            }
          },
          "caliper": {
            "type": "object",
            "properties": {
              "angleRange": {
                "description": "The configured angle allowance range",
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int32",
                    "example": 360
                  },
                  "low": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  }
                }
              },
              "contrastRange": {
                "description": "The configured contrast allowance range",
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 50
                  }
                }
              },
              "distanceFound": {
                "description": "The distance found between the found edges",
                "type": "number",
                "format": "float",
                "example": 555.55
              },
              "filterPolarity": {
                "description": "The configured polarity for finding edges",
                "type": "string",
                "default": "LIGHT TO DARK",
                "enum": [
                  "LIGHT TO DARK",
                  "DARK TO LIGHT"
                ],
                "example": "LIGHT TO DARK"
              },
              "maxDistance": {
                "description": "The maximum allowed distance threshold",
                "type": "number",
                "format": "float",
                "example": 1000
              },
              "minDistance": {
                "description": "The minumum allowed distance threshold",
                "type": "number",
                "format": "float",
                "example": 500
              },
              "sharpnessRange": {
                "description": "The configured sharpness allowance range",
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 80
                  }
                }
              },
              "straightnessRange": {
                "description": "The configured straightness allowance range",
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int32",
                    "example": 100
                  },
                  "low": {
                    "type": "integer",
                    "format": "int32",
                    "example": 80
                  }
                }
              },
              "unit": {
                "description": "The measurement unit of the distance found and the min and max distance threshold",
                "type": "string",
                "example": "Millimeters"
              }
            }
          },
          "contour": {
            "type": "object",
            "properties": {
              "angleDegrees": {
                "description": "The rotation angle found",
                "type": "integer",
                "format": "int64",
                "example": 0
              },
              "angleTolerance": {
                "description": "The rotation angle allowance",
                "type": "integer",
                "format": "int64",
                "example": 50
              },
              "matchPercentage": {
                "description": "The contour match percentage with the configured contour",
                "type": "integer",
                "format": "int64",
                "example": 46
              },
              "matchThreshold": {
                "description": "The configured match threshold for contours",
                "type": "integer",
                "format": "int64",
                "example": 18
              }
            }
          },
          "distance": {
            "type": "object",
            "properties": {
              "distanceFound": {
                "description": "The distance found between the start and end references",
                "type": "integer",
                "format": "float64",
                "example": 1000.22
              },
              "endStepName": {
                "description": "The name of the second reference step that we're checking the distances between",
                "type": "string",
                "example": "Bottom Right Square"
              },
              "enforceOffsetAngleRange": {
                "description": "Whether an offset angle range is enforced",
                "type": "boolean",
                "example": true
              },
              "maxDistance": {
                "description": "The maximum allowed distance threshold",
                "type": "integer",
                "format": "float64",
                "example": 900
              },
              "maxOffsetAngle": {
                "description": "The maximum angle allowance (in degrees) if enforceOffsetAngleRange is true",
                "type": "integer",
                "format": "int64",
                "example": 90
              },
              "minDistance": {
                "description": "The minumum allowed distance threshold",
                "type": "integer",
                "format": "float64",
                "example": 1500
              },
              "minOffsetAngle": {
                "description": "The minimum angle allowance (in degrees) if enforceOffsetAngleRange is true",
                "type": "integer",
                "format": "int64",
                "example": 45
              },
              "offsetAngleFound": {
                "description": "The counter-clockwise angle (in degrees) found between the horizontal axis of the start reference step and the last",
                "type": "integer",
                "format": "int64",
                "example": 50
              },
              "startStepName": {
                "description": "The name of the first reference step that we're checking the distances between",
                "type": "string",
                "example": "Top Left Square"
              },
              "unit": {
                "description": "The measurement unit of the distance found and the min and max distance threshold",
                "type": "string",
                "example": "Millimeters"
              }
            }
          },
          "expirationDate": {
            "type": "object",
            "properties": {
              "dateOffset": {
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "foundDate": {
                "type": "string",
                "example": "06/13/2019"
              },
              "matchDate": {
                "type": "string",
                "example": "06/13/2019"
              }
            }
          },
          "findCopies": {
            "type": "object",
            "properties": {
              "angleTolerance": {
                "description": "The orientation angle tolerance (+/- °)",
                "type": "integer",
                "format": "int64",
                "example": 10
              },
              "foundCount": {
                "description": "The number of copies found",
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "maxCount": {
                "description": "The maximum number of copies allowed",
                "type": "integer",
                "format": "int64",
                "example": 5
              },
              "minCount": {
                "description": "The minimum number of copies allowed",
                "type": "integer",
                "format": "int64",
                "example": 1
              },
              "threshold": {
                "description": "The minimum required similarity (in %) of a found copy compared to the configured match region",
                "type": "integer",
                "format": "int64",
                "example": 70
              }
            }
          },
          "findEdge": {
            "type": "object",
            "properties": {
              "angleFound": {
                "description": "The detected angle in degrees",
                "type": "integer",
                "format": "float64",
                "example": 90
              },
              "angleRange": {
                "description": "The configured angle allowance range",
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int32",
                    "example": 360
                  },
                  "low": {
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  }
                }
              },
              "contrastPercent": {
                "description": "The detected contrast percentage",
                "type": "integer",
                "format": "float64",
                "example": 72.8
              },
              "contrastRange": {
                "description": "The configured contrast allowance range",
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 50
                  }
                }
              },
              "filterPolarity": {
                "description": "The configured polarity for finding edges",
                "type": "string",
                "example": "ANY"
              },
              "sharpnessPercent": {
                "description": "The detected sharpness percentage",
                "type": "integer",
                "format": "float64",
                "example": 95
              },
              "sharpnessRange": {
                "description": "The configured sharpness allowance range",
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 80
                  }
                }
              },
              "straightnessFound": {
                "description": "The detected straightness percentage",
                "type": "integer",
                "format": "float64",
                "example": 95
              },
              "straightnessRange": {
                "description": "The configured straightness allowance range",
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int32",
                    "example": 100
                  },
                  "low": {
                    "type": "integer",
                    "format": "int32",
                    "example": 80
                  }
                }
              }
            }
          },
          "findShapes": {
            "type": "object",
            "properties": {
              "foundCount": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "maxCount": {
                "type": "integer",
                "format": "int32",
                "example": 5
              },
              "minCount": {
                "type": "integer",
                "format": "int32",
                "example": 1
              }
            }
          },
          "fixture": {
            "type": "object",
            "properties": {
              "coordinates": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "integer",
                    "format": "int32",
                    "example": 10
                  },
                  "y": {
                    "type": "integer",
                    "format": "int32",
                    "example": 10
                  }
                }
              },
              "found": {
                "type": "boolean",
                "example": true
              },
              "rotationDegrees": {
                "type": "integer",
                "format": "int64",
                "example": 90
              }
            }
          },
          "labelMatch": {
            "type": "object",
            "properties": {
              "score": {
                "type": "integer",
                "format": "int64",
                "example": 10
              },
              "threshold": {
                "type": "integer",
                "format": "int64",
                "example": 10
              }
            }
          },
          "name": {
            "type": "string",
            "example": "Chicken Caesar Label"
          },
          "presenceAbsence": {
            "type": "object",
            "properties": {
              "blueRange": {
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 150
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 90
                  }
                }
              },
              "checkForAbsence": {
                "type": "boolean",
                "example": true
              },
              "grayscaleRange": {
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 20
                  }
                }
              },
              "greenRange": {
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 150
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 90
                  }
                }
              },
              "hueRange": {
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 20
                  }
                }
              },
              "redRange": {
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 150
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 90
                  }
                }
              },
              "saturationRange": {
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 50
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 10
                  }
                }
              },
              "score": {
                "type": "integer",
                "format": "int64",
                "example": 50
              },
              "threshold": {
                "type": "integer",
                "format": "int64",
                "example": 50
              },
              "valueRange": {
                "type": "object",
                "properties": {
                  "high": {
                    "type": "integer",
                    "format": "int64",
                    "example": 50
                  },
                  "low": {
                    "type": "integer",
                    "format": "int64",
                    "example": 10
                  }
                }
              }
            }
          },
          "result": {
            "type": "string",
            "example": "PASS"
          },
          "textMatch": {
            "type": "object",
            "properties": {
              "foundText": {
                "type": "string",
                "example": "ABCD"
              },
              "matchString": {
                "type": "string",
                "example": "ABCD"
              }
            }
          }
        }
      }
    },
    "Vehicle": {
      "description": "The vehicle object.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "attributes": {
          "description": "[beta] A minified attribute",
          "type": "array",
          "items": {
            "$ref": "#/definitions/attributeTiny"
          }
        },
        "auxInputType1": {
          "$ref": "#/definitions/VehicleAuxInputType1"
        },
        "auxInputType10": {
          "$ref": "#/definitions/VehicleAuxInputType10"
        },
        "auxInputType2": {
          "$ref": "#/definitions/VehicleAuxInputType2"
        },
        "auxInputType3": {
          "$ref": "#/definitions/VehicleAuxInputType3"
        },
        "auxInputType4": {
          "$ref": "#/definitions/VehicleAuxInputType4"
        },
        "auxInputType5": {
          "$ref": "#/definitions/VehicleAuxInputType5"
        },
        "auxInputType6": {
          "$ref": "#/definitions/VehicleAuxInputType6"
        },
        "auxInputType7": {
          "$ref": "#/definitions/VehicleAuxInputType7"
        },
        "auxInputType8": {
          "$ref": "#/definitions/VehicleAuxInputType8"
        },
        "auxInputType9": {
          "$ref": "#/definitions/VehicleAuxInputType9"
        },
        "cameraSerial": {
          "$ref": "#/definitions/CameraSerial"
        },
        "externalIds": {
          "$ref": "#/definitions/VehicleExternalIds"
        },
        "gateway": {
          "$ref": "#/definitions/gatewayTiny"
        },
        "harshAccelerationSettingType": {
          "$ref": "#/definitions/VehicleHarshAccelerationSettingType"
        },
        "id": {
          "$ref": "#/definitions/VehicleId"
        },
        "licensePlate": {
          "$ref": "#/definitions/VehicleLicensePlate"
        },
        "make": {
          "$ref": "#/definitions/VehicleMake"
        },
        "model": {
          "$ref": "#/definitions/VehicleModel"
        },
        "name": {
          "$ref": "#/definitions/VehicleName"
        },
        "notes": {
          "$ref": "#/definitions/VehicleNotes"
        },
        "serial": {
          "$ref": "#/definitions/Serial"
        },
        "staticAssignedDriver": {
          "$ref": "#/definitions/VehicleStaticAssignedDriver"
        },
        "tags": {
          "$ref": "#/definitions/VehicleTags"
        },
        "vin": {
          "$ref": "#/definitions/VehicleVin"
        },
        "year": {
          "$ref": "#/definitions/VehicleYear"
        }
      }
    },
    "VehicleAssignmentObjectResponseBody": {
      "type": "object",
      "required": [
        "isPassenger",
        "vehicle",
        "startTime",
        "assignmentType"
      ],
      "properties": {
        "assignmentType": {
          "description": "Assignment type of the driver-vehicle assignment, indicating the provenance of the assignment. The only type of assignment supported right now is `driverApp` assignments. This list could change, so it is recommended that clients gracefully handle any types not enumerated in this list.",
          "type": "string",
          "enum": [
            "driverApp"
          ],
          "example": "driverApp"
        },
        "endTime": {
          "description": " An end time in RFC 3339 format. Omitted if not applicable. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        },
        "isPassenger": {
          "description": "Boolean indicating whether the driver is a passenger.",
          "type": "boolean",
          "example": false
        },
        "startTime": {
          "description": " A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).",
          "type": "string",
          "example": "2019-06-13T19:08:25Z"
        },
        "vehicle": {
          "$ref": "#/definitions/GoaVehicleTinyResponseResponseBody"
        }
      }
    },
    "VehicleAuxInputName": {
      "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
      "type": "string",
      "enum": [
        "None",
        "Emergency Lights",
        "Emergency Alarm",
        "Stop Paddle",
        "Power Take-Off",
        "Plow",
        "Sweeper",
        "Salter",
        "Reefer",
        "Door",
        "Boom",
        "Auxiliary Engine",
        "Generator",
        "Eight-Way Lights",
        "Panic Button",
        "Privacy Button",
        "Front Axle Drive",
        "Weight Sensor",
        "Other",
        "Secondary Fuel Source",
        "(ECU) Power Take-Off"
      ],
      "example": "Boom"
    },
    "VehicleAuxInputType": {
      "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
      "type": "string",
      "enum": [
        "none",
        "emergencyLights",
        "emergencyAlarm",
        "stopPaddle",
        "powerTakeOff",
        "plow",
        "sweeper",
        "salter",
        "reefer",
        "door",
        "boom",
        "auxiliaryEngine",
        "generator",
        "eightWayLights",
        "panicButton",
        "privacyButton",
        "frontAxleDrive",
        "weightSensor",
        "other",
        "secondaryFuelSource",
        "ecuPowerTakeOff"
      ],
      "example": "boom"
    },
    "VehicleAuxInputType1": {
      "$ref": "#/definitions/VehicleAuxInputType"
    },
    "VehicleAuxInputType10": {
      "$ref": "#/definitions/VehicleAuxInputType"
    },
    "VehicleAuxInputType2": {
      "$ref": "#/definitions/VehicleAuxInputType"
    },
    "VehicleAuxInputType3": {
      "$ref": "#/definitions/VehicleAuxInputType"
    },
    "VehicleAuxInputType4": {
      "$ref": "#/definitions/VehicleAuxInputType"
    },
    "VehicleAuxInputType5": {
      "$ref": "#/definitions/VehicleAuxInputType"
    },
    "VehicleAuxInputType6": {
      "$ref": "#/definitions/VehicleAuxInputType"
    },
    "VehicleAuxInputType7": {
      "$ref": "#/definitions/VehicleAuxInputType"
    },
    "VehicleAuxInputType8": {
      "$ref": "#/definitions/VehicleAuxInputType"
    },
    "VehicleAuxInputType9": {
      "$ref": "#/definitions/VehicleAuxInputType"
    },
    "VehicleCameraMediaObjectResponseBody": {
      "type": "object",
      "properties": {
        "cameras": {
          "description": "List of camera objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CameraObjectResponseBody"
          }
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "ID of the vehicle.",
          "type": "string",
          "example": "494123"
        },
        "name": {
          "description": "Name of the vehicle.",
          "type": "string",
          "example": "H055494"
        }
      }
    },
    "VehicleEngineHours": {
      "description": "A manual override for the vehicle's engine hours. You may only override a vehicle's engine hours if it cannot be read from on-board diagnostics. When you provide a manual engine hours override, Samsara will begin updating a vehicle's engine hours based on when the Samsara Vehicle Gateway is recieving power or not.",
      "type": "integer",
      "format": "int64",
      "example": 10943
    },
    "VehicleExternalIds": {
      "description": "The \u003ca href=\"/docs/external-ids\" target=\"_blank\"\u003eexternal IDs\u003c/a\u003e for the given object.",
      "type": "object",
      "example": {
        "maintenanceId": "250020",
        "payrollId": "ABFS18600"
      }
    },
    "VehicleHarshAccelerationSettingType": {
      "description": "The harsh acceleration setting type. This setting influences the acceleration sensitivity from which a \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043051792-Safety-Event-Overview\" target=\"_blank\"\u003eharsh event\u003c/a\u003e is triggered. **By default**, this setting is inferred by the Samsara Vehicle Gateway from the engine computer, but it may be set or updated through the Samsara Dashboard or the API at any time. If set to `off`, then no acceleration based harsh events are triggered for the vehicle.",
      "type": "string",
      "enum": [
        "passengerCar",
        "lightTruck",
        "heavyDuty",
        "off",
        "automatic"
      ],
      "example": "off"
    },
    "VehicleId": {
      "description": "The unique Samsara ID of the Vehicle. This is automatically generated when the Vehicle object is created. It cannot be changed.",
      "type": "string",
      "example": "112"
    },
    "VehicleLicensePlate": {
      "description": "The license plate of the Vehicle. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
      "type": "string",
      "maxLength": 12,
      "example": "XHK1234"
    },
    "VehicleLocation": {
      "description": "Vehicle location event.",
      "type": "object",
      "required": [
        "time",
        "latitude",
        "longitude"
      ],
      "properties": {
        "heading": {
          "$ref": "#/definitions/VehicleLocationHeading"
        },
        "latitude": {
          "$ref": "#/definitions/VehicleLocationLatitude"
        },
        "longitude": {
          "$ref": "#/definitions/VehicleLocationLongitude"
        },
        "reverseGeo": {
          "$ref": "#/definitions/VehicleLocationReverseGeo"
        },
        "speed": {
          "$ref": "#/definitions/VehicleLocationSpeed"
        },
        "time": {
          "$ref": "#/definitions/VehicleLocationTime"
        }
      }
    },
    "VehicleLocationAddress": {
      "description": "Address that the location is in.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the address.",
          "type": "string",
          "example": "1234"
        },
        "name": {
          "description": "Name of address.",
          "type": "string",
          "example": "Address 1"
        }
      }
    },
    "VehicleLocationHeading": {
      "description": "Heading of the vehicle in degrees.",
      "type": "number",
      "format": "double",
      "example": 120
    },
    "VehicleLocationIsEcuSpeed": {
      "description": "True if the speed value is reported from the ECU. Speed value is reported from GPS otherwise.",
      "type": "boolean",
      "example": true
    },
    "VehicleLocationLatitude": {
      "description": "GPS latitude represented in degrees",
      "type": "number",
      "format": "double",
      "example": 122.142
    },
    "VehicleLocationLongitude": {
      "description": "GPS longitude represented in degrees",
      "type": "number",
      "format": "double",
      "example": -93.343
    },
    "VehicleLocationReverseGeo": {
      "description": "Reverse geocoded information.",
      "type": "object",
      "properties": {
        "formattedLocation": {
          "description": "Formatted address of the reverse geocoding data.",
          "type": "string",
          "example": "16 N Fair Oaks Ave, Pasadena, CA 91103"
        }
      }
    },
    "VehicleLocationSpeed": {
      "description": "GPS speed of the vehicle in miles per hour. See `isEcuSpeed` to determine speed data source.",
      "type": "number",
      "format": "double",
      "example": 48.3
    },
    "VehicleLocationTime": {
      "$ref": "#/definitions/time"
    },
    "VehicleLocationsListResponse": {
      "description": "List of vehicle location events and pagination info.",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "A list of vehicles and an array of location events for each vehicle.",
          "type": "array",
          "items": {
            "description": "A vehicle and its list of location events.",
            "type": "object",
            "required": [
              "id",
              "name",
              "locations"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/VehicleId"
              },
              "locations": {
                "description": "A list of location events for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleLocation"
                }
              },
              "name": {
                "$ref": "#/definitions/VehicleName"
              }
            }
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "VehicleLocationsResponse": {
      "description": "Most recent vehicle locations and pagination info.",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of the most recent locations for the specified vehicles.",
          "type": "array",
          "items": {
            "description": "A vehicle and its most recent location.",
            "type": "object",
            "required": [
              "id",
              "name",
              "location"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/VehicleId"
              },
              "location": {
                "$ref": "#/definitions/VehicleLocation"
              },
              "name": {
                "$ref": "#/definitions/VehicleName"
              }
            }
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "VehicleMake": {
      "description": "The Vehicle’s manufacturing make. Automatically read from the engine computer if available. Empty if not available. Cannot be manually set.",
      "type": "string",
      "maxLength": 255,
      "example": "Ford"
    },
    "VehicleModel": {
      "description": "The Vehicle’s manufacturing model. Automatically read from the engine computer if available. Empty if not available. Cannot be manually set.",
      "type": "string",
      "maxLength": 255,
      "example": "F150"
    },
    "VehicleName": {
      "description": "The human-readable name of the Vehicle. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. **By default**, this name is the serial number of the Samsara Vehicle Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.",
      "type": "string",
      "example": "Truck A7"
    },
    "VehicleNotes": {
      "description": "These are generic notes about the Vehicle. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.",
      "type": "string",
      "maxLength": 255,
      "example": "These are notes about this given vehicle."
    },
    "VehicleObjectResponseBody": {
      "description": "A minified vehicle object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the vehicle.",
          "type": "string",
          "example": "1234"
        },
        "name": {
          "description": "Name of the vehicle.",
          "type": "string",
          "example": "Vehicle Name"
        }
      }
    },
    "VehicleOdometerMeters": {
      "description": "A manual override for the vehicle's odometer. You may only override a vehicle's odometer if it cannot be read from on-board diagnostics. When you provide a manual odometer override, Samsara will begin updating a vehicle's odometer using GPS distance traveled since this override was set. See \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/115005273667\" target=\"_blank\"\u003ehere\u003c/a\u003e for more details.",
      "type": "integer",
      "format": "int64",
      "example": 9182
    },
    "VehicleResponse": {
      "description": "A single vehicle.",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/Vehicle"
        }
      }
    },
    "VehicleResponseResponseBody": {
      "description": "A vehicle object",
      "type": "object",
      "properties": {
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "ID of the vehicle",
          "type": "string",
          "example": "494123"
        },
        "licensePlate": {
          "description": "The license plate of the vehicle.",
          "type": "string",
          "example": "6SAM123"
        },
        "name": {
          "description": "Name of the vehicle",
          "type": "string",
          "example": "Fleet Truck #1"
        },
        "vehicleVin": {
          "description": "The VIN of the vehicle.",
          "type": "string",
          "example": "1GBJ6P1B2HV112765"
        }
      }
    },
    "VehicleStaticAssignedDriver": {
      "$ref": "#/definitions/driverTinyResponse"
    },
    "VehicleStaticAssignedDriverId": {
      "description": "ID for the static assigned driver of the vehicle.",
      "type": "string",
      "example": "123"
    },
    "VehicleStatsAmbientAirTempMilliC": {
      "description": "Vehicle ambient air temperature reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The ambient air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 31110
        }
      }
    },
    "VehicleStatsAmbientAirTempMilliCValue": {
      "description": "The ambient air temperature reading in millidegree Celsius.",
      "type": "integer",
      "format": "int64",
      "example": 31110
    },
    "VehicleStatsAmbientAirTempMilliCWithDecoration": {
      "description": "Vehicle ambient air temperature reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The ambient air temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 31110
        }
      }
    },
    "VehicleStatsAuxInput": {
      "description": "Data for auxiliary digio equipment.",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/VehicleAuxInputName"
        },
        "time": {
          "$ref": "#/definitions/vehicleStatsAuxInputTime"
        },
        "value": {
          "description": "Boolean indicating the state of the auxiliary equipment.",
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "VehicleStatsAuxInputDecoration": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "The type of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary input\u003c/a\u003e configured for this Vehicle. Once configured, these inputs will generate dynamic, time-series data that will be available to view in the Samsara Dashboard. **By default**: empty. This can be set or updated through the Samsara Dashboard or the API at any time. Inputs 3-10 are only available on gateways with an attached aux expander.",
          "type": "string",
          "enum": [
            "None",
            "Emergency Lights",
            "Emergency Alarm",
            "Stop Paddle",
            "Power Take-Off",
            "Plow",
            "Sweeper",
            "Salter",
            "Reefer",
            "Door",
            "Boom",
            "Auxiliary Engine",
            "Generator",
            "Eight-Way Lights",
            "Panic Button",
            "Privacy Button",
            "Front Axle Drive",
            "Weight Sensor",
            "Other",
            "Secondary Fuel Source",
            "(ECU) Power Take-Off"
          ],
          "example": "Boom"
        },
        "value": {
          "$ref": "#/definitions/VehicleStatsAuxInputValue"
        }
      }
    },
    "VehicleStatsAuxInputValue": {
      "description": "Boolean indicating the state of the auxiliary equipment.",
      "type": "boolean",
      "example": "true"
    },
    "VehicleStatsAuxInputWithDecoration": {
      "description": "Data for auxiliary digio equipment.",
      "type": "object",
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "name": {
          "$ref": "#/definitions/VehicleAuxInputName"
        },
        "time": {
          "$ref": "#/definitions/vehicleStatsAuxInputTime"
        },
        "value": {
          "description": "Boolean indicating the state of the auxiliary equipment.",
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "VehicleStatsBarometricPressurePa": {
      "description": "Vehicle barometric pressure reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The barometric pressure reading in pascals.",
          "type": "integer",
          "format": "int64",
          "example": 99000
        }
      }
    },
    "VehicleStatsBarometricPressurePaValue": {
      "description": "The barometric pressure reading in pascals.",
      "type": "integer",
      "format": "int64",
      "example": 99000
    },
    "VehicleStatsBarometricPressurePaWithDecoration": {
      "description": "Vehicle barometric pressure reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The barometric pressure reading in pascals.",
          "type": "integer",
          "format": "int64",
          "example": 100
        }
      }
    },
    "VehicleStatsBatteryMilliVoltsValue": {
      "description": "The battery voltage in millivolts.",
      "type": "integer",
      "format": "int64",
      "example": 7991
    },
    "VehicleStatsBatteryVoltage": {
      "description": "Vehicle battery voltage reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The battery voltage in millivolts.",
          "type": "integer",
          "format": "int64",
          "example": 7991
        }
      }
    },
    "VehicleStatsBatteryVoltageWithDecoration": {
      "description": "Vehicle battery voltage reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The battery voltage in millivolts.",
          "type": "integer",
          "format": "int64",
          "example": 7991
        }
      }
    },
    "VehicleStatsDecorations": {
      "description": "Decorated values for the primary vehicle stat datapoints.",
      "type": "object",
      "properties": {
        "ambientAirTemperatureMilliC": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsAmbientAirTempMilliCValue"
            }
          }
        },
        "auxInput1": {
          "$ref": "#/definitions/VehicleStatsAuxInputDecoration"
        },
        "auxInput10": {
          "$ref": "#/definitions/VehicleStatsAuxInputDecoration"
        },
        "auxInput2": {
          "$ref": "#/definitions/VehicleStatsAuxInputDecoration"
        },
        "auxInput3": {
          "$ref": "#/definitions/VehicleStatsAuxInputDecoration"
        },
        "auxInput4": {
          "$ref": "#/definitions/VehicleStatsAuxInputDecoration"
        },
        "auxInput5": {
          "$ref": "#/definitions/VehicleStatsAuxInputDecoration"
        },
        "auxInput6": {
          "$ref": "#/definitions/VehicleStatsAuxInputDecoration"
        },
        "auxInput7": {
          "$ref": "#/definitions/VehicleStatsAuxInputDecoration"
        },
        "auxInput8": {
          "$ref": "#/definitions/VehicleStatsAuxInputDecoration"
        },
        "auxInput9": {
          "$ref": "#/definitions/VehicleStatsAuxInputDecoration"
        },
        "barometricPressurePa": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsBarometricPressurePaValue"
            }
          }
        },
        "batteryMilliVolts": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsBatteryMilliVoltsValue"
            }
          }
        },
        "defLevelMilliPercent": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsDefLevelMilliPercentValue"
            }
          }
        },
        "ecuSpeedMph": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsEcuSpeedMphValue"
            }
          }
        },
        "engineCoolantTemperatureMilliC": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsEngineCoolantTempMilliCValue"
            }
          }
        },
        "engineImmobilizer": {
          "$ref": "#/definitions/VehicleStatsEngineImmobilizer"
        },
        "engineLoadPercent": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsEngineLoadPercentValue"
            }
          }
        },
        "engineOilPressureKPa": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsEngineOilPressureKPaValue"
            }
          }
        },
        "engineRpm": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsEngineRpmValue"
            }
          }
        },
        "engineStates": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "description": "The state of the engine.",
              "type": "string",
              "enum": [
                "Off",
                "On",
                "Idle"
              ],
              "example": "On"
            }
          }
        },
        "faultCodes": {
          "$ref": "#/definitions/VehicleStatsFaultCodesValue"
        },
        "fuelPercents": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsFuelPercentValue"
            }
          }
        },
        "gps": {
          "type": "object",
          "required": [
            "latitude",
            "longitude"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/VehicleLocationAddress"
            },
            "headingDegrees": {
              "$ref": "#/definitions/VehicleLocationHeading"
            },
            "isEcuSpeed": {
              "$ref": "#/definitions/VehicleLocationIsEcuSpeed"
            },
            "latitude": {
              "$ref": "#/definitions/VehicleLocationLatitude"
            },
            "longitude": {
              "$ref": "#/definitions/VehicleLocationLongitude"
            },
            "reverseGeo": {
              "$ref": "#/definitions/VehicleLocationReverseGeo"
            },
            "speedMilesPerHour": {
              "$ref": "#/definitions/VehicleLocationSpeed"
            }
          }
        },
        "gpsDistanceMeters": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsGpsDistanceMetersValue"
            }
          }
        },
        "gpsOdometerMeters": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsGpsOdometerMetersValue"
            }
          }
        },
        "intakeManifoldTemperatureMilliC": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsIntakeManifoldTempMilliCValue"
            }
          }
        },
        "obdEngineSeconds": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsObdEngineSecondsValue"
            }
          }
        },
        "obdOdometerMeters": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "$ref": "#/definitions/VehicleStatsObdOdometerMetersValue"
            }
          }
        },
        "tirePressure": {
          "$ref": "#/definitions/VehicleStatsTirePressures"
        }
      }
    },
    "VehicleStatsDefLevelMilliPercent": {
      "description": "The Diesel Exhaust Fluid (DEF) milli percentage reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).",
          "type": "integer",
          "format": "int64",
          "maximum": 99999,
          "minimum": 0,
          "example": 54200
        }
      }
    },
    "VehicleStatsDefLevelMilliPercentValue": {
      "description": "The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).",
      "type": "integer",
      "format": "int64",
      "maximum": 99999,
      "minimum": 0,
      "example": 54200
    },
    "VehicleStatsDefLevelMilliPercentWithDecoration": {
      "description": "The Diesel Exhaust Fluid (DEF) milli percentage reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).",
          "type": "integer",
          "format": "int64",
          "maximum": 99999,
          "minimum": 0,
          "example": 54200
        }
      }
    },
    "VehicleStatsEcuSpeedMph": {
      "description": "The speed of the vehicle in miles per hour, as reported by the ECU.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The speed of the vehicle in miles per hour.",
          "type": "number",
          "format": "double",
          "example": 32.1
        }
      }
    },
    "VehicleStatsEcuSpeedMphValue": {
      "description": "The speed of the vehicle in miles per hour, as reported by the ECU.",
      "type": "number",
      "format": "double",
      "example": 58.3
    },
    "VehicleStatsEcuSpeedMphWithDecoration": {
      "description": "The speed of the vehicle in miles per hour, as reported by the ECU.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The speed of the vehicle in miles per hour.",
          "type": "number",
          "format": "double",
          "example": 32.1
        }
      }
    },
    "VehicleStatsEngineCoolantTempMilliC": {
      "description": "Vehicle engine coolant temperature reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The engine coolant temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 31110
        }
      }
    },
    "VehicleStatsEngineCoolantTempMilliCValue": {
      "description": "The engine coolant temperature reading in millidegree Celsius.",
      "type": "integer",
      "format": "int64",
      "example": 31110
    },
    "VehicleStatsEngineCoolantTempMilliCWithDecoration": {
      "description": "Vehicle engine coolant temperature reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The engine coolant temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 31110
        }
      }
    },
    "VehicleStatsEngineImmobilizer": {
      "description": "Data for the engine immobilizer",
      "type": "object",
      "required": [
        "time",
        "state",
        "connected"
      ],
      "properties": {
        "connected": {
          "description": "Whether the engine immobilizer is connected or not",
          "type": "boolean",
          "example": false
        },
        "state": {
          "description": "The state of the engine immobilizer (`ignition_disabled`, `ignition_enabled`)",
          "type": "string",
          "enum": [
            "ignition_disabled",
            "ignition_enabled"
          ],
          "example": "ignition_disabled"
        },
        "time": {
          "$ref": "#/definitions/vehicleStatsAuxInputTime"
        }
      }
    },
    "VehicleStatsEngineImmobilizerWithDecoration": {
      "description": "Data for the engine immobilizer",
      "type": "object",
      "required": [
        "time",
        "state",
        "connected"
      ],
      "properties": {
        "connected": {
          "description": "Whether the engine immobilizer is connected or not",
          "type": "boolean",
          "example": false
        },
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "state": {
          "description": "The state of the engine immobilizer (`ignition_disabled`, `ignition_enabled`)",
          "type": "string",
          "enum": [
            "ignition_disabled",
            "ignition_enabled"
          ],
          "example": "ignition_disabled"
        },
        "time": {
          "$ref": "#/definitions/vehicleStatsAuxInputTime"
        }
      }
    },
    "VehicleStatsEngineLoadPercent": {
      "description": "The engine load percentage reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The engine load in percentage points (e.g. `99`, `50`, etc).",
          "type": "integer",
          "format": "int64",
          "example": 54
        }
      }
    },
    "VehicleStatsEngineLoadPercentValue": {
      "description": "The engine load in percentage points (e.g. `99`, `50`, etc).",
      "type": "integer",
      "format": "int64",
      "example": 54
    },
    "VehicleStatsEngineLoadPercentWithDecoration": {
      "description": "The engine load percentage reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The engine load in percentage points (e.g. `99`, `50`, etc).",
          "type": "integer",
          "format": "int64",
          "example": 54
        }
      }
    },
    "VehicleStatsEngineOilPressureKPa": {
      "description": "Vehicle engine oil pressure reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The engine oil pressure reading in kilopascals.",
          "type": "integer",
          "format": "int64",
          "example": 100
        }
      }
    },
    "VehicleStatsEngineOilPressureKPaValue": {
      "description": "The engine oil pressure reading in kilopascals.",
      "type": "integer",
      "format": "int64",
      "example": 100
    },
    "VehicleStatsEngineOilPressureKPaWithDecoration": {
      "description": "Vehicle engine oil pressure reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The engine oil pressure reading in kilopascals.",
          "type": "integer",
          "format": "int64",
          "example": 100
        }
      }
    },
    "VehicleStatsEngineRpm": {
      "description": "Vehicle engine RPM reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The revolutions per minute of the engine.",
          "type": "integer",
          "format": "int64",
          "example": 1000
        }
      }
    },
    "VehicleStatsEngineRpmValue": {
      "description": "The revolutions per minute of the engine.",
      "type": "integer",
      "format": "int64",
      "example": 1000
    },
    "VehicleStatsEngineRpmWithDecoration": {
      "description": "Vehicle engine RPM reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The revolutions per minute of the engine.",
          "type": "integer",
          "format": "int64",
          "example": 1000
        }
      }
    },
    "VehicleStatsEngineState": {
      "description": "Vehicle engine state event.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "$ref": "#/definitions/VehicleStatsEngineStateSetting"
        }
      }
    },
    "VehicleStatsEngineStateSetting": {
      "description": "The state of the engine.",
      "type": "string",
      "enum": [
        "Off",
        "On",
        "Idle"
      ],
      "example": "On"
    },
    "VehicleStatsEngineStateWithDecoration": {
      "description": "Vehicle engine state event.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "$ref": "#/definitions/VehicleStatsEngineStateSetting"
        }
      }
    },
    "VehicleStatsFaultCodes": {
      "description": "Engine fault codes read from J1939 and OBDII vehicles.",
      "type": "object",
      "required": [
        "time"
      ],
      "properties": {
        "canBusType": {
          "$ref": "#/definitions/VehicleStatsFaultCodesCanBusType"
        },
        "j1939": {
          "$ref": "#/definitions/VehicleStatsFaultCodesJ1939"
        },
        "obdii": {
          "$ref": "#/definitions/VehicleStatsFaultCodesOBDII"
        },
        "time": {
          "$ref": "#/definitions/vehicleStatsAuxInputTime"
        }
      }
    },
    "VehicleStatsFaultCodesCanBusType": {
      "description": "The CAN bus type of the vehicle.",
      "type": "string",
      "example": "CANBUS_J1939_500"
    },
    "VehicleStatsFaultCodesIgnitionType": {
      "description": "The ignition type of this passenger vehicle. Valid values are \"spark\" and \"compression\"",
      "type": "string",
      "enum": [
        "spark",
        "compression"
      ]
    },
    "VehicleStatsFaultCodesJ1939": {
      "description": "Vehicle fault codes for J1939 vehicles.",
      "type": "object",
      "properties": {
        "checkEngineLights": {
          "$ref": "#/definitions/VehicleStatsFaultCodesJ1939Lights"
        },
        "diagnosticTroubleCodes": {
          "$ref": "#/definitions/VehicleStatsFaultCodesJ1939TroubleCodes"
        }
      }
    },
    "VehicleStatsFaultCodesJ1939Lights": {
      "description": "Status of engine lights on J1939 vehicles.",
      "type": "object",
      "required": [
        "emissionsIsOn",
        "protectIsOn",
        "stopIsOn",
        "warningIsOn"
      ],
      "properties": {
        "emissionsIsOn": {
          "description": "True if the MIL status is nonzero.",
          "type": "boolean",
          "example": true
        },
        "protectIsOn": {
          "description": "True if the engine protect lamp status is nonzero.",
          "type": "boolean",
          "example": false
        },
        "stopIsOn": {
          "description": "True if the red lamp status is nonzero.",
          "type": "boolean",
          "example": false
        },
        "warningIsOn": {
          "description": "True if the amber lamp status is nonzero.",
          "type": "boolean",
          "example": false
        }
      }
    },
    "VehicleStatsFaultCodesJ1939TroubleCode": {
      "description": "Diagnostic trouble code for J1939 vehicles.",
      "type": "object",
      "required": [
        "txId",
        "fmiId",
        "spnId",
        "occurrenceCount",
        "milStatus"
      ],
      "properties": {
        "fmiDescription": {
          "description": "A short description of the FMI identifier, if available.",
          "type": "string",
          "example": "Voltage Below Normal"
        },
        "fmiId": {
          "description": "The FMI identifier.",
          "type": "integer",
          "format": "int32",
          "example": 9
        },
        "milStatus": {
          "description": "The MIL status, indicating a check engine light.",
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "occurrenceCount": {
          "description": "The number of times this fault has triggered.",
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "sourceAddressName": {
          "description": "The source address name corresponding to the txId",
          "type": "string",
          "example": "Engine #1"
        },
        "spnDescription": {
          "description": "A short description of the SPN identifier, if available.",
          "type": "string",
          "example": "System Diagnostic Code #1"
        },
        "spnId": {
          "description": "The SPN identifier.",
          "type": "integer",
          "format": "int32",
          "example": 3031
        },
        "txId": {
          "$ref": "#/definitions/VehicleStatsFaultCodesTxId"
        },
        "vendorSpecificFields": {
          "$ref": "#/definitions/VehicleStatsFaultCodesVendorSpecificFields"
        }
      }
    },
    "VehicleStatsFaultCodesJ1939TroubleCodes": {
      "description": "Diagnostic trouble codes for J1939 vehicles.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/VehicleStatsFaultCodesJ1939TroubleCode"
      }
    },
    "VehicleStatsFaultCodesOBDII": {
      "description": "Vehicle fault codes for passenger vehicles.",
      "type": "object",
      "properties": {
        "checkEngineLightIsOn": {
          "description": "True if the check engine light is illuminated (MIL status field is nonzero for any faults).",
          "type": "boolean",
          "example": true
        },
        "diagnosticTroubleCodes": {
          "description": "Diagnostic trouble codes for passenger vehicles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleStatsFaultCodesOBDIITroubleCode"
          }
        }
      }
    },
    "VehicleStatsFaultCodesOBDIITroubleCode": {
      "description": "Diagnostic trouble code for passenger vehicles.",
      "type": "object",
      "required": [
        "txId"
      ],
      "properties": {
        "confirmedDtcs": {
          "description": "Confirmed DTC codes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleStatsFaultCodesPassengerDtc"
          }
        },
        "ignitionType": {
          "$ref": "#/definitions/VehicleStatsFaultCodesIgnitionType"
        },
        "milStatus": {
          "description": "The MIL status, indicating a check engine light.",
          "type": "boolean",
          "example": true
        },
        "monitorStatus": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatus"
        },
        "pendingDtcs": {
          "description": "Pending DTC codes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleStatsFaultCodesPassengerDtc"
          }
        },
        "permanentDtcs": {
          "description": "Permanent DTC codes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleStatsFaultCodesPassengerDtc"
          }
        },
        "txId": {
          "$ref": "#/definitions/VehicleStatsFaultCodesTxId"
        }
      }
    },
    "VehicleStatsFaultCodesPassengerDtc": {
      "description": "Passenger vehicle DTC information",
      "type": "object",
      "required": [
        "dtcId"
      ],
      "properties": {
        "dtcDescription": {
          "description": "The DTC description, if available.",
          "type": "string",
          "example": "Fuel Rail/System Pressure - Too Low Bank 1"
        },
        "dtcId": {
          "description": "The DTC identifier.",
          "type": "integer",
          "format": "int32",
          "example": 135
        },
        "dtcShortCode": {
          "description": "The DTC short code, if available.",
          "type": "string",
          "example": "P0087"
        }
      }
    },
    "VehicleStatsFaultCodesPassengerMonitorStatus": {
      "description": "Readings from engine sensors",
      "type": "object",
      "properties": {
        "catalyst": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatusValue"
        },
        "comprehensive": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatusValue"
        },
        "egr": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatusValue"
        },
        "evapSystem": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatusValue"
        },
        "fuel": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatusValue"
        },
        "heatedCatalyst": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatusValue"
        },
        "heatedO2Sensor": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatusValue"
        },
        "isoSaeReserved": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatusValue"
        },
        "misfire": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatusValue"
        },
        "notReadyCount": {
          "description": "Count of the number of sensors reporting N: Not Complete",
          "type": "integer"
        },
        "o2Sensor": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatusValue"
        },
        "secondaryAir": {
          "$ref": "#/definitions/VehicleStatsFaultCodesPassengerMonitorStatusValue"
        }
      }
    },
    "VehicleStatsFaultCodesPassengerMonitorStatusValue": {
      "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
      "type": "string",
      "enum": [
        "N",
        "R",
        "U"
      ]
    },
    "VehicleStatsFaultCodesTxId": {
      "description": "The TX identifier.",
      "type": "integer",
      "format": "int32",
      "example": 0
    },
    "VehicleStatsFaultCodesValue": {
      "description": "Fault codes for the vehicle",
      "type": "object",
      "properties": {
        "canBusType": {
          "description": "The CAN bus type of the vehicle.",
          "type": "string",
          "example": "CANBUS_J1939_500"
        },
        "j1939": {
          "description": "Vehicle fault codes for J1939 vehicles.",
          "type": "object",
          "properties": {
            "checkEngineLights": {
              "description": "Status of engine lights on J1939 vehicles.",
              "type": "object",
              "required": [
                "emissionsIsOn",
                "protectIsOn",
                "stopIsOn",
                "warningIsOn"
              ],
              "properties": {
                "emissionsIsOn": {
                  "description": "True if the MIL status is nonzero.",
                  "type": "boolean",
                  "example": true
                },
                "protectIsOn": {
                  "description": "True if the engine protect lamp status is nonzero.",
                  "type": "boolean",
                  "example": false
                },
                "stopIsOn": {
                  "description": "True if the red lamp status is nonzero.",
                  "type": "boolean",
                  "example": false
                },
                "warningIsOn": {
                  "description": "True if the amber lamp status is nonzero.",
                  "type": "boolean",
                  "example": false
                }
              }
            },
            "diagnosticTroubleCodes": {
              "description": "Diagnostic trouble codes for J1939 vehicles.",
              "type": "array",
              "items": {
                "description": "Diagnostic trouble code for J1939 vehicles.",
                "type": "object",
                "required": [
                  "txId",
                  "fmiId",
                  "spnId",
                  "occurrenceCount",
                  "milStatus"
                ],
                "properties": {
                  "fmiDescription": {
                    "description": "A short description of the FMI identifier, if available.",
                    "type": "string",
                    "example": "Voltage Below Normal"
                  },
                  "fmiId": {
                    "description": "The FMI identifier.",
                    "type": "integer",
                    "format": "int32",
                    "example": 9
                  },
                  "milStatus": {
                    "description": "The MIL status, indicating a check engine light.",
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "occurrenceCount": {
                    "description": "The number of times this fault has triggered.",
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "sourceAddressName": {
                    "description": "The source address name corresponding to the txId",
                    "type": "string",
                    "example": "Engine #1"
                  },
                  "spnDescription": {
                    "description": "A short description of the SPN identifier, if available.",
                    "type": "string",
                    "example": "System Diagnostic Code #1"
                  },
                  "spnId": {
                    "description": "The SPN identifier.",
                    "type": "integer",
                    "format": "int32",
                    "example": 3031
                  },
                  "txId": {
                    "description": "The TX identifier.",
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  },
                  "vendorSpecificFields": {
                    "description": "Vendor specific data for J1939 vehicles.",
                    "type": "object",
                    "properties": {
                      "dtcDescription": {
                        "description": "The DTC description, if available.",
                        "type": "string",
                        "example": false
                      },
                      "repairInstructionsUrl": {
                        "description": "A link to vendor repair instructions, if available.",
                        "type": "string",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "obdii": {
          "description": "Vehicle fault codes for passenger vehicles.",
          "type": "object",
          "properties": {
            "checkEngineLightIsOn": {
              "description": "True if the check engine light is illuminated (MIL status field is nonzero for any faults).",
              "type": "boolean",
              "example": true
            },
            "diagnosticTroubleCodes": {
              "description": "Diagnostic trouble codes for passenger vehicles.",
              "type": "array",
              "items": {
                "description": "Diagnostic trouble code for passenger vehicles.",
                "type": "object",
                "required": [
                  "txId"
                ],
                "properties": {
                  "confirmedDtcs": {
                    "description": "Confirmed DTC codes.",
                    "type": "array",
                    "items": {
                      "description": "Passenger vehicle DTC information",
                      "type": "object",
                      "required": [
                        "dtcId"
                      ],
                      "properties": {
                        "dtcDescription": {
                          "description": "The DTC description, if available.",
                          "type": "string",
                          "example": "Fuel Rail/System Pressure - Too Low Bank 1"
                        },
                        "dtcId": {
                          "description": "The DTC identifier.",
                          "type": "integer",
                          "format": "int32",
                          "example": 135
                        },
                        "dtcShortCode": {
                          "description": "The DTC short code, if available.",
                          "type": "string",
                          "example": "P0087"
                        }
                      }
                    }
                  },
                  "ignitionType": {
                    "description": "The ignition type of this passenger vehicle. Valid values are \"spark\" and \"compression\"",
                    "type": "string",
                    "enum": [
                      "spark",
                      "compression"
                    ]
                  },
                  "milStatus": {
                    "description": "The MIL status, indicating a check engine light.",
                    "type": "boolean",
                    "example": true
                  },
                  "monitorStatus": {
                    "description": "Readings from engine sensors",
                    "type": "object",
                    "properties": {
                      "catalyst": {
                        "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
                        "type": "string",
                        "enum": [
                          "N",
                          "R",
                          "U"
                        ]
                      },
                      "comprehensive": {
                        "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
                        "type": "string",
                        "enum": [
                          "N",
                          "R",
                          "U"
                        ]
                      },
                      "egr": {
                        "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
                        "type": "string",
                        "enum": [
                          "N",
                          "R",
                          "U"
                        ]
                      },
                      "evapSystem": {
                        "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
                        "type": "string",
                        "enum": [
                          "N",
                          "R",
                          "U"
                        ]
                      },
                      "fuel": {
                        "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
                        "type": "string",
                        "enum": [
                          "N",
                          "R",
                          "U"
                        ]
                      },
                      "heatedCatalyst": {
                        "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
                        "type": "string",
                        "enum": [
                          "N",
                          "R",
                          "U"
                        ]
                      },
                      "heatedO2Sensor": {
                        "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
                        "type": "string",
                        "enum": [
                          "N",
                          "R",
                          "U"
                        ]
                      },
                      "isoSaeReserved": {
                        "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
                        "type": "string",
                        "enum": [
                          "N",
                          "R",
                          "U"
                        ]
                      },
                      "misfire": {
                        "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
                        "type": "string",
                        "enum": [
                          "N",
                          "R",
                          "U"
                        ]
                      },
                      "notReadyCount": {
                        "description": "Count of the number of sensors reporting N: Not Complete",
                        "type": "integer"
                      },
                      "o2Sensor": {
                        "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
                        "type": "string",
                        "enum": [
                          "N",
                          "R",
                          "U"
                        ]
                      },
                      "secondaryAir": {
                        "description": "Enum of monitor status:\n-U: Unsupported\n-N: Not Complete\n-R: Complete\n",
                        "type": "string",
                        "enum": [
                          "N",
                          "R",
                          "U"
                        ]
                      }
                    }
                  },
                  "pendingDtcs": {
                    "description": "Pending DTC codes.",
                    "type": "array",
                    "items": {
                      "description": "Passenger vehicle DTC information",
                      "type": "object",
                      "required": [
                        "dtcId"
                      ],
                      "properties": {
                        "dtcDescription": {
                          "description": "The DTC description, if available.",
                          "type": "string",
                          "example": "Fuel Rail/System Pressure - Too Low Bank 1"
                        },
                        "dtcId": {
                          "description": "The DTC identifier.",
                          "type": "integer",
                          "format": "int32",
                          "example": 135
                        },
                        "dtcShortCode": {
                          "description": "The DTC short code, if available.",
                          "type": "string",
                          "example": "P0087"
                        }
                      }
                    }
                  },
                  "permanentDtcs": {
                    "description": "Permanent DTC codes.",
                    "type": "array",
                    "items": {
                      "description": "Passenger vehicle DTC information",
                      "type": "object",
                      "required": [
                        "dtcId"
                      ],
                      "properties": {
                        "dtcDescription": {
                          "description": "The DTC description, if available.",
                          "type": "string",
                          "example": "Fuel Rail/System Pressure - Too Low Bank 1"
                        },
                        "dtcId": {
                          "description": "The DTC identifier.",
                          "type": "integer",
                          "format": "int32",
                          "example": 135
                        },
                        "dtcShortCode": {
                          "description": "The DTC short code, if available.",
                          "type": "string",
                          "example": "P0087"
                        }
                      }
                    }
                  },
                  "txId": {
                    "description": "The TX identifier.",
                    "type": "integer",
                    "format": "int32",
                    "example": 0
                  }
                }
              }
            }
          }
        }
      }
    },
    "VehicleStatsFaultCodesVendorSpecificFields": {
      "description": "Vendor specific data for J1939 vehicles.",
      "type": "object",
      "properties": {
        "dtcDescription": {
          "description": "The DTC description, if available.",
          "type": "string",
          "example": false
        },
        "repairInstructionsUrl": {
          "description": "A link to vendor repair instructions, if available.",
          "type": "string",
          "example": false
        }
      }
    },
    "VehicleStatsFaultCodesWithDecoration": {
      "description": "Engine fault codes read from J1939 and OBDII vehicles.",
      "type": "object",
      "required": [
        "time"
      ],
      "properties": {
        "canBusType": {
          "$ref": "#/definitions/VehicleStatsFaultCodesCanBusType"
        },
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "j1939": {
          "$ref": "#/definitions/VehicleStatsFaultCodesJ1939"
        },
        "obdii": {
          "$ref": "#/definitions/VehicleStatsFaultCodesOBDII"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        }
      }
    },
    "VehicleStatsFuelPercent": {
      "description": "Vehicle fuel percentage reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The engine fuel level in percentage points (e.g. `99`, `50`, etc).",
          "type": "integer",
          "format": "int64",
          "example": 54
        }
      }
    },
    "VehicleStatsFuelPercentValue": {
      "description": "The engine fuel level in percentage points (e.g. `99`, `50`, etc).",
      "type": "integer",
      "format": "int64",
      "example": 54
    },
    "VehicleStatsFuelPercentWithDecoration": {
      "description": "Vehicle fuel percentage reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The engine fuel level in percentage points (e.g. `99`, `50`, etc).",
          "type": "integer",
          "format": "int64",
          "example": 54
        }
      }
    },
    "VehicleStatsGps": {
      "description": "GPS location data for the vehicle.",
      "type": "object",
      "required": [
        "latitude",
        "longitude",
        "time"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/VehicleLocationAddress"
        },
        "headingDegrees": {
          "$ref": "#/definitions/VehicleLocationHeading"
        },
        "isEcuSpeed": {
          "$ref": "#/definitions/VehicleLocationIsEcuSpeed"
        },
        "latitude": {
          "$ref": "#/definitions/VehicleLocationLatitude"
        },
        "longitude": {
          "$ref": "#/definitions/VehicleLocationLongitude"
        },
        "reverseGeo": {
          "$ref": "#/definitions/VehicleLocationReverseGeo"
        },
        "speedMilesPerHour": {
          "$ref": "#/definitions/VehicleLocationSpeed"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        }
      }
    },
    "VehicleStatsGpsDistanceMeters": {
      "description": "Vehicle GPS distance event.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "Number of meters the vehicle has traveled since the gateway was installed, based on GPS calculations.",
          "type": "number",
          "format": "double",
          "example": 81029.591434899
        }
      }
    },
    "VehicleStatsGpsDistanceMetersValue": {
      "description": "Number of meters the vehicle has traveled since the gateway was installed, based on GPS calculations.",
      "type": "number",
      "format": "double",
      "example": 81029.591434899
    },
    "VehicleStatsGpsDistanceMetersWithDecoration": {
      "description": "Vehicle GPS distance event.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "Number of meters the vehicle has traveled since the gateway was installed, based on GPS calculations.",
          "type": "number",
          "format": "double",
          "example": 81029.591434899
        }
      }
    },
    "VehicleStatsGpsOdometerMeters": {
      "description": "Vehicle GPS odometer event.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "Number of meters the vehicle has traveled according to the GPS calculations and the manually-specified odometer reading.",
          "type": "integer",
          "format": "int64",
          "example": 14010293
        }
      }
    },
    "VehicleStatsGpsOdometerMetersValue": {
      "description": "Number of meters the vehicle has traveled according to the GPS calculations and the manually-specified odometer reading.",
      "type": "integer",
      "format": "int64",
      "example": 14010293
    },
    "VehicleStatsGpsOdometerMetersWithDecoration": {
      "description": "Vehicle GPS odometer event.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "Number of meters the vehicle has traveled according to the GPS calculations and the manually-specified odometer reading.",
          "type": "integer",
          "format": "int64",
          "example": 14010293
        }
      }
    },
    "VehicleStatsIntakeManifoldTempMilliC": {
      "description": "Vehicle intake manifold temperature reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The intake manifold temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 88000
        }
      }
    },
    "VehicleStatsIntakeManifoldTempMilliCValue": {
      "description": "The intake manifold temperature reading in millidegree Celsius.",
      "type": "integer",
      "format": "int64",
      "example": 88000
    },
    "VehicleStatsIntakeManifoldTempMilliCWithDecoration": {
      "description": "Vehicle intake manifold temperature reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "The intake manifold temperature reading in millidegree Celsius.",
          "type": "integer",
          "format": "int64",
          "example": 88000
        }
      }
    },
    "VehicleStatsListGps": {
      "description": "GPS location data for the vehicle.",
      "type": "object",
      "required": [
        "latitude",
        "longitude",
        "time"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/VehicleLocationAddress"
        },
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "headingDegrees": {
          "$ref": "#/definitions/VehicleLocationHeading"
        },
        "isEcuSpeed": {
          "$ref": "#/definitions/VehicleLocationIsEcuSpeed"
        },
        "latitude": {
          "$ref": "#/definitions/VehicleLocationLatitude"
        },
        "longitude": {
          "$ref": "#/definitions/VehicleLocationLongitude"
        },
        "reverseGeo": {
          "$ref": "#/definitions/VehicleLocationReverseGeo"
        },
        "speedMilesPerHour": {
          "$ref": "#/definitions/VehicleLocationSpeed"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        }
      }
    },
    "VehicleStatsListResponse": {
      "description": "List of vehicle stat events and pagination info.",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "A list of vehicles and an array of stat events for each vehicle.",
          "type": "array",
          "required": [
            "id",
            "name"
          ],
          "items": {
            "description": "A vehicle and its list of stat events.",
            "type": "object",
            "properties": {
              "ambientAirTemperatureMilliC": {
                "description": "A list of ambient air temperature readings in millidegree Celsius for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsAmbientAirTempMilliCWithDecoration"
                }
              },
              "auxInput1": {
                "description": "A list of auxiliary equipment states.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsAuxInputWithDecoration"
                }
              },
              "auxInput10": {
                "description": "A list of auxiliary equipment states.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsAuxInputWithDecoration"
                }
              },
              "auxInput2": {
                "description": "A list of auxiliary equipment states.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsAuxInputWithDecoration"
                }
              },
              "auxInput3": {
                "description": "A list of auxiliary equipment states.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsAuxInputWithDecoration"
                }
              },
              "auxInput4": {
                "description": "A list of auxiliary equipment states.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsAuxInputWithDecoration"
                }
              },
              "auxInput5": {
                "description": "A list of auxiliary equipment states.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsAuxInputWithDecoration"
                }
              },
              "auxInput6": {
                "description": "A list of auxiliary equipment states.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsAuxInputWithDecoration"
                }
              },
              "auxInput7": {
                "description": "A list of auxiliary equipment states.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsAuxInputWithDecoration"
                }
              },
              "auxInput8": {
                "description": "A list of auxiliary equipment states.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsAuxInputWithDecoration"
                }
              },
              "auxInput9": {
                "description": "A list of auxiliary equipment states.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsAuxInputWithDecoration"
                }
              },
              "barometricPressurePa": {
                "description": "A list of barometric pressure readings in pascals for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsBarometricPressurePaWithDecoration"
                }
              },
              "batteryMilliVolts": {
                "description": "A list of battery levels in milliVolts for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsBatteryVoltageWithDecoration"
                }
              },
              "defLevelMilliPercent": {
                "description": "A list of DEF level milli percentage readings for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsDefLevelMilliPercentWithDecoration"
                }
              },
              "ecuSpeedMph": {
                "description": "A list of the speeds of the vehicle in miles per hour, as reported by the ECU.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsEcuSpeedMphWithDecoration"
                }
              },
              "engineCoolantTemperatureMilliC": {
                "description": "A list of engine coolant temperature readings in millidegree Celsius for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsEngineCoolantTempMilliCWithDecoration"
                }
              },
              "engineImmobilizer": {
                "description": "A list of engine immobilizer data for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsEngineImmobilizerWithDecoration"
                }
              },
              "engineLoadPercent": {
                "description": "A list of engine load percentage readings for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsEngineLoadPercentWithDecoration"
                }
              },
              "engineOilPressureKPa": {
                "description": "A list of engine oil pressure readings in kilopascals for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsEngineOilPressureKPaWithDecoration"
                }
              },
              "engineRpm": {
                "description": "A list engine RPM values for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsEngineRpmWithDecoration"
                }
              },
              "engineStates": {
                "description": "A list of engine state events for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsEngineStateWithDecoration"
                }
              },
              "faultCodes": {
                "description": "A list of engine fault codes.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsFaultCodesWithDecoration"
                }
              },
              "fuelPercents": {
                "description": "A list of fuel percentage readings for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsFuelPercentWithDecoration"
                }
              },
              "gps": {
                "description": "A list of GPS location events for the given vehicles.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsListGps"
                }
              },
              "gpsDistanceMeters": {
                "description": "A list of GPS distance events for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsGpsDistanceMetersWithDecoration"
                }
              },
              "gpsOdometerMeters": {
                "description": "A list of GPS odometer events for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsGpsOdometerMetersWithDecoration"
                }
              },
              "id": {
                "$ref": "#/definitions/VehicleId"
              },
              "intakeManifoldTemperatureMilliC": {
                "description": "A list of intake manifold temperature readings in millidegree Celsius for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsIntakeManifoldTempMilliCWithDecoration"
                }
              },
              "name": {
                "$ref": "#/definitions/VehicleName"
              },
              "nfcCardScans": {
                "description": "A list of NFC cards that were scanned for the given vehicles.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsNfcCardScanWithDecoration"
                }
              },
              "obdEngineSeconds": {
                "description": "A list of OBD engine seconds readings for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsObdEngineSecondsWithDecoration"
                }
              },
              "obdOdometerMeters": {
                "description": "A list of OBD odometer readings for the given vehicle.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsObdOdometerMetersWithDecoration"
                }
              },
              "syntheticEngineSeconds": {
                "description": "A list of synthetic engine seconds values.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/VehicleStatsListSyntheticEngineSeconds"
                }
              }
            }
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "VehicleStatsListSyntheticEngineSeconds": {
      "description": "A list of synthetic engine seconds for the vehicle.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/vehicleStatsAuxInputTime"
        },
        "value": {
          "$ref": "#/definitions/VehicleStatsSyntheticEngineSecondsValue"
        }
      }
    },
    "VehicleStatsNfcCardScan": {
      "description": "Data for the nfc card and the time that it was scanned.",
      "type": "object",
      "required": [
        "time",
        "card"
      ],
      "properties": {
        "card": {
          "description": "The card that was scanned.",
          "type": "object",
          "properties": {
            "id": {
              "description": "The id code of the card that was scanned.",
              "type": "string",
              "example": "835063"
            }
          }
        },
        "time": {
          "$ref": "#/definitions/vehicleStatsAuxInputTime"
        }
      }
    },
    "VehicleStatsNfcCardScanWithDecoration": {
      "description": "Data for the nfc card and the time that it was scanned.",
      "type": "object",
      "required": [
        "time",
        "card"
      ],
      "properties": {
        "card": {
          "description": "The card that was scanned.",
          "type": "object",
          "properties": {
            "id": {
              "description": "The id code of the card that was scanned.",
              "type": "string",
              "example": "835063"
            }
          }
        },
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/vehicleStatsAuxInputTime"
        }
      }
    },
    "VehicleStatsObdEngineSeconds": {
      "description": "Vehicle OBD engine seconds reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "Number of seconds the vehicle's engine has been on according to the on-board diagnostics.",
          "type": "integer",
          "format": "int64",
          "example": 9723103
        }
      }
    },
    "VehicleStatsObdEngineSecondsValue": {
      "description": "Number of seconds the vehicle's engine has been on according to the on-board diagnostics.",
      "type": "integer",
      "format": "int64",
      "example": 9723103
    },
    "VehicleStatsObdEngineSecondsWithDecoration": {
      "description": "Vehicle OBD engine seconds reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "Number of seconds the vehicle's engine has been on according to the on-board diagnostics.",
          "type": "integer",
          "format": "int64",
          "example": 9723103
        }
      }
    },
    "VehicleStatsObdOdometerMeters": {
      "description": "Vehicle OBD odometer reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "Number of meters the vehicle has traveled according to the on-board diagnostics.",
          "type": "integer",
          "format": "int64",
          "example": 14010293
        }
      }
    },
    "VehicleStatsObdOdometerMetersValue": {
      "description": "Number of meters the vehicle has traveled according to the on-board diagnostics.",
      "type": "integer",
      "format": "int64",
      "example": 14010293
    },
    "VehicleStatsObdOdometerMetersWithDecoration": {
      "description": "Vehicle OBD odometer reading.",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "description": "Number of meters the vehicle has traveled according to the on-board diagnostics.",
          "type": "integer",
          "format": "int64",
          "example": 14010293
        }
      }
    },
    "VehicleStatsResponse": {
      "description": "Vehicle stats snapshot and pagination info.",
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of vehicles and a snapshot of the request stats.",
          "type": "array",
          "items": {
            "description": "A vehicle and its most recent stat.",
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "ambientAirTemperatureMilliC": {
                "$ref": "#/definitions/VehicleStatsAmbientAirTempMilliC"
              },
              "auxInput1": {
                "$ref": "#/definitions/VehicleStatsAuxInput"
              },
              "auxInput10": {
                "$ref": "#/definitions/VehicleStatsAuxInput"
              },
              "auxInput2": {
                "$ref": "#/definitions/VehicleStatsAuxInput"
              },
              "auxInput3": {
                "$ref": "#/definitions/VehicleStatsAuxInput"
              },
              "auxInput4": {
                "$ref": "#/definitions/VehicleStatsAuxInput"
              },
              "auxInput5": {
                "$ref": "#/definitions/VehicleStatsAuxInput"
              },
              "auxInput6": {
                "$ref": "#/definitions/VehicleStatsAuxInput"
              },
              "auxInput7": {
                "$ref": "#/definitions/VehicleStatsAuxInput"
              },
              "auxInput8": {
                "$ref": "#/definitions/VehicleStatsAuxInput"
              },
              "auxInput9": {
                "$ref": "#/definitions/VehicleStatsAuxInput"
              },
              "barometricPressurePa": {
                "$ref": "#/definitions/VehicleStatsBarometricPressurePa"
              },
              "batteryMilliVolts": {
                "$ref": "#/definitions/VehicleStatsBatteryVoltage"
              },
              "defLevelMilliPercent": {
                "$ref": "#/definitions/VehicleStatsDefLevelMilliPercent"
              },
              "ecuSpeedMph": {
                "$ref": "#/definitions/VehicleStatsEcuSpeedMph"
              },
              "engineCoolantTemperatureMilliC": {
                "$ref": "#/definitions/VehicleStatsEngineCoolantTempMilliC"
              },
              "engineImmobilizer": {
                "$ref": "#/definitions/VehicleStatsEngineImmobilizer"
              },
              "engineLoadPercent": {
                "$ref": "#/definitions/VehicleStatsEngineLoadPercent"
              },
              "engineOilPressureKPa": {
                "$ref": "#/definitions/VehicleStatsEngineOilPressureKPa"
              },
              "engineRpm": {
                "$ref": "#/definitions/VehicleStatsEngineRpm"
              },
              "engineState": {
                "$ref": "#/definitions/VehicleStatsEngineState"
              },
              "faultCodes": {
                "$ref": "#/definitions/VehicleStatsFaultCodes"
              },
              "fuelPercent": {
                "$ref": "#/definitions/VehicleStatsFuelPercent"
              },
              "gps": {
                "$ref": "#/definitions/VehicleStatsGps"
              },
              "gpsDistanceMeters": {
                "$ref": "#/definitions/VehicleStatsGpsDistanceMeters"
              },
              "gpsOdometerMeters": {
                "$ref": "#/definitions/VehicleStatsGpsOdometerMeters"
              },
              "id": {
                "$ref": "#/definitions/VehicleId"
              },
              "intakeManifoldTemperatureMilliC": {
                "$ref": "#/definitions/VehicleStatsIntakeManifoldTempMilliC"
              },
              "name": {
                "$ref": "#/definitions/VehicleName"
              },
              "nfcCardScan": {
                "$ref": "#/definitions/VehicleStatsNfcCardScan"
              },
              "obdEngineSeconds": {
                "$ref": "#/definitions/VehicleStatsObdEngineSeconds"
              },
              "obdOdometerMeters": {
                "$ref": "#/definitions/VehicleStatsObdOdometerMeters"
              },
              "syntheticEngineSeconds": {
                "$ref": "#/definitions/VehicleStatsSyntheticEngineSeconds"
              }
            }
          }
        },
        "pagination": {
          "$ref": "#/definitions/paginationResponse"
        }
      }
    },
    "VehicleStatsSyntheticEngineSeconds": {
      "description": "Data for the synthetic engine seconds for the vehicle",
      "type": "object",
      "required": [
        "time",
        "value"
      ],
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/vehicleStatsAuxInputTime"
        },
        "value": {
          "$ref": "#/definitions/VehicleStatsSyntheticEngineSecondsValue"
        }
      }
    },
    "VehicleStatsSyntheticEngineSecondsValue": {
      "description": "Stats for the number of seconds the vehicle's engine has been on, calculated based on a manually-specified engine seconds reading and the number of seconds the vehicle has been on according to the engine state changes reported to the vehicle gateway since that reading was set. This stat will not be present for any vehicle that does not have the engine seconds reading set. The engine seconds reading can be set from the UI on the vehicle details page.",
      "type": "integer",
      "format": "int64",
      "example": 14010293
    },
    "VehicleStatsTime": {
      "$ref": "#/definitions/time"
    },
    "VehicleStatsTirePressure": {
      "description": "Vehicle tire pressure readings.",
      "type": "object",
      "properties": {
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "$ref": "#/definitions/VehicleStatsTirePressures"
        }
      }
    },
    "VehicleStatsTirePressureWithDecoration": {
      "description": "Vehicle tire pressure readings.",
      "type": "object",
      "properties": {
        "decorations": {
          "$ref": "#/definitions/VehicleStatsDecorations"
        },
        "time": {
          "$ref": "#/definitions/VehicleStatsTime"
        },
        "value": {
          "$ref": "#/definitions/VehicleStatsTirePressures"
        }
      }
    },
    "VehicleStatsTirePressures": {
      "description": "Tire pressure readings for each of four tires in kilopascals.",
      "type": "object",
      "properties": {
        "backLeftTirePressureKPa": {
          "description": "The tire pressure of the rear left tire as seen when standing behind the vehicle in kilopascals.",
          "type": "integer",
          "format": "int64",
          "example": 200
        },
        "backRightTirePressureKPa": {
          "description": "The tire pressure of the rear right tire as seen when standing behind the vehicle in kilopascals.",
          "type": "integer",
          "format": "int64",
          "example": 200
        },
        "frontLeftTirePressureKPa": {
          "description": "The tire pressure of the front left tire as seen when standing behind the vehicle in kilopascals.",
          "type": "integer",
          "format": "int64",
          "example": 200
        },
        "frontRightTirePressureKPa": {
          "description": "The tire pressure of the front right tire as seen when standing behind the vehicle in kilopascals.",
          "type": "integer",
          "format": "int64",
          "example": 200
        }
      }
    },
    "VehicleSummary": {
      "type": "object",
      "properties": {
        "distanceDrivenMeters": {
          "$ref": "#/definitions/DistanceDrivenMeters"
        },
        "driveTimeDurationMs": {
          "$ref": "#/definitions/DriveTimeDurationMs"
        },
        "fuelConsumedMl": {
          "$ref": "#/definitions/FuelConsumedMl"
        },
        "idleTimeDurationMs": {
          "$ref": "#/definitions/IdleTimeDurationMs"
        },
        "powerTakeOffDurationMs": {
          "$ref": "#/definitions/PowerTakeOffDurationMs"
        },
        "vehicle": {
          "$ref": "#/definitions/vehicleTinyResponse"
        }
      }
    },
    "VehicleTagIds": {
      "description": "An array of IDs of tags to associate with this vehicle.",
      "type": "array",
      "items": {
        "type": "string",
        "example": "321"
      }
    },
    "VehicleTags": {
      "description": "The list of \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043275091-Creating-and-Using-Tags\" target=\"_blank\"\u003etags\u003c/a\u003e associated with the Vehicle. **By default**: empty. Can be set or updated through the Samsara Dashboard or the API at any time.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/tagTinyResponse"
      }
    },
    "VehicleVin": {
      "description": "The VIN of the Vehicle. Most of the time, this will be automatically read from the engine computer by the Samsara Vehicle Gateway. It will be empty if it cannot be read. It can be set or updated through the Samsara Dashboard or the API at any time.",
      "type": "string",
      "maxLength": 17,
      "minLength": 11,
      "example": "1FUJA6BD31LJ09646"
    },
    "VehicleYear": {
      "description": "The Vehicle’s manufacturing model. Automatically read from the engine computer if available. Empty if not available. Cannot be manually set.",
      "type": "string",
      "example": "2008"
    },
    "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsBadGatewayErrorResponseBody": {
      "description": "Bad Gateway",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "rpc error: code = Unknown desc = connection refused"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsBadRequestErrorResponseBody": {
      "description": "Bad Request parameters",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid value for parameter."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsGatewayTimeoutErrorResponseBody": {
      "description": "Gateway timeout",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsInternalServerErrorResponseBody": {
      "description": "An internal server error occurred",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Failed to execute GraphQL query."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsMethodNotAllowedErrorResponseBody": {
      "description": "Method not allowed",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "DELETE not allowed on /endpoint."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsNotFoundErrorResponseBody": {
      "description": "Resource not found",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Object not found."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsNotImplementedErrorResponseBody": {
      "description": "Requested endpoint is not yet implemented",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Not implemented."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsResponseBody": {
      "type": "object",
      "required": [
        "data",
        "pagination"
      ],
      "properties": {
        "data": {
          "description": "List of vehicles and their driver assignments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehiclesDriverAssignmentsObjectResponseBody"
          }
        },
        "pagination": {
          "$ref": "#/definitions/GoaPaginationResponseResponseBody"
        }
      }
    },
    "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsServiceUnavailableErrorResponseBody": {
      "description": "Service unavailable",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "context deadline exceeded"
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsTooManyRequestsErrorResponseBody": {
      "description": "Too many requests",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Exceeded rate limit."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "VehiclesDriverAssignmentsGetVehiclesDriverAssignmentsUnauthorizedErrorResponseBody": {
      "description": "Unauthorized",
      "type": "object",
      "required": [
        "message",
        "requestId"
      ],
      "properties": {
        "message": {
          "description": "Message of error",
          "type": "string",
          "example": "Invalid token."
        },
        "requestId": {
          "description": "The request ID; used when reaching out to support for issues with requests.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "VehiclesDriverAssignmentsObjectResponseBody": {
      "type": "object",
      "required": [
        "id",
        "driverAssignments"
      ],
      "properties": {
        "driverAssignments": {
          "description": "List of driver assignment objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DriverAssignmentObjectResponseBody"
          }
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "ID of the vehicle.",
          "type": "string",
          "example": "494123"
        },
        "name": {
          "description": "Name of the vehicle.",
          "type": "string",
          "example": "Bus-123"
        }
      }
    },
    "attributeTiny": {
      "description": "[beta] A minified attribute.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The samsara id of the attribute object.",
          "type": "string",
          "example": "123e4567-e89b-12d3-a456-426614174000"
        },
        "name": {
          "description": "Name of attribute.",
          "type": "string",
          "example": "License Certifications"
        },
        "numberValues": {
          "description": "Number values that are associated with this attribute.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "stringValues": {
          "description": "String values that are associated with this attribute.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "barcodeValueObjectRequestBody": {
      "type": "object",
      "properties": {
        "barcodeType": {
          "description": "The barcode type that was scanned.",
          "type": "string",
          "example": "org.gs1.EAN-13"
        },
        "barcodeValue": {
          "description": "The captured barcode value.",
          "type": "string",
          "example": "0853883003114"
        }
      }
    },
    "barcodeValueObjectResponseBody": {
      "type": "object",
      "properties": {
        "barcodeType": {
          "description": "The barcode type that was scanned.",
          "type": "string",
          "example": "org.gs1.EAN-13"
        },
        "barcodeValue": {
          "description": "The captured barcode value.",
          "type": "string",
          "example": "0853883003114"
        }
      }
    },
    "baseRouteResponseObjectResponseBody": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "actualRouteEndTime": {
          "description": "Actual end time, if it exists, for the route in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2019-06-13T19:08:25Z"
        },
        "actualRouteStartTime": {
          "description": "Actual start time, if it exists, for the route in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2019-06-13T19:08:25Z"
        },
        "driver": {
          "$ref": "#/definitions/GoaDriverTinyResponseResponseBody"
        },
        "externalIds": {
          "description": "A map of external ids",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "description": "ID of the route",
          "type": "string",
          "example": "342341"
        },
        "name": {
          "description": "Route name",
          "type": "string",
          "example": "Bid 123"
        },
        "notes": {
          "description": "Notes for the route",
          "type": "string",
          "example": "These are my notes"
        },
        "scheduledRouteEndTime": {
          "description": "Scheduled end time, if it exists, for the route in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2019-06-13T19:08:25Z"
        },
        "scheduledRouteStartTime": {
          "description": "Scheduled start time, if it exists, for the route in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2019-06-13T19:08:25Z"
        },
        "settings": {
          "$ref": "#/definitions/RouteSettingsResponseBody"
        },
        "stops": {
          "description": "List of stops along the route",
          "type": "array",
          "minItems": 2,
          "items": {
            "$ref": "#/definitions/RoutesStopResponseObjectResponseBody"
          }
        },
        "vehicle": {
          "$ref": "#/definitions/GoaVehicleTinyResponseResponseBody"
        }
      }
    },
    "conditionalFieldSectionObjectResponseBody": {
      "type": "object",
      "properties": {
        "conditionalFieldFirstIndex": {
          "description": "The index of the first conditional field associated with the triggeringFieldValue in the fieldTypes list.",
          "type": "integer",
          "format": "int64",
          "example": 6052484663396989000
        },
        "conditionalFieldLastIndex": {
          "description": "The index of the last conditional field associated with the triggeringFieldValue in the fieldTypes list.",
          "type": "integer",
          "format": "int64",
          "example": 8570402441294513000
        },
        "triggeringFieldIndex": {
          "description": "The index of the multiple choice field in the fieldTypes list that triggers one or more conditional fields.",
          "type": "integer",
          "format": "int64",
          "example": 2099372702724875300
        },
        "triggeringFieldValue": {
          "description": "The multiple choice option value that triggers the conditional fields.",
          "type": "string",
          "example": "Optiona 1"
        }
      }
    },
    "contactTinyResponse": {
      "description": "A minified contact object",
      "type": "object",
      "properties": {
        "firstName": {
          "description": "First name of the contact.",
          "type": "string",
          "example": "Jane"
        },
        "id": {
          "description": "ID of the contact.",
          "type": "string",
          "example": "22408"
        },
        "lastName": {
          "description": "Last name of the contact.",
          "type": "string",
          "example": "Jones"
        }
      }
    },
    "dateTimeValueObjectRequestBody": {
      "description": "The value of a date time field. Only present for date time fields.",
      "type": "object",
      "properties": {
        "dateTime": {
          "description": "Date time value inin RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "1970-09-08T02:53:53Z"
        }
      }
    },
    "dateTimeValueObjectResponseBody": {
      "description": "The value of a date time field. Only present for date time fields.",
      "type": "object",
      "properties": {
        "dateTime": {
          "description": "Date time value inin RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "2004-06-05T17:48:20Z"
        }
      }
    },
    "documentResponseObjectResponseBody": {
      "description": "A single document.",
      "type": "object",
      "required": [
        "driver",
        "id",
        "createdAtTime",
        "state",
        "documentType",
        "fields"
      ],
      "properties": {
        "conditionalFieldSections": {
          "description": "List of the document conditional field sections.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/conditionalFieldSectionObjectResponseBody"
          }
        },
        "createdAtTime": {
          "description": "Time the document was created in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "1972-05-23T06:27:00Z"
        },
        "documentType": {
          "$ref": "#/definitions/GoaDocumentTypeTinyResponseResponseBody"
        },
        "driver": {
          "$ref": "#/definitions/GoaDriverTinyResponseResponseBody"
        },
        "fields": {
          "description": "The fields associated with this document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fieldObjectResponseBody"
          }
        },
        "id": {
          "description": "Universally unique identifier for the document.",
          "type": "string",
          "example": "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7"
        },
        "name": {
          "description": "Name of the document.",
          "type": "string",
          "example": "Dropoff Slip 123"
        },
        "notes": {
          "description": "Notes on the document.",
          "type": "string",
          "example": "Missing a crate"
        },
        "routeStop": {
          "$ref": "#/definitions/GoaRouteStopTinyResponseResponseBody"
        },
        "state": {
          "description": "The condition of the document created for the driver. Can be either Required or Submitted. Required documents are pre-populated documents for the Driver to fill out in the Driver App and have not yet been submitted. Submitted documents have been submitted by the driver in the Driver App. Archived documents have been archived by the admin in the cloud dashboard.",
          "type": "string",
          "enum": [
            "submitted",
            "required",
            "archived"
          ],
          "example": "submitted"
        },
        "updatedAtTime": {
          "description": "Time the document was updated in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "1975-03-23T01:10:52Z"
        },
        "vehicle": {
          "$ref": "#/definitions/GoaVehicleTinyResponseResponseBody"
        }
      }
    },
    "driverTinyResponse": {
      "description": "A minified driver object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the driver.",
          "type": "string",
          "example": "88668"
        },
        "name": {
          "description": "Name of the driver.",
          "type": "string",
          "example": "Susan Bob"
        }
      }
    },
    "dvirTrailerDefectsItems": {
      "type": "object",
      "required": [
        "id",
        "isResolved"
      ],
      "properties": {
        "comment": {
          "description": "Comment on the defect.",
          "type": "string",
          "example": "Air Compressor not working"
        },
        "createdAtTime": {
          "description": "Time when the defect was created. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "defectType": {
          "description": "The type of DVIR defect.",
          "type": "string",
          "example": "Air Compressor"
        },
        "id": {
          "description": "ID of the defect.",
          "type": "string",
          "example": "18"
        },
        "isResolved": {
          "description": "Signifies if this defect is resolved.",
          "type": "boolean",
          "example": true
        },
        "mechanicNotes": {
          "description": "The mechanics notes on the defect.",
          "type": "string",
          "example": "Extremely large oddly shaped hole in passenger side window."
        },
        "mechanicNotesUpdatedAtTime": {
          "description": "Time when mechanic notes were last updated. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "resolvedAtTime": {
          "description": "Time when this defect was resolved. Will not be returned if the defect is unresolved. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
          "type": "string",
          "example": "2020-01-27T07:06:25Z"
        },
        "resolvedBy": {
          "description": "The person who resolved this defect.  Will not be returned if the defect is unresolved.",
          "type": "object",
          "properties": {
            "id": {
              "description": "ID of the entity that resolved this defect. If the defect was resolved by a driver, this will be a Samsara Driver ID. If the defect was resolved by a mechanic, this will be the Samsara Dashboard User ID of the mechanic.",
              "type": "string",
              "example": "11"
            },
            "name": {
              "description": "Name of the person who resolved this defect.",
              "type": "string",
              "example": "Christopher 'The Handyman' Zhen"
            },
            "type": {
              "description": "Indicates whether this defect was resolved by a `driver` or a `mechanic`.",
              "type": "string",
              "enum": [
                "driver",
                "mechanic"
              ]
            }
          }
        },
        "trailer": {
          "allOf": [
            {
              "description": "The trailer this defect was submitted for."
            },
            {
              "description": "A minified trailer object.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "ID of the trailer.",
                  "type": "string",
                  "example": "123456789"
                },
                "name": {
                  "description": "Name of the trailer.",
                  "type": "string",
                  "example": "Midwest Trailer #5"
                }
              }
            }
          ]
        },
        "vehicle": {
          "allOf": [
            {
              "description": "The vehicle this defect was submitted for."
            },
            {
              "description": "A minified vehicle object.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "ID of the vehicle.",
                  "type": "string",
                  "example": "123456789"
                },
                "name": {
                  "description": "Name of the vehicle.",
                  "type": "string",
                  "example": "Midwest Truck #4"
                }
              }
            }
          ]
        }
      },
      "x-go-gen-location": "models"
    },
    "externalIds": {
      "description": "The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "example": {
        "maintenanceId": "250020",
        "payrollId": "ABFS18600"
      }
    },
    "fieldObjectPostRequestBody": {
      "type": "object",
      "required": [
        "label",
        "type"
      ],
      "properties": {
        "label": {
          "description": "The name of the field.",
          "type": "string",
          "example": "Load weight"
        },
        "type": {
          "description": "The type of field.",
          "type": "string",
          "enum": [
            "photo",
            "string",
            "number",
            "multipleChoice",
            "signature",
            "dateTime",
            "scannedDocument",
            "barcode"
          ],
          "example": "photo"
        },
        "value": {
          "$ref": "#/definitions/fieldObjectValueRequestBody"
        }
      }
    },
    "fieldObjectResponseBody": {
      "type": "object",
      "required": [
        "value",
        "label",
        "type"
      ],
      "properties": {
        "label": {
          "description": "The name of the field.",
          "type": "string",
          "example": "Load weight"
        },
        "type": {
          "description": "The type of field.",
          "type": "string",
          "enum": [
            "photo",
            "string",
            "number",
            "multipleChoice",
            "signature",
            "dateTime",
            "scannedDocument",
            "barcode"
          ],
          "example": "photo"
        },
        "value": {
          "$ref": "#/definitions/fieldObjectValueResponseBody"
        }
      }
    },
    "fieldObjectValueRequestBody": {
      "description": "The value of the document field. The shape of value depends on the type.",
      "type": "object",
      "properties": {
        "barcodeValue": {
          "description": "The value of a barcode scanning field. Only present for barcode scanning fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/barcodeValueObjectRequestBody"
          }
        },
        "dateTimeValue": {
          "$ref": "#/definitions/dateTimeValueObjectRequestBody"
        },
        "multipleChoiceValue": {
          "description": "The value of a multiple choice field. Only present for multiple choice fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/multipleChoiceValueObjectRequestBody"
          }
        },
        "numberValue": {
          "description": "The value of a number field. Only present for number fields.",
          "type": "number",
          "format": "double",
          "example": 123.456
        },
        "photoValue": {
          "description": "The value of a photo field. Only present for photo fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/photoValueObjectRequestBody"
          }
        },
        "scannedDocumentValue": {
          "description": "The value of a scanned document field. Only present for scanned document fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/scannedDocumentValueObjectRequestBody"
          }
        },
        "signatureValue": {
          "$ref": "#/definitions/signatureValueObjectRequestBody"
        },
        "stringValue": {
          "description": "The value of a string field. Only present for string fields.",
          "type": "string",
          "example": "Red Truck"
        }
      }
    },
    "fieldObjectValueResponseBody": {
      "description": "The value of the document field. The shape of value depends on the type.",
      "type": "object",
      "properties": {
        "barcodeValue": {
          "description": "The value of a barcode scanning field. Only present for barcode scanning fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/barcodeValueObjectResponseBody"
          }
        },
        "dateTimeValue": {
          "$ref": "#/definitions/dateTimeValueObjectResponseBody"
        },
        "multipleChoiceValue": {
          "description": "The value of a multiple choice field. Only present for multiple choice fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/multipleChoiceValueObjectResponseBody"
          }
        },
        "numberValue": {
          "description": "The value of a number field. Only present for number fields.",
          "type": "number",
          "format": "double",
          "example": 123.456
        },
        "photoValue": {
          "description": "The value of a photo field. Only present for photo fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/photoValueObjectResponseBody"
          }
        },
        "scannedDocumentValue": {
          "description": "The value of a scanned document field. Only present for scanned document fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/scannedDocumentValueObjectResponseBody"
          }
        },
        "signatureValue": {
          "$ref": "#/definitions/signatureValueObjectResponseBody"
        },
        "stringValue": {
          "description": "The value of a string field. Only present for string fields.",
          "type": "string",
          "example": "Red Truck"
        }
      }
    },
    "fieldTypesObjectResponseBody": {
      "type": "object",
      "required": [
        "label",
        "requiredField",
        "fieldType"
      ],
      "properties": {
        "fieldType": {
          "description": "The type of value this field can have.",
          "type": "string",
          "enum": [
            "photo",
            "string",
            "number",
            "multipleChoice",
            "signature",
            "dateTime",
            "scannedDocument",
            "barcode"
          ],
          "example": "photo"
        },
        "label": {
          "description": "The name of the field type.",
          "type": "string",
          "example": "Receipts"
        },
        "multipleChoiceFieldTypeMetaData": {
          "description": "A list of the multiple choice field option labels.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/multipleChoiceFieldTypeMetaDataObjectResponseBody"
          }
        },
        "numberFieldTypeMetaData": {
          "$ref": "#/definitions/numberFieldTypeMetaDataObjectResponseBody"
        },
        "requiredField": {
          "description": "The indicator that states if the field is required.",
          "type": "boolean",
          "example": true
        },
        "signatureFieldTypeMetaData": {
          "$ref": "#/definitions/signatureFieldTypeMetaDataObjectResponseBody"
        }
      }
    },
    "gatewayTiny": {
      "description": "A minified gateway including serial number and model.",
      "type": "object",
      "properties": {
        "model": {
          "description": "The gateway model",
          "type": "string",
          "example": "VG34"
        },
        "serial": {
          "description": "The serial number of the gateway.",
          "type": "string",
          "example": "ABCD-123-XYZ"
        }
      }
    },
    "getDocumentTypeResponseObjectResponseBody": {
      "type": "object",
      "properties": {
        "conditionalFieldSections": {
          "description": "List of the document type conditional field sections.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/conditionalFieldSectionObjectResponseBody"
          }
        },
        "fieldTypes": {
          "description": "The fields associated with this document type.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/fieldTypesObjectResponseBody"
          }
        },
        "id": {
          "description": "Universally unique identifier for the document type. This value can be passed in as the documentTypeId when creating a document.",
          "type": "string",
          "example": "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7"
        },
        "name": {
          "description": "Name of the document type.",
          "type": "string",
          "example": "Bill's Fuel Receipts"
        },
        "orgId": {
          "description": "ID for the organization this document type belongs to.",
          "type": "integer",
          "format": "int64",
          "example": 7556541997620537000
        }
      }
    },
    "industrialAssetObjectResponseBody": {
      "description": "industrialAssetObject",
      "type": "object",
      "required": [
        "name",
        "id"
      ],
      "properties": {
        "id": {
          "description": "Id of the device",
          "type": "string",
          "example": "8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"
        },
        "name": {
          "description": "Name of the industrial asset",
          "type": "string",
          "example": "My asset"
        }
      }
    },
    "jobLocationResponseObjectResponseBody": {
      "description": "jobLocation object",
      "type": "object",
      "required": [
        "name",
        "address",
        "latitude",
        "longitude"
      ],
      "properties": {
        "address": {
          "description": "Address of a location",
          "type": "string",
          "example": "1990 Alameda st, San Francisco, Ca 94103"
        },
        "latitude": {
          "description": "Latitude of a location",
          "type": "number",
          "format": "double",
          "example": 37.456345
        },
        "longitude": {
          "description": "Longitude of a location",
          "type": "number",
          "format": "double",
          "example": 34.5633749
        },
        "name": {
          "description": "Name of a location",
          "type": "string",
          "example": "Worksite #1"
        }
      }
    },
    "latitude": {
      "description": "The latitude of the asset in decimal degrees.",
      "type": "number",
      "format": "double",
      "example": 37.765363
    },
    "location": {
      "description": "Location object",
      "type": "object",
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "latitude": {
          "description": "GPS latitude represented in degrees",
          "type": "number",
          "format": "double",
          "example": 122.142
        },
        "longitude": {
          "description": "GPS longitude represented in degrees",
          "type": "number",
          "format": "double",
          "example": -93.343
        }
      }
    },
    "locationResponseBody": {
      "description": "Location object",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "GPS latitude represented in degrees",
          "type": "number",
          "format": "double",
          "example": 37.456345
        },
        "longitude": {
          "description": "\tGPS longitude represented in degrees",
          "type": "number",
          "format": "double",
          "example": 34.5633749
        }
      }
    },
    "longitude": {
      "description": "The longitude of the asset in decimal degrees.",
      "type": "number",
      "format": "double",
      "example": -122.403098
    },
    "multipleChoiceFieldTypeMetaDataObjectResponseBody": {
      "type": "object",
      "properties": {
        "label": {
          "description": "The option choice label.",
          "type": "string",
          "example": "Fuel Receipt"
        }
      }
    },
    "multipleChoiceValueObjectRequestBody": {
      "type": "object",
      "properties": {
        "selected": {
          "description": "Boolean representing if the choice has been selected.",
          "type": "boolean",
          "example": false
        },
        "value": {
          "description": "Description of the choice.",
          "type": "string",
          "example": "Yes"
        }
      }
    },
    "multipleChoiceValueObjectResponseBody": {
      "type": "object",
      "properties": {
        "selected": {
          "description": "Boolean representing if the choice has been selected.",
          "type": "boolean",
          "example": false
        },
        "value": {
          "description": "Description of the choice.",
          "type": "string",
          "example": "Yes"
        }
      }
    },
    "numberFieldTypeMetaDataObjectResponseBody": {
      "description": "The number field metadata.",
      "type": "object",
      "properties": {
        "numberOfDecimalPlaces": {
          "description": "The number of decimal places allowed for the field.",
          "type": "integer",
          "format": "int64",
          "example": 4030962852247204400
        }
      }
    },
    "paginationResponse": {
      "description": "Pagination parameters.",
      "type": "object",
      "required": [
        "endCursor",
        "hasNextPage"
      ],
      "properties": {
        "endCursor": {
          "description": "Cursor identifier representing the last element in the response. This value should be used in conjunction with a subsequent request's 'after' query parameter. This may be an empty string if there are no more pages left to view.",
          "type": "string",
          "format": "string",
          "example": "MjkY"
        },
        "hasNextPage": {
          "description": "True if there are more pages of results immediately available after this endCursor.",
          "type": "boolean",
          "example": true
        }
      }
    },
    "photoValueObjectRequestBody": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the photo.",
          "type": "string",
          "example": "f5271458-21f9-4a9f-a290-780c6d8840ff"
        },
        "url": {
          "description": "Url of the photo.",
          "type": "string",
          "example": "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
        }
      }
    },
    "photoValueObjectResponseBody": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the photo.",
          "type": "string",
          "example": "f5271458-21f9-4a9f-a290-780c6d8840ff"
        },
        "url": {
          "description": "Url of the photo.",
          "type": "string",
          "example": "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
        }
      }
    },
    "scannedDocumentValueObjectRequestBody": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the scanned document.",
          "type": "string",
          "example": "f5271458-21f9-4a9f-a290-780c6d8840ff"
        },
        "url": {
          "description": "Url of the scanned document.",
          "type": "string",
          "example": "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
        }
      }
    },
    "scannedDocumentValueObjectResponseBody": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the scanned document.",
          "type": "string",
          "example": "f5271458-21f9-4a9f-a290-780c6d8840ff"
        },
        "url": {
          "description": "Url of the scanned document.",
          "type": "string",
          "example": "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
        }
      }
    },
    "signatureFieldTypeMetaDataObjectResponseBody": {
      "description": "The signature field metadata.",
      "type": "object",
      "properties": {
        "legalText": {
          "description": "The signature field legal text.",
          "type": "string",
          "example": "Verified by signee."
        }
      }
    },
    "signatureValueObjectRequestBody": {
      "description": "The value of a signature field. Only present for signature fields.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the signature field.",
          "type": "string",
          "example": "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7"
        },
        "name": {
          "description": "Name of the signee for a signature field.",
          "type": "string",
          "example": "John Smith"
        },
        "signedAtTime": {
          "description": "Time the signature was captured in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "1981-07-18T07:53:36Z"
        },
        "url": {
          "description": "Url of a signature field's PNG signature image.",
          "type": "string",
          "example": "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
        }
      }
    },
    "signatureValueObjectResponseBody": {
      "description": "The value of a signature field. Only present for signature fields.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the signature field.",
          "type": "string",
          "example": "9814a1fa-f0c6-408b-bf85-51dc3bc71ac7"
        },
        "name": {
          "description": "Name of the signee for a signature field.",
          "type": "string",
          "example": "John Smith"
        },
        "signedAtTime": {
          "description": "Time the signature was captured in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "example": "1971-03-19T21:11:19Z"
        },
        "url": {
          "description": "Url of a signature field's PNG signature image.",
          "type": "string",
          "example": "https://samsara-driver-media-upload.s3.us-west-2.amazonaws.com/123456"
        }
      }
    },
    "standardDeleteResponse": {
      "description": "A successful DELETE response is a 204 with no content.",
      "type": "string",
      "example": "\u003cempty content\u003e"
    },
    "standardErrorResponse": {
      "description": "Error response",
      "type": "object",
      "properties": {
        "message": {
          "description": "The message of the error.",
          "type": "string",
          "example": "An error has occurred."
        },
        "requestId": {
          "description": "The ID of the request.",
          "type": "string",
          "example": "8916e1c1"
        }
      }
    },
    "tagTinyResponse": {
      "description": "A minified tag object",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the tag.",
          "type": "string",
          "example": "3914"
        },
        "name": {
          "description": "Name of the tag.",
          "type": "string",
          "example": "East Coast"
        },
        "parentTagId": {
          "description": "If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.",
          "type": "string",
          "example": "4815"
        }
      }
    },
    "time": {
      "description": "UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
      "type": "string",
      "example": "2020-01-27T07:06:25Z"
    },
    "trailerNameOnlyResponse": {
      "description": "A trailer object with only a name.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the trailer.",
          "type": "string",
          "example": "Midwest Trailer #5"
        }
      }
    },
    "trailerTinyResponse": {
      "description": "A minified trailer object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the trailer.",
          "type": "string",
          "example": "123456789"
        },
        "name": {
          "description": "Name of the trailer.",
          "type": "string",
          "example": "Midwest Trailer #5"
        }
      }
    },
    "userTinyResponse": {
      "description": "A minified user object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the user.",
          "type": "string",
          "example": "88668"
        },
        "name": {
          "description": "Name of the user.",
          "type": "string",
          "example": "Susan Bob"
        }
      }
    },
    "vehicleStatsAuxInputTime": {
      "description": "UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.",
      "type": "string",
      "x-go-gen-location": "models",
      "example": "2020-01-27T07:06:25Z"
    },
    "vehicleTinyResponse": {
      "description": "A minified vehicle object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the vehicle.",
          "type": "string",
          "example": "123456789"
        },
        "name": {
          "description": "Name of the vehicle.",
          "type": "string",
          "example": "Midwest Truck #4"
        }
      }
    }
  },
  "parameters": {
    "V1DispatchRouteApplyToFutureRoutesParam": {
      "name": "applyToFutureRoutes",
      "in": "body",
      "schema": {
        "type": "object",
        "properties": {
          "apply_to_future_routes": {
            "description": "This is only for a recurring route.  If set to true, delete all following runs of the route.  If set to false, only delete the current route.",
            "type": "boolean",
            "example": true
          }
        }
      }
    },
    "V1DispatchRouteIdOrExternalIdParam": {
      "type": "string",
      "description": "ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`",
      "name": "route_id_or_external_id",
      "in": "path",
      "required": true
    },
    "V1assetHistoryEndTimeParam": {
      "type": "integer",
      "format": "int64",
      "description": "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs.",
      "name": "endMs",
      "in": "query",
      "required": true
    },
    "V1assetHistoryStartTimeParam": {
      "type": "integer",
      "format": "int64",
      "description": "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs.",
      "name": "startMs",
      "in": "query",
      "required": true
    },
    "V1assetIdParam": {
      "type": "integer",
      "format": "int64",
      "description": "ID of the asset. Must contain only digits 0-9.",
      "name": "asset_id",
      "in": "path",
      "required": true
    },
    "V1createDvirParam": {
      "description": "DVIR creation body",
      "name": "createDvirParam",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "required": [
          "safe",
          "inspectionType",
          "userEmail"
        ],
        "properties": {
          "inspectionType": {
            "description": "Only type 'mechanic' is currently accepted.",
            "type": "string",
            "enum": [
              "mechanic"
            ],
            "example": "mechanic"
          },
          "mechanicNotes": {
            "description": "Any notes from the mechanic.",
            "type": "string",
            "example": "Replaced headlight on passenger side."
          },
          "odometerMiles": {
            "description": "The current odometer of the vehicle.",
            "type": "integer",
            "example": 38426
          },
          "previousDefectsCorrected": {
            "description": "Whether any previous defects were corrected. If this vehicle or trailer was previously marked unsafe, and this DVIR marks it as safe, either previousDefectsCorrected or previousDefectsIgnored must be true.",
            "type": "boolean",
            "example": true
          },
          "previousDefectsIgnored": {
            "description": "Whether any previous defects were ignored. If this vehicle or trailer was previously marked unsafe, and this DVIR marks it as safe, either previousDefectsCorrected or previousDefectsIgnored must be true.",
            "type": "boolean",
            "example": false
          },
          "resolvedDefectIds": {
            "description": "List of defect IDs to resolve.  The defects must be associated with the provided vehicle or trailer.",
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "example": [
              18,
              19
            ]
          },
          "safe": {
            "description": "Whether or not this vehicle or trailer is safe to drive.",
            "type": "string",
            "enum": [
              "safe",
              "unsafe"
            ],
            "example": "safe"
          },
          "trailerId": {
            "description": "Id of trailer being inspected. Either vehicleId or trailerId must be provided.",
            "type": "integer",
            "example": 11
          },
          "userEmail": {
            "description": "The Samsara login email for the person creating the DVIR. The email must correspond to a Samsara user's email.",
            "type": "string",
            "example": "j.smith@yahoo.com"
          },
          "vehicleId": {
            "description": "Id of vehicle being inspected. Either vehicleId or trailerId must be provided.",
            "type": "integer",
            "example": 10
          }
        }
      }
    },
    "V1createMessagesParam": {
      "description": "Text to send to a list of driverIds.",
      "name": "createMessages",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "required": [
          "driverIds",
          "text"
        ],
        "properties": {
          "driverIds": {
            "description": "IDs of the drivers for whom the messages are sent to.",
            "type": "array",
            "items": {
              "type": "number",
              "format": "int64",
              "example": 555
            },
            "example": [
              111,
              222,
              333
            ]
          },
          "text": {
            "description": "The text sent in the message.",
            "type": "string",
            "example": "This is a message."
          }
        }
      }
    },
    "V1dataInputEndTimeParam": {
      "type": "integer",
      "format": "int64",
      "description": "Timestamp in unix milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Defaults to nowMs.",
      "name": "endMs",
      "in": "query"
    },
    "V1dataInputIdParam": {
      "type": "integer",
      "format": "int64",
      "description": "ID of the data input. Must contain only digits 0-9.",
      "name": "data_input_id",
      "in": "path",
      "required": true
    },
    "V1dataInputStartTimeParam": {
      "type": "integer",
      "format": "int64",
      "description": "Timestamp in unix milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. defaults to nowMs.",
      "name": "startMs",
      "in": "query"
    },
    "V1documentCreateParam": {
      "description": "To create a document for a given document type, provide the `documentTypeUuid` of the type of document you'd like to create. Then, pass in the `fields` of the document in the same order that they show up in the given document type.",
      "name": "createDocumentParams",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/V1DocumentCreate"
      }
    },
    "V1documentQueryByParam": {
      "enum": [
        "created",
        "updated"
      ],
      "type": "string",
      "format": "string",
      "description": "Retrieve most recent documents based on either driver creation time or driver update time. If no value is provided, the default is `\"created\"`.",
      "name": "queryBy",
      "in": "query"
    },
    "V1documentsDurationMsParam": {
      "type": "integer",
      "format": "int64",
      "description": "Time in milliseconds that represents the duration before endMs to query. Defaults to 24 hours.",
      "name": "durationMs",
      "in": "query"
    },
    "V1documentsEndMsParam": {
      "type": "integer",
      "format": "int64",
      "description": "Time in unix milliseconds that represents the oldest documents to return. Used in combination with durationMs. Defaults to now.",
      "name": "endMs",
      "in": "query"
    },
    "V1getMessagesDurationMsParam": {
      "type": "integer",
      "format": "int64",
      "description": "Time in milliseconds that represents the duration before endMs to query. Defaults to 24 hours.",
      "name": "durationMs",
      "in": "query"
    },
    "V1getMessagesEndMsParam": {
      "type": "integer",
      "format": "int64",
      "description": "Time in unix milliseconds that represents the end of time range of messages to return. Used in combination with durationMs. Defaults to now.",
      "name": "endMs",
      "in": "query"
    },
    "V1harshEventMsParam": {
      "type": "integer",
      "format": "int64",
      "description": "Timestamp in milliseconds representing the timestamp of a harsh event.",
      "name": "timestamp",
      "in": "query",
      "required": true
    },
    "V1paginationEndingBeforeParam": {
      "type": "string",
      "description": "Pagination parameter indicating the cursor position to return results before. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'startingAfter' parameter.",
      "name": "endingBefore",
      "in": "query"
    },
    "V1paginationLimitParam": {
      "type": "number",
      "format": "int64",
      "description": "Pagination parameter indicating the number of results to return in this request. Used in conjunction with either 'startingAfter' or 'endingBefore'.",
      "name": "limit",
      "in": "query"
    },
    "V1paginationStartingAfterParam": {
      "type": "string",
      "description": "Pagination parameter indicating the cursor position to continue returning results after. Used in conjunction with the 'limit' parameter. Mutually exclusive with 'endingBefore' parameter.",
      "name": "startingAfter",
      "in": "query"
    },
    "V1routeDurationParam": {
      "type": "integer",
      "format": "int64",
      "description": "Time in milliseconds that represents the duration before end_time to query. Defaults to 24 hours.",
      "name": "duration",
      "in": "query"
    },
    "V1routeEndTimeParam": {
      "type": "integer",
      "format": "int64",
      "description": "Time in unix milliseconds that represents the end time of the requested time interval. See above for a description of how routes are returned. Defaults to now.",
      "name": "end_time",
      "in": "query"
    },
    "V1routeHistoryEndTimeParam": {
      "type": "integer",
      "format": "int64",
      "description": "Timestamp representing the end of the period to fetch, inclusive. Used in combination with start_time. Defaults to nowMs.",
      "name": "end_time",
      "in": "query"
    },
    "V1routeHistoryStartTimeParam": {
      "type": "integer",
      "format": "int64",
      "description": "Timestamp representing the start of the period to fetch, inclusive. Used in combination with end_time. Defaults to 0.",
      "name": "start_time",
      "in": "query"
    },
    "V1safetyScoreEndMsParam": {
      "type": "integer",
      "format": "int64",
      "description": "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
      "name": "endMs",
      "in": "query",
      "required": true
    },
    "V1safetyScoreStartMsParam": {
      "type": "integer",
      "format": "int64",
      "description": "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. Total duration (endMs - startMs) must be greater than or equal to 1 hour.",
      "name": "startMs",
      "in": "query",
      "required": true
    },
    "V1sensorParam": {
      "description": "List of sensor IDs to query.",
      "name": "V1sensorParam",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "required": [
          "sensors"
        ],
        "properties": {
          "sensors": {
            "description": "List of sensor IDs to query.",
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "example": [
              122
            ]
          }
        }
      }
    },
    "V1visionCameraIdParam": {
      "type": "integer",
      "format": "int64",
      "description": "The camera_id should be valid for the given accessToken.",
      "name": "camera_id",
      "in": "path",
      "required": true
    },
    "V1visionDurationMsParam": {
      "type": "integer",
      "format": "int64",
      "description": "DurationMs is a required param. This works with the EndMs parameter. Indicates the duration in which the visionRuns will be fetched",
      "name": "durationMs",
      "in": "query",
      "required": true
    },
    "V1visionEndMsParam": {
      "type": "integer",
      "format": "int64",
      "description": "EndMs is an optional param. It will default to the current time.",
      "name": "endMs",
      "in": "query"
    },
    "V1visionIncludeParam": {
      "type": "string",
      "description": "Include is a filter parameter. Accepts 'pass', 'reject' or 'no_read'.",
      "name": "include",
      "in": "query"
    },
    "V1visionLimitParam": {
      "type": "integer",
      "format": "int64",
      "description": "Limit is an integer value from 1 to 1,000.",
      "name": "limit",
      "in": "query"
    },
    "V1visionProgramIdParam": {
      "type": "integer",
      "format": "int64",
      "description": "The configured program's ID on the camera.",
      "name": "program_id",
      "in": "query"
    },
    "V1visionProgramIdPathParam": {
      "type": "integer",
      "format": "int64",
      "description": "The configured program's ID on the camera.",
      "name": "program_id",
      "in": "path",
      "required": true
    },
    "V1visionStartAtMsParam": {
      "type": "integer",
      "format": "int64",
      "description": "EndMs is an optional param. It will default to the current time.",
      "name": "startedAtMs",
      "in": "query"
    },
    "V1visionStartAtMsPathParam": {
      "type": "integer",
      "format": "int64",
      "description": "Started_at_ms is a required param. Indicates the start time of the run to be fetched.",
      "name": "started_at_ms",
      "in": "path",
      "required": true
    },
    "decorationStatTypes": {
      "type": "array",
      "items": {
        "enum": [
          "ambientAirTemperatureMilliC",
          "auxInput1",
          "auxInput2",
          "auxInput3",
          "auxInput4",
          "auxInput5",
          "auxInput6",
          "auxInput7",
          "auxInput8",
          "auxInput9",
          "auxInput10",
          "batteryMilliVolts",
          "barometricPressurePa",
          "defLevelMilliPercent",
          "ecuSpeedMph",
          "engineCoolantTemperatureMilliC",
          "engineImmobilizer",
          "engineLoadPercent",
          "engineOilPressureKPa",
          "engineRpm",
          "engineStates",
          "faultCodes",
          "fuelPercents",
          "gps",
          "gpsDistanceMeters",
          "intakeManifoldTemperatureMilliC",
          "nfcCardScans",
          "obdEngineSeconds",
          "obdOdometerMeters"
        ],
        "type": "string"
      },
      "collectionFormat": "csv",
      "description": "Decorations to add to the primary stats listed in the `types` parameter. For example, if you wish to know the vehicle's location whenever the engine changes state, you may set `types=engineStates\u0026decorations=gps`.\n\nYou may list ***up to 2*** decorations using comma-separated format. If multiple stats are listed in the `types` parameter, the decorations will be added to each one. For example: `types=engineStates,obdOdometerMeters,faultCodes\u0026decorations=gps,fuelPercents` will list GPS and fuel decorations for each engine state change, each odometer reading, and each fault code. See the \u003ca href=\"/docs/telematics#query-parameters\" target=\"_blank\"\u003eTelematics\u003c/a\u003e guide for more details.\n\nNote that decorations may significantly increase the response payload size.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary inputs\u003c/a\u003e for the vehicle.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer (`ignition_disabled`, `ignition_enabled`).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted.\n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.  ",
      "name": "decorations",
      "in": "query"
    },
    "driverActivationStatusParam": {
      "enum": [
        "active",
        "deactivated"
      ],
      "type": "string",
      "description": "If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).",
      "name": "driverActivationStatus",
      "in": "query"
    },
    "equipmentStatTypes": {
      "type": "array",
      "items": {
        "enum": [
          "gatewayEngineStates",
          "obdEngineStates",
          "fuelPercents",
          "engineRpm",
          "gatewayEngineSeconds",
          "obdEngineSeconds",
          "gatewayJ1939EngineSeconds",
          "gpsOdometerMeters"
        ],
        "type": "string",
        "format": "string"
      },
      "collectionFormat": "csv",
      "description": "The type of equipment stat you want to query. Currently, you may only submit one type.\n\n- `engineRpm`: The revolutions per minute of the engine.\n- `fuelPercents`: The percent of fuel in the unit of equipment.\n- `obdEngineSeconds`: The number of seconds the engine has been running since it was new. This value is provided directly from on-board diagnostics.\n- `gatewayEngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via APWR/AOPEN cable and an offset provided manually through the Samsara cloud dashboard.\n- `gatewayJ1939EngineSeconds`: An approximation of the number of seconds the engine has been running since it was new, based on the amount of time the AG24 device is receiving power via J1939/CAT cable and an offset provided manually through the Samsara cloud dashboard.\n- `obdEngineStates`: The state of the engine read from on-board diagnostics. Can be `Off`, `On`, or `Idle`.\n- `gatewayEngineStates`: An approximation of engine state based on readings the AG24 receives from the aux/digio cable. Can be `Off` or `On`.\n- `gpsOdometerMeters`: An approximation of odometer reading based on GPS calculations since the AG24 was activated, and a manual odometer offset provided in the Samsara cloud dashboard.",
      "name": "types",
      "in": "query",
      "required": true
    },
    "isDeactivatedParam": {
      "type": "boolean",
      "description": "If value is true, only drivers that are deactivated will appear in the response. This parameter will default to false if not provided (fetching only active drivers).",
      "name": "isDeactivated",
      "in": "query"
    },
    "vehicleStatTypes": {
      "type": "array",
      "items": {
        "enum": [
          "ambientAirTemperatureMilliC",
          "auxInput1",
          "auxInput2",
          "auxInput3",
          "auxInput4",
          "auxInput5",
          "auxInput6",
          "auxInput7",
          "auxInput8",
          "auxInput9",
          "auxInput10",
          "barometricPressurePa",
          "batteryMilliVolts",
          "defLevelMilliPercent",
          "ecuSpeedMph",
          "engineCoolantTemperatureMilliC",
          "engineImmobilizer",
          "engineLoadPercent",
          "engineOilPressureKPa",
          "engineRpm",
          "engineStates",
          "faultCodes",
          "fuelPercents",
          "gps",
          "gpsDistanceMeters",
          "gpsOdometerMeters",
          "intakeManifoldTemperatureMilliC",
          "nfcCardScans",
          "obdEngineSeconds",
          "obdOdometerMeters",
          "syntheticEngineSeconds"
        ],
        "type": "string"
      },
      "collectionFormat": "csv",
      "description": "The stat types you want this endpoint to return information on. See also the \u003ca href=\"/docs/telematics#query-parameters\" target=\"_blank\"\u003eTelematics\u003c/a\u003e guide for more details.\n\nYou may list ***up to 3*** types using comma-separated format. For example: `types=gps,engineStates,obdOdometerMeters`.\n\n*Note:* `auxInput3`-`auxInput10` count as a single type against the limit of 3. For example, you could list `types=engineStates,obdOdometerMeters,auxInput3,auxInput4` because `auxInput3` and `auxInput4` count as a single stat type. `auxInput1` and `auxInput2` still count as their own individual types.\n\n- `ambientAirTemperatureMilliC`: The ambient air temperature reading in millidegree Celsius.\n- `auxInput1`-`auxInput10`: Stat events from the \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043040512-Auxiliary-Inputs\" target=\"_blank\"\u003eauxiliary inputs\u003c/a\u003e for the vehicle.\n- `barometricPressurePa`: The barometric pressure reading in pascals.\n- `batteryMilliVolts`: The vehicle battery voltage reading.\n- `defLevelMilliPercent`: The Diesel Exhaust Fluid (DEF) level in milli percentage points (e.g. `99001`, `49999`, etc).\n- `ecuSpeedMph`: The speed of the engine in miles per hour according to the ECU.\n- `engineCoolantTemperatureMilliC`: The engine coolant temperature reading in millidegree Celsius.\n- `engineImmobilizer`: The state of the engine immobilizer (`ignition_disabled`, `ignition_enabled`).\n- `engineLoadPercent`: The engine load in percentage points (e.g. `99`, `50`, etc).\n- `engineOilPressureKPa`: The engine oil pressure reading in kilopascals.\n- `engineRpm`: The revolutions per minute of the engine.\n- `engineStates`: The state of the engine (`Off`, `On`, `Idle`).\n- `faultCodes`: The diagnostic fault codes for the vehicle.\n- `fuelPercents`: The engine fuel level in percentage points (e.g. `99`, `50`, etc).\n- `gps`: GPS data including lat/long, heading, speed, address book entry (if exists), and a reverse geocoded address.\n- `gpsDistanceMeters`: The distance the vehicle has traveled since the gateway was installed based on GPS calculations.\n- `gpsOdometerMeters`: Odometer reading provided by GPS calculations when OBD odometer cannot be pulled automatically. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the [PATCH /fleet/vehicles/{id}](ref:updatevehicle) endpoint or through the \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading\" target=\"_blank\"\u003ecloud dasbhoard\u003c/a\u003e. Odometer readings that are manually set will update as GPS trip data is gathered. Try combining with `obdOdometerMeters`.\n- `intakeManifoldTemperatureMilliC`: The intake manifold temperature reading in millidegree Celsius.\n- `nfcCardScans`: ID card scans.\n- `obdEngineSeconds`: The cumulative number of seconds the engine has run according to onboard diagnostics.\n- `obdOdometerMeters`: The odometer reading according to onboard diagnostics. If Samsara does not have diagnostic coverage for a particular vehicle, the value for this stat type will be omitted. Try combining with `gpsOdometerMeters`. \n- `syntheticEngineSeconds`: Data for the synthetic engine seconds for the vehicle.",
      "name": "types",
      "in": "query",
      "required": true
    }
  },
  "tags": [
    {
      "description": "Address book entries in Samsara can be used to collect useful data about operations within a particular address's geofence area. Once an address book entry is established, this address can then subsequently be used in order to create routes, set geofence arrival alerts, or detect trips that begin or end within a given geofence area.",
      "name": "Addresses"
    },
    {
      "description": "Assets refer to objects that are tracked with Samsara Asset Gateways. These include: trailers, reefers, equipment (construction, etc.), containers, and anything else you'd like to track with a Samsara Asset Gateway. This is different than Vehicles, which specifically have a Samsara Vehicle Gateway. Depending on the asset, different data is available. For all assets, GPS data is available. For powered assets like trailers, reefers, and equipment, other engine or on-board diagnostic data is available.",
      "name": "Assets"
    },
    {
      "name": "Camera Media"
    },
    {
      "description": "Carriers (fleet managers) can propose vehicle, trailer, and shipping assignments to Drivers through the Carrier Proposed Assignments API. This set of APIs will allow you to define an assignment proposal to a Driver. The proposed assignment will be presented to the Driver in the Samsara Driver App. The Driver may accept or reject the assignment. Retrieving a list of existing proposed assignments will tell you whether the Driver accepted or rejected the proposal.",
      "name": "Carrier Proposed Assignments"
    },
    {
      "description": "Contacts are an easy way to manage which users receive alerts (via sms or email).",
      "name": "Contacts"
    },
    {
      "description": "The documents feature allows you to manage driver-submitted documents from the Samsara app. Submitted documents are grouped by document types, and back office users can create new types of documents. For more information on the driver workflow around documents, see this [KB article](https://kb.samsara.com/hc/en-us/articles/360006911551-Using-Documents-in-the-Dashboard).",
      "name": "Documents"
    },
    {
      "description": "Driver objects allow you to track your driver-vehicle assignments, manage driver profiles, and update mobile app credential logins. You can retrieve a list of all drivers, or you can fetch each driver object individually.\nDrivers can be either active or inactive. You should inactivate a driver if you wish to keep the driver's driving history and HOS logs. If your driver is inactive, you can still get information about a driver summary.",
      "name": "Drivers"
    },
    {
      "name": "Driver Vehicle Assignments"
    },
    {
      "description": "Equipment objects represent powered assets connected to a [Samsara AG24](https://www.samsara.com/products/models/ag24) device via an APWR, CAT, or J1939 cable. They are automatically created with a unique Samsara Equipment ID whenever a Samsara AG24 is activated in your organization.",
      "name": "Equipment"
    },
    {
      "description": "Driver logs containing duty status, certification details, and associated vehicles and trailers are available. You can also retrieve summarized total active time logs. Signin/Signout logs are also available. Drivers can track hours of service via the Samsara Driver mobile app.\n\n**Note:** If data is still being uploaded from the Samsara Driver App, it may not be completely reflected by the API. The best practice is to wait a couple of days before querying the API to make sure that all data from the Samsara Driver App has been uploaded.",
      "name": "Hours of Service"
    },
    {
      "description": "Access to industrial data.",
      "name": "Industrial"
    },
    {
      "description": "Maintenance refers to both DVIRs and reports on vehicle fault codes.",
      "name": "Maintenance"
    },
    {
      "description": "Fleet Admins can send direct free-form messages to drivers. This will send a message to the driver's Samsara driver app, in which you can track whether or not a message has been read by a given driver. For sending structured messages, see the Documents API.",
      "name": "Messages"
    },
    {
      "description": "Information about the organization.",
      "name": "Organization Info"
    },
    {
      "description": "Dispatch routes include start and end times and locations and an array of jobs along the route. The jobs also include locations and scheduled arrival and departure times. As routes are completed, job skip, arrival, and completion times are made available in real-time. Routes can be associated with drivers, vehicles, and trailers, and jobs can be associated with documents.",
      "name": "Routes"
    },
    {
      "description": "Samsara provides you with more visibility on whether or not your fleets are being safe. With the collection of safety endpoints, you can get aggregate metrics around the performance of a particular driver or vehicle, as well as detailed logs of all the harsh events that take place in an organization.",
      "name": "Safety"
    },
    {
      "description": "The sensor object describes a sensor's attributes and settings within Samsara. Samsara has many different types of sensors, such as temperature and humidity monitors, door monitors, and more.",
      "name": "Sensors"
    },
    {
      "description": "Pull tachograph cards and parsed tachograph activity data from both drivers and vehicles.\n\nRelated Guide: [Tachograph](doc:tachograph-guide)",
      "name": "Tachograph (EU Only)"
    },
    {
      "description": "Tags are a simple way to organize vehicles, drivers, assets, and sensors into easily identifiable groups. You can add unlimited entities to each tag, and entities can have multiple different tags. You can also use tag hierarchies in order to create nested classes, such as parent tag 'Massachusetts' and child tag 'Boston'. They also allow you to restrict access to data through \"tag-level\" permissions. For more information on tags functionality, see \u003ca href=\"https://kb.samsara.com/hc/en-us/articles/360043275091-Creating-and-Using-Tags\" target=\"_blank\"\u003ethis Knowledge Base article\u003c/a\u003e.",
      "name": "Tags"
    },
    {
      "description": "List trailer assignments over a given time period for all trailers or a given one. Trailer assignments include which driver the trailer was assigned to and for which time period.",
      "name": "Trailer Assignments"
    },
    {
      "description": "Driving activity is segmented into trips (travel between a start and a stop). Vehicle movement is broken down into trips along the following lines: a trip begins when a previously inactive vehicle achieves a speed of 5mph; the trip ends when the vehicle's speed remains below 5mph for 5 minutes, or when a vehicle crosses a state or national boundary. Trips contain start and stop times, locations, and addresses. Trips also contain distance and odometer information as well as fuel consumption.",
      "name": "Trips"
    },
    {
      "description": "The users API allows you to manage access to the Samsara dashboard. This can be particularly useful if you are looking to set up a connection with your identity provider to manage roles and permissions for certain types of users within your system.",
      "name": "Users"
    },
    {
      "description": "A Vehicle object is created when a [Samsara Vehicle Gateway](https://www.samsara.com/products/models/vg34) is first activated. The Vehicle object will be assigned a unique ID that does not change. Samsara will associate all the telematics data from the gateway with the given Vehicle object. If a gateway is [moved from one vehicle to another](https://kb.samsara.com/hc/en-us/articles/360042699732-Moving-a-Vehicle-Gateway-from-One-Vehicle-to-Another), then a new Vehicle object will be created with a new ID. The old Vehicle object will still have its original ID and its historical data will still be accessible, however the gateway will no longer be associated with that vehicle object. You can manage a Vehicle's attributes (such as `name`, `licensePlate`, etc.) both through the API and the Samsara [cloud dashboard](https://cloud.samsara.com).",
      "name": "Vehicles"
    },
    {
      "name": "Vehicle Driver Assignments"
    },
    {
      "description": "Get real-time or historical GPS and onboard diagnostic data.\n\nRelated guide: [Telematics](https://developers.samsara.com/docs/telematics)",
      "name": "Vehicle Stats"
    },
    {
      "description": "***NOTE: The Vehicle Locations API is an older API that does not combine GPS data with onboard diagnostics. Try our new [Vehicle Stats API](#tag/Vehicle-Stats) instead.***\n\nGet real-time or historical GPS data.\n\nRelated guide: [Vehicle Locations](https://developers.samsara.com/docs/vehicle-locations-1)",
      "name": "Vehicle Locations"
    },
    {
      "description": "Endpoints in this section are in beta. This means that developers should **NOT** rely on these APIs to build business critical applications. The goal is to be able to release these APIs in the near future but, before doing so, ensure that we can collect feedback on the structure of their interfaces and their functionality.\n\n- Samsara may change the structure of a beta API’s interface without versioning this endpoint or any notice to beta users.\n\n- To submit feedback on these beta APIs, please fill out [this form](https://forms.gle/up7uFmJ8f2EKq8xm7).\n\n- When an endpoint becomes generally available, it will be announced in the API [changelog](https://developers.samsara.com/changelog).\n\n- If an issue or bug is experienced with any of these APIs, please submit an entry in the [feedback form](https://forms.gle/up7uFmJ8f2EKq8xm7).",
      "name": "Beta APIs"
    },
    {
      "description": "Endpoints in this section are in Preview. These APIs are not functional and are instead for soliciting feedback from our API users on the intended design of this API. Additionally, it is not guaranteed that we will be releasing an endpoint included in this section to production. This means that developers should **NOT** rely on these APIs to build business critical applications\n\n- Samsara may change the structure of a preview API's interface without versioning or any notice to API users.\n\n- To submit feedback on these preview APIs, please fill out [this form](https://forms.gle/up7uFmJ8f2EKq8xm7).\n\n- When an endpoint becomes generally available, it will be announced in the API [changelog](https://developers.samsara.com/changelog).\n\n- If an issue or bug is experienced with any of these APIs, please submit an entry in the [feedback form](https://forms.gle/up7uFmJ8f2EKq8xm7).",
      "name": "Preview APIs"
    }
  ]
}