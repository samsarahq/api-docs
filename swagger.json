{
    "swagger": "2.0",
    "info": {
        "title": "Samsara API",
        "version": "1.0.0",
        "description": "# Introduction\nThe Samsara REST API lets you interact with the Samsara Cloud from anything that can send an HTTP request. With the Samsara API you can build powerful applications and custom solutions with sensor data.\n\nSamsara has endpoints available to track and analyze sensors, vehicles, and entire fleets. If you’re familiar with what you can build with a REST API, the following API reference guide will be your go-to resource.\n\nAPI access to the Samsara cloud is available to all Samsara administrators. If you’d like to try the API, [contact us](https://www.samsara.com/free-trial). The API is currently in beta and may be subject to frequent changes.\n\n# Connecting to the API\nThere are two ways to connect to the API. If you prefer to use the API in Javascript or Python, we supply SDKs which you can download here: [Javascript SDK](https://github.com/samsarahq/samsara-js), [Python SDK](https://github.com/samsarahq/samsara-python).\n\nIf you’d rather use another language to interact with the Samsara API, the endpoints and examples are in the reference guide below. \n"
    },
    "host": "api.samsara.com",
    "schemes": [
        "https"
    ],
    "basePath": "/v1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "externalDocs": {
        "description": "Documentation for the Samsara API",
        "url": "https://www.samsara.com/api"
    },
    "tags": [
        {
            "name": "Default",
            "description": "All Samsara API endpoints"
        },
        {
            "name": "Fleet",
            "description": "Access to fleet data"
        },
        {
            "name": "Machines",
            "description": "Access to machine data"
        },
        {
            "name": "Sensors",
            "description": "Access to sensor data"
        }
    ],
    "paths": {
        "/sensors/list": {
            "post": {
                "tags": [
                    "Sensors", "Default"
                ],
                "summary": "/sensors/list",
                "description": "Get sensor objects. This method returns a list of the sensor objects in the Samsara Cloud and information about them.",
                "operationId": "get_sensors",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sensor objects.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sensors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Sensor"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sensors/temperature": {
            "post": {
                "tags": [
                    "Sensors", "Default"
                ],
                "summary": "/sensors/temperature",
                "description": "Get temperature for requested sensors. This method returns the current ambient temperature (and probe temperature if applicable) for the requested sensors.",
                "operationId": "get_sensors_temperature",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/sensorParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sensor objects containing the current temperature reported by each sensor.",
                        "schema": {
                            "$ref": "#/definitions/TemperatureResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sensors/humidity": {
            "post": {
                "tags": [
                    "Sensors", "Default"
                ],
                "summary": "/sensors/humidity",
                "description": "Get humidity for requested sensors. This method returns the current relative humidity for the requested sensors.",
                "operationId": "get_sensors_humidity",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/sensorParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sensor objects containing the current humidity reported by each sensor.",
                        "schema": {
                            "$ref": "#/definitions/HumidityResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sensors/history": {
            "post": {
                "tags": [
                    "Sensors", "Default"
                ],
                "summary": "/sensors/history",
                "description": "Get historical data for specified sensors. This method returns a set of historical data for the specified sensors in the specified time range and at the specified time resolution.",
                "operationId": "get_sensors_history",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "historyParam",
                        "description": "Group ID, time range and resolution, and list of sensor ID, field pairs to query.",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "startMs",
                                "endMs",
                                "stepMs",
                                "series"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "startMs": {
                                    "type": "integer",
                                    "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462878398034
                                },
                                "endMs": {
                                    "type": "integer",
                                    "description": "End of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462881998034
                                },
                                "stepMs": {
                                    "type": "integer",
                                    "description": "Time resolution for which data should be returned, in milliseconds. Specifying 3600000 will return data at hour intervals.",
                                    "example": 3600000
                                },
                                "series": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Sensor ID and field to query.",
                                        "required": [
                                            "widgetId",
                                            "field"
                                        ],
                                        "properties": {
                                            "widgetId": {
                                                "type": "integer",
                                                "description": "Sensor ID to query.",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Field to query.",
                                                "enum": [
                                                    "ambientTemperature",
                                                    "probeTemperature",
                                                    "currentLoop1Raw",
                                                    "currentLoop1Mapped",
                                                    "currentLoop2Raw",
                                                    "currentLoop2Mapped",
                                                    "pmPowerTotal",
                                                    "pmPhase1Power",
                                                    "pmPhase2Power",
                                                    "pmPhase3Power",
                                                    "pmPhase1PowerFactor",
                                                    "pmPhase2PowerFactor",
                                                    "pmPhase3PowerFactor"
                                                ],
                                                "example": "ambientTemperature"
                                            }
                                        }
                                    }
                                },
                                "fillMissing": {
                                    "type": "string",
                                    "enum": [
                                        "withNull",
                                        "withPrevious"
                                    ],
                                    "default": "withNull"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of results objects, each containing a time and a datapoint for each requested sensor/field pair.",
                        "schema": {
                            "$ref": "#/definitions/SensorHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/list": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/list",
                "description": "Get list of the vehicles. This method returns a list of the vehicles in the Samsara Cloud and information about them.",
                "operationId": "get_fleet",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicles and information about each.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                },
                                "vehicles": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Vehicle"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/locations": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/locations",
                "description": "Get current location of vehicles in a group. This method returns the current location in latitude and longitude of all vehicles in a requested group.",
                "operationId": "get_fleet_locations",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicle objects containing their location and the time at which that location was logged.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                },
                                "vehicles": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VehicleLocation"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/trips": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/trips",
                "description": "Get historical trips data for specified vehicle. This method returns a set of historical trips data for the specified vehicle in the specified time range.",
                "operationId": "get_fleet_trips",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "tripsParam",
                        "description": "Group ID, vehicle ID and time range to query.",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "vehicleId",
                                "startMs",
                                "endMs"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "vehicleId": {
                                    "type": "integer",
                                    "description": "Vehicle ID to query.",
                                    "format": "int64",
                                    "example": 112
                                },
                                "startMs": {
                                    "type": "integer",
                                    "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462878398034
                                },
                                "endMs": {
                                    "type": "integer",
                                    "description": "End of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462881998034
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of trips taken by the requested vehicle within the specified timeframe.",
                        "schema": {
                            "$ref": "#/definitions/TripResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/drivers": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/drivers",
                "description": "Get all the drivers for the specified group.",
                "operationId": "get_fleet_drivers",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "groupDriversParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All drivers in the group.",
                        "schema": {
                            "$ref": "#/definitions/DriversRespose"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/drivers/summary": {
          "post": {
            "tags": [
              "Fleet", "Default"
            ],
            "summary": "/fleet/drivers/summary",
            "description": "Get the distance and time each driver in an organization has driven in a given time period.",
            "operationId": "get_fleet_drivers_summary",
            "parameters": [
              {
                "$ref": "#/parameters/accessTokenParam"
              },
              {
                "name": "driversSummaryParam",
                "description": "Org ID and time range to query.",
                "required": true,
                "in": "body",
                "schema": {
                  "type": "object",
                  "required": [
                    "orgId",
                    "startMs",
                    "endMs"
                  ],
                  "properties": {
                    "orgId": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Org ID to query.",
                      "example": 101
                    },
                    "startMs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Start time (ms) of queried time period.",
                      "example": 1481076243389
                    },
                    "endMs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "End time (ms) of queried time period.",
                      "example": 1481076244389
                    }
                  }
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Distance traveled and time active for each driver in the organization over the specified time period.",
                "schema": {
                  "$ref": "#/definitions/DriversSummaryResponse"
                }
              },
              "default": {
                "description": "Unexpected error.",
                "schema": {
                  "$ref": "#/definitions/ErrorResponse"
                }
              }
            }
          }
        },
        "/fleet/drivers/{driver_id}/hos_daily_logs": {
          "post": {
            "tags": [
              "Fleet", "Default"
            ],
            "summary": "/fleet/drivers/{driver_id:[0-9]+}/hos_daily_logs",
            "description": "Get summarized daily HOS charts for a specified driver.",
            "operationId": "get_fleet_drivers_hos_daily_logs",
            "parameters": [
                {
                    "$ref": "#/parameters/accessTokenParam"
                },
                {
                    "name": "driver_id",
                    "in": "path",
                    "required": true,
                    "description": "The driver ID.",
                    "type": "integer"
                },
                {
                    "name": "hosLogsParam",
                    "required": true,
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "required": [
                            "groupId",
                            "driverId",
                            "startMs",
                            "endMs"
                        ],
                        "properties": {
                            "groupId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Group ID to query.",
                                "example": 101
                            },
                            "driverId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Driver ID to query.",
                                "example": 444
                            },
                            "startMs": {
                                "type": "integer",
                                "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                                "example": 1462878398034
                            },
                            "endMs": {
                                "type": "integer",
                                "description": "End of the time range, specified in milliseconds UNIX time.",
                                "example": 1462881998034
                            }
                        }
                    }
                }
            ],
            "responses": {
              "200": {
                "description": "Distance traveled and time active for each driver in the organization over the specified time period.",
                "schema": {
                  "$ref": "#/definitions/DriverDailyLogResponse"
                }
              },
              "default": {
                "description": "Unexpected error.",
                "schema": {
                  "$ref": "#/definitions/ErrorResponse"
                }
              }
            }
          }
        },
        "/fleet/hos_logs": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/hos_logs",
                "description": "Get the HOS (hours of service) logs for the specified driver.",
                "operationId": "get_fleet_hos_logs",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "hosLogsParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "driverId",
                                "startMs",
                                "endMs"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                },
                                "driverId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Driver ID to query.",
                                    "example": 444
                                },
                                "startMs": {
                                    "type": "integer",
                                    "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462878398034
                                },
                                "endMs": {
                                    "type": "integer",
                                    "description": "End of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462881998034
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HOS logs for the specified driver.",
                        "schema": {
                            "$ref": "#/definitions/HosLogsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/hos_logs_summary": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/hos_logs_summary",
                "description": "Get the current HOS status for all drivers in the group.",
                "operationId": "get_fleet_hos_logs_summary",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "hosLogsParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HOS logs for the specified driver.",
                        "schema": {
                            "$ref": "#/definitions/HosLogsSummaryResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/maintenance/dvirs": {
            "get": {
                "tags": [
                    "Fleet","Default"
                ],
                "summary": "/fleet/maintenance/dvirs",
                "description": "Get the DVIR for the org with the time constraints",
                "operationId": "get_dvirs",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "end_ms",
                        "description": "time in millis until the last dvir log.",
                        "required": true,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "duration_ms",
                        "description": "time in millis which corresponds to the duration before the end_ms.",
                        "required": true,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "group_id",
                        "description": "Group ID to query.",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DVIR's for the specified group and duration.",
                        "schema": {
                            "$ref": "#/definitions/DvirListResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/hos_authentication_logs": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/hos_authentication_logs",
                "description": "Get the HOS (hours of service) signin and signout logs for the specified driver. Only signout logs include location information.",
                "operationId": "get_fleet_hos_authentication_logs",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "hosAuthenticationLogsParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "driverId",
                                "startMs",
                                "endMs"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                },
                                "driverId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Driver ID to query.",
                                    "example": 444
                                },
                                "startMs": {
                                    "type": "integer",
                                    "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462878398034
                                },
                                "endMs": {
                                    "type": "integer",
                                    "description": "End of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462881998034
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HOS authentication logs for the specified driver.",
                        "schema": {
                            "$ref": "#/definitions/HosAuthenticationLogsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/maintenance/list": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/maintenance/list",
                "description": "Get list of the vehicles with any engine faults or check light data.",
                "operationId": "get_fleet_maintenance_list",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicles and maintenance information about each.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "vehicles": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VehicleMaintenance"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/add_address": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/add_address",
                "description": "This method adds an address book entry to the specified group.",
                "operationId": "add_fleet_address",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "addressParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "name",
                                "address",
                                "radius"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the location to add to the address book.",
                                    "example": "HQ"
                                },
                                "address": {
                                    "type": "string",
                                    "description": "The address of the entry to add, as it would be recognized if provided to maps.google.com.",
                                    "example": "501 York St"
                                },
                                "radius": {
                                    "type": "integer",
                                    "description": "Radius in meters of the address (used for matching vehicle trip stops to this location).",
                                    "example": 10
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address was successfully added. No response body is returned."
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/set_data": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/set_data",
                "description": "This method enables the mutation of metadata for vehicles in the Samsara Cloud.",
                "operationId": "update_vehicles",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "vehicleUpdateParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "vehicles"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "vehicles": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Vehicle"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicles were successfully updated. No response body is returned."
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/dispatch_jobs": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/dispatch_jobs",
                "description": "Get the dispatch jobs for the specified group.",
                "operationId": "get_fleet_dispatch_jobs",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "getDispatchJobsParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "group_id",
                                "duration_seconds"
                            ],
                            "properties": {
                                "group_id": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "job_created_at_max_ms": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Maximum value of the JobCreatedAtMs, specified in milliseconds UNIX time.",
                                    "example": 1462878398034
                                },
                                "duration_seconds": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Duration of the query specified in seconds. E.g. to search for jobs created up to a week before job_created_at_max_ms, set duration_seconds to 604800.",
                                    "example": 604800
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dispatch jobs for the specified group.",
                        "schema": {
                            "$ref": "#/definitions/DispatchJobsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/dispatch_jobs/create": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/dispatch_jobs/create",
                "description": "Create dispatch jobs in the specified group.",
                "operationId": "create_fleet_dispatch_jobs",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "createDispatchJobsParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "group_id",
                                "dispatch_jobs"
                            ],
                            "properties": {
                                "group_id": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "dispatch_jobs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "external_identifier": {
                                                "type": "string",
                                                "description": "A string that can be used to map jobs in the Samsara database to jobs in an external database.",
                                                "example": "mysql_dispatch_job_id_2379"
                                            },
                                            "driver_id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description":  "ID of the driver assigned to the dispatch job.",
                                                "example": 444
                                            },
                                            "vehicle_id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "ID of the vehicle used for the dispatch job.",
                                                "example": 112
                                            },
                                            "job_state": {
                                                "type": "string",
                                                "enum": [
                                                    "JobState_Unassigned",
                                                    "JobState_Assigned",
                                                    "JobState_Started",
                                                    "JobState_Completed",
                                                    "JobState_Cancelled"
                                                ],
                                                "description": "The current state of the dispatch job.",
                                                "example": "JobState_Unassigned"
                                            },
                                            "scheduled_arrival_time_ms": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "The time at which the assigned driver is scheduled to arrive at the job destination.",
                                                "example": 1462881998034
                                            },
                                            "started_at_ms": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "The time at which the assigned driver started fulfilling the job (e.g. started driving to the destination).",
                                                "example": 1462881998034
                                            },
                                            "completed_at_ms": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "The time at which the job was marked complete.",
                                                "example": 1462881998034
                                            },
                                            "cancelled_at_ms": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "The time at which the job was marked cancelled.",
                                                "example": 1462881998034
                                            },
                                            "job_created_at_ms": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "The time at which the job was created.",
                                                "example": 1462881998034
                                            },
                                            "notes": {
                                                "type": "string",
                                                "description": "Notes regarding the details of this job.",
                                                "example": "Ensure crates are stacked no more than 3 high."
                                            },
                                            "destination_name": {
                                                "type": "string",
                                                "description": "The name of the job destination.",
                                                "example": "ACME Inc. Philadelphia HQ"
                                            },
                                            "destination_address": {
                                                "type": "string",
                                                "description": "The address of the job destination, as it would be recognized if provided to maps.google.com",
                                                "example": "123 Main St, Philadelphia, PA 19106"
                                            },
                                            "destination_lat": {
                                                "type": "number",
                                                "format": "float",
                                                "description": "Latitude of the destination in decimal degrees.",
                                                "example": 123.456
                                            },
                                            "destination_lng": {
                                                "type": "number",
                                                "format": "float",
                                                "description": "Latitude of the destination in decimal degrees.",
                                                "example": 37.459
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dispatch jobs created for the specified group as a result of the request.",
                        "schema": {
                            "$ref": "#/definitions/DispatchJobsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/dispatch_jobs/update": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/dispatch_jobs/update",
                "description": "Update dispatch jobs in the specified group.",
                "operationId": "update_fleet_dispatch_jobs",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "updateDispatchJobsParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "group_id",
                                "dispatch_jobs"
                            ],
                            "properties": {
                                "group_id": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "dispatch_jobs": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "ID of the Samsara dispatch job to be updated.",
                                                "example": 773
                                            },
                                            "external_identifier": {
                                                "type": "string",
                                                "description": "New= string that can be used to map jobs in the Samsara database to jobs in an external database.",
                                                "example": "mysql_dispatch_job_id_2379"
                                            },
                                            "driver_id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "New ID of the driver assigned to the dispatch job.",
                                                "example": 444
                                            },
                                            "vehicle_id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "New ID of the vehicle used for the dispatch job.",
                                                "example": 112
                                            },
                                            "job_state": {
                                                "type": "string",
                                                "enum": [
                                                    "JobState_Unassigned",
                                                    "JobState_Assigned",
                                                    "JobState_Started",
                                                    "JobState_Completed",
                                                    "JobState_Cancelled"
                                                ],
                                                "description": "The current state of the dispatch job.",
                                                "example": "JobState_Unassigned"
                                            },
                                            "scheduled_arrival_time_ms": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "The time at which the assigned driver is scheduled to arrive at the job destination.",
                                                "example": 1462881998034
                                            },
                                            "started_at_ms": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "The time at which the assigned driver started fulfilling the job (e.g. started driving to the destination).",
                                                "example": 1462881998034
                                            },
                                            "completed_at_ms": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "The time at which the job was marked complete.",
                                                "example": 1462881998034
                                            },
                                            "cancelled_at_ms": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "The time at which the job was marked cancelled.",
                                                "example": 1462881998034
                                            },
                                            "notes": {
                                                "type": "string",
                                                "description": "Notes regarding the details of this job.",
                                                "example": "Ensure crates are stacked no more than 3 high."
                                            },
                                            "destination_name": {
                                                "type": "string",
                                                "description": "The name of the job destination.",
                                                "example": "ACME Inc. Philadelphia HQ"
                                            },
                                            "destination_address": {
                                                "type": "string",
                                                "description": "The address of the job destination, as it would be recognized if provided to maps.google.com",
                                                "example": "123 Main St, Philadelphia, PA 19106"
                                            },
                                            "destination_lat": {
                                                "type": "number",
                                                "format": "float",
                                                "description": "Latitude of the destination in decimal degrees.",
                                                "example": 123.456
                                            },
                                            "destination_lng": {
                                                "type": "number",
                                                "format": "float",
                                                "description": "Latitude of the destination in decimal degrees.",
                                                "example": 37.459
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dispatch jobs updated for the specified group as a result of the request.",
                        "schema": {
                            "$ref": "#/definitions/DispatchJobsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/machines/list": {
            "post": {
                "tags": [
                    "Machines", "Default"
                ],
                "summary": "/machines/list",
                "description": "Get machine objects. This method returns a list of the machine objects in the Samsara Cloud and information about them.",
                "operationId": "get_machines",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of machine objects.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "machines": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Machine"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/machines/history": {
            "post": {
                "tags": [
                    "Machines", "Default"
                ],
                "summary": "/machines/history",
                "description": "Get historical data for machine objects. This method returns a set of historical data for all machines in a group",
                "operationId": "get_machines_history",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "historyParam",
                        "description": "Group ID and time range to query for events",
                        "required": true,
                        "in": "body",
                        "schema":{
                            "type": "object",
                            "required": [
                                "groupId",
                                "startMs",
                                "endMs"
                            ],
                            "properties":{
                                "groupId": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "startMs": {
                                    "type": "integer",
                                    "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462878398034
                                },
                                "endMs": {
                                    "type": "integer",
                                    "description": "End of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462881998034
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of machine results objects, each containing a time and a datapoint.",
                        "schema": {
                            "$ref": "#/definitions/MachineHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Sensor": {
            "type": "object",
            "description": "Contains information about a sensor.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the sensor.",
                    "format": "int64",
                    "example": 123
                },
                "name": {
                    "type": "string",
                    "description": "Name of the sensor.",
                    "example": "Freezer ABC"
                },
                "macAddress": {
                    "type": "string",
                    "description": "MAC address of the sensor.",
                    "example": "11:11:11:11:11:11"
                }
            }
        },
        "Vehicle": {
            "type": "object",
            "description": "A vehicle object.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the vehicle.",
                    "format": "int64",
                    "example": 112
                },
                "name": {
                    "type": "string",
                    "description": "Name of the vehicle.",
                    "example": "Truck A7"
                },
                "note": {
                    "type": "string",
                    "example": "Red truck 2015 M16"
                },
                "vin": {
                    "type": "string",
                    "description": "Vehicle Identification Number.",
                    "example": "1FUJA6BD31LJ09646"
                },
                "odometerMeters": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The number of meters reported by the odometer.",
                    "example": "60130000"
                }
            }
        },
        "VehicleLocation": {
            "type": "object",
            "description": "Contains the location, in latitude and longitude, of a vehicle.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the vehicle.",
                    "format": "int64",
                    "example": 112
                },
                "name": {
                    "type": "string",
                    "description": "Name of the vehicle.",
                    "example": "Truck A7"
                },
                "latitude": {
                    "type": "number",
                    "format": "float",
                    "description": "Latitude in decimal degrees.",
                    "example": 123.456
                },
                "longitude": {
                    "type": "number",
                    "format": "float",
                    "description": "Longitude in decimal degrees.",
                    "example": 32.897
                },
                "location": {
                    "type": "string",
                    "description": "Text representation of nearest identifiable location to (latitude, longitude) coordinates.",
                    "example": "1 Main St, Dallas, TX"
                },
                "time": {
                    "type": "integer",
                    "description": "The time the reported location was logged, reported as a UNIX timestamp in milliseconds.",
                    "example": 1462881998034
                },
                "onTrip": {
                    "type": "boolean",
                    "description": "Whether or not a trip is currently in progress for this vehicle. More information available via /fleet/trips endpoint.",
                    "example": true
                },
                "speed": {
                    "type": "number",
                    "format": "float",
                    "description": "Speed in miles per hour.",
                    "example": 64.37
                },
                "heading": {
                    "type": "number",
                    "format": "float",
                    "description": "Heading in degrees.",
                    "example": 246.42
                }
            }
        },
        "VehicleMaintenance": {
            "type": "object",
            "description": "Contains any J1939/Passenger engine light warnings and engine faults.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the vehicle.",
                    "format": "int64",
                    "example": 112
                },
                "j1939": {
                    "type": "object",
                    "description": "J1939 based data. Null if no data is available.",
                    "properties": {
                      "checkEngineLight": {
                          "type": "object",
                          "description": "J1939 check engine lights.",
                          "properties": {
                            "emissionsIsOn": {
                              "type": "boolean"
                            },
                            "protectIsOn": {
                              "type": "boolean"
                            },
                            "stopIsOn": {
                              "type": "boolean"
                            },
                            "warningIsOn": {
                              "type": "boolean"
                            }
                        }
                      },
                      "diagnosticTroubleCodes": {
                        "type": "array",
                        "description": "J1939 DTCs.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fmiId": {
                              "type": "integer"
                            },
                            "fmiText": {
                              "type": "string"
                            },
                            "occurrenceCount": {
                              "type": "integer"
                            },
                            "spnDescription": {
                              "type": "string"
                            },
                            "spnId": {
                              "type": "integer"
                            },
                            "txId": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                },
                "passenger": {
                    "type": "object",
                    "description": "Passenger vehicle data. Null if no data is available.",
                    "properties": {
                      "checkEngineLight": {
                          "type": "object",
                          "description": "Passenger vehicle check engine light.",
                          "properties": {
                            "isOn": {
                              "type": "boolean"
                            }
                        }
                      },
                      "diagnosticTroubleCodes": {
                        "type": "array",
                        "description": "Passenger vehicle DTCs.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dtcId": {
                              "type": "integer"
                            },
                            "dtcDescription": {
                              "type": "string"
                            },
                            "dtcShortCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                }
            }
        },
        "TemperatureResponse": {
            "type": "object",
            "description": "Contains the current temperatures of a sensor.",
            "properties": {
                "groupId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 101
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the sensor.",
                                "example": 122
                            },
                            "ambientTemperature": {
                                "type": "integer",
                                "description": "Currently reported ambient temperature in millidegrees celsius.",
                                "example": 11057
                            },
                            "probeTemperature": {
                                "type": "integer",
                                "description": "Currently reported probe temperature in millidegrees celsius. If no probe is connected, this parameter will not be reported.",
                                "example": -20145
                            }
                        }
                    }
                }
            }
        },
        "HumidityResponse": {
            "type": "object",
            "description": "Contains the current humidity of a sensor.",
            "properties": {
                "groupId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 101
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "description": "ID of the sensor.",
                                "format": "int64",
                                "example": 122
                            },
                            "humidity": {
                                "type": "integer",
                                "description": "Currently reported relative humidity in percent, from 0-100.",
                                "example": 53
                            }
                        }
                    }
                }
            }
        },
        "TripResponse": {
            "type": "object",
            "description": "Contains the trips for the vehicle in the requested timeframe. A trip is represented as an object that contains startMs, startLocation, startCoordinates, endMs, endLocation, and endCoordinates.",
            "properties": {
                "trips": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "startMs": {
                                "type": "integer",
                                "description": "Beginning of the trip in UNIX milliseconds.",
                                "example": 1462878398034
                            },
                            "startCoordinates": {
                                "type": "object",
                                "description": "Start (latitude, longitude) in decimal degrees.",
                                "properties": {
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 29.443702345
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -98.502888123
                                    }
                                }
                            },
                            "startLocation": {
                                "type": "string",
                                "description": "Text representation of nearest identifiable location to the start (latitude, longitude) coordinates.",
                                "example": "Woodland Lane, Dallas, TX"
                            },
                            "endMs": {
                                "type": "integer",
                                "description": "End of the trip in UNIX milliseconds.",
                                "example": 1462881998034
                            },
                            "endCoordinates": {
                                "type": "object",
                                "description": "End (latitude, longitude) in decimal degrees.",
                                "properties": {
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 23.413702345
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -91.502888123
                                    }
                                }
                            },
                            "endLocation": {
                                "type": "string",
                                "description": "Text representation of nearest identifiable location to the end (latitude, longitude) coordinates.",
                                "example": "FC Elementary School"
                            },
                            "distanceMeters": {
                                "type": "integer",
                                "description": "Length of the trip in meters.",
                                "example": 2500
                            },
                            "fuelConsumedMl": {
                                "type": "integer",
                                "description": "Amount in milliliters of fuel consumed on this trip.",
                                "example": 75700
                            },
                            "tollMeters": {
                                "type": "integer",
                                "description": "Length in meters trip spent on toll roads.",
                                "example": 32000
                            },
                            "driverId": {
                                "type": "integer",
                                "description": "ID of the driver.",
                                "example": 719
                            },
                            "startOdometer": {
                                "type": "integer",
                                "description": "Odometer reading at the beginning of the trip.",
                                "example": 210430450
                            },
                            "endOdometer": {
                                "type": "integer",
                                "description": "Odometer reading at the end of the trip.",
                                "example": 210430500
                            }
                        }
                    }
                }
            }
        },
        "DriversRespose": {
            "type": "object",
            "properties": {
                "drivers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the driver.",
                                "example": 444
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the driver.",
                                "example": "Fred Jacobs"
                            }
                        }
                    }
                }
            }
        },
        "DriversSummaryResponse": {
          "type": "object",
          "properties": {
            "summaries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "driverId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the driver.",
                    "example": 444
                  },
                  "driverName": {
                    "type": "string",
                    "description": "Name of the driver.",
                    "example": "Fred Jacobs"
                  },
                  "driverUsername": {
                    "type": "string",
                    "description": "Username of the driver.",
                    "example": "fjacobs"
                  },
                  "groupId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Group of the driver.",
                    "example": 111
                  },
                  "activeHours": {
                    "type": "number",
                    "format": "float",
                    "description": "Hours spent on duty or driving, rounded to two decimal places.",
                    "example": 5.40
                  },
                  "distanceMiles": {
                    "type": "number",
                    "format": "float",
                    "description": "Distance driven in miles, rounded to two decimal places.",
                    "example": 123.24
                  }
                }
              }
            }
          }
        },
        "DriverDailyLogResponse": {
          "type": "object",
          "properties": {
            "summaries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeHours": {
                    "type": "number",
                    "format": "float",
                    "description": "Hours spent on duty or driving, rounded to two decimal places.",
                    "example": 5.40
                  },
                  "certified": {
                    "type": "boolean",
                    "description": "Whether this HOS day chart was certified by the driver."
                  },
                  "certifiedAtMs": {
                    "type": "number",
                    "format": "int64",
                    "description": "Unix epoch time (in ms) of time when this chart was certified. If this chart is uncertified, 0."
                  },
                  "distanceMiles": {
                    "type": "number",
                    "format": "float",
                    "description": "Distance driven in miles, rounded to two decimal places.",
                    "example": 123.24
                  },
                  "startMs": {
                    "type": "integer",
                    "description": "End of the HOS day, specified in milliseconds UNIX time.",
                    "example": 1473750000000
                  },                  
                  "endMs": {
                    "type": "integer",
                    "description": "End of the HOS day, specified in milliseconds UNIX time.",
                    "example": 1473836400000
                  },
                  "trailerIds": {
                    "type": "object",
                    "format": "int64",
                    "description": "List of trailer ID's associated with the driver for the day.",
                    "example": [010293, 192933]
                  },
                  "vehicleIds": {
                    "type": "object",
                    "format": "int64",
                    "description": "List of vehicle ID's associated with the driver for the day.",
                    "example": [192319, 012958]
                  }
                }
              }
            }
          }
        },
        "HosLogsSummaryResponse": {
          "type": "object",
          "properties": {
            "drivers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "driverId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the driver.",
                    "example": 444
                  },
                  "driverName": {
                    "type": "string",
                    "description": "Name of the driver.",
                    "example": "Fred Jacobs"
                  },
                  "vehicleName": {
                    "type": "string",
                    "description": "Name of the vehicle.",
                    "example": "Vehicle 1"
                  },
                  "dutyStatus": {
                    "type": "string",
                    "description": "The Hours of Service status type. One of `OFF_DUTY`, `SLEEPER_BED`, `DRIVING`, `ON_DUTY`, `YARD_MOVE`, `PERSONAL_CONVEYANCE`.",
                    "example": "OFF_DUTY"
                  },
                  "timeInCurrentStatus": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of time (in ms) that the driver has been in the current `dutyStatus`.",
                    "example": 5000
                  },
                  "timeUntilBreak": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of time (in ms) remaining until the driver cannot drive without a rest break.",
                    "example": 28800000
                  },
                  "shiftDriveRemaining": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of remaining shift drive time (in ms).",
                    "example": 39600000
                  },
                  "shiftRemaining": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of remaining shift time (in ms).",
                    "example": 50400000
                  },
                  "cycleRemaining": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of remaining cycle time (in ms).",
                    "example": 252000000
                  },
                  "cycleTomorrow": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of cycle time (in ms) available tomorrow.",
                    "example": 252000000
                  },
                  "drivingInViolationToday": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of driving time in violation today (in ms).",
                    "example": 39600000
                  },
                  "drivingInViolationCycle": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of driving time in violation in this cycle (in ms).",
                    "example": 50400000
                  }
                }
              }
            }
          }
        },
        "DvirListResponse": {
          "type": "object",
          "properties": {
            "dvirs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "inspectionType": {
                    "type": "string",
                    "description": "Inspection type of the DVIR.",
                    "example": "pre trip"
                  },
                  "vehicle": {
                    "type": "object",
                    "description": "The vehicle on which DVIR was done.",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The vehicle id on which DVIR was done.",
                            "example": 19
                        },
                        "name": {
                            "type": "string",
                            "description": "The vehicle on which DVIR was done.",
                            "example": "Storer's vehicle 19"
                        }
                    }
                  },
                  "vehicleDefects": {
                    "type": "array",
                    "description": "Defects registered for the vehicle which was part of the DVIR.",
                    "items" : {
                        "type" : "object",
                        "properties" : {
                            "defectType": {
                                "type": "string",
                                "description": "The type of DVIR defect",
                                "example": "Air Compressor"
                            },
                            "comment": {
                                "type": "string",
                                "description": "The comment describing the type of DVIR defect",
                                "example": "Air Compressor not working"
                            }
                        }
                    }
                  },
                  "odometerMiles": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The odometer reading in miles for the vehicle when the DVIR was done.",
                    "example": 49912
                  },
                  "trailerName": {
                    "type": "string",
                    "description": "The name of the trailer which was part of the DVIR.",
                    "example": "Storer's Trailer 19"
                  },
                  "trailerDefects": {
                    "type": "array",
                    "description": "Defects registered for the trailer which was part of the DVIR.",
                    "items" : {
                        "type" : "object",
                        "properties" : {
                            "defectType": {
                                "type": "string",
                                "description": "The type of DVIR defect",
                                "example": "Air Compressor"
                            },
                            "comment": {
                                "type": "string",
                                "description": "The comment describing the type of DVIR defect",
                                "example": "Air Compressor not working"
                            }
                        }
                    }
                  },
                  "mechanicNotes": {
                    "type": "string",
                    "description": "The mechanics notes on the DVIR.",
                    "example": "The vehicle is now safe."
                  },
                  "vehicleCondition": {
                    "type": "string",
                    "description": "The condition of vechile on which DVIR was done.",
                    "example": "SATISFACTORY"
                  },
                  "defectsCorrected": {
                    "type": "boolean",
                    "description": "Signifies if the defects on the vehicle corrected after the DVIR is done.",
                    "example": true
                  },
                  "defectsNeedNotBeCorrected": {
                    "type": "boolean",
                    "description": "Signifies if the defects on this vehicle can be ignored.",
                    "example": false
                  },
                  "authorSignature": {
                    "type": "object",
                    "description": "The authors signature for the DVIR.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type corresponds to whether the signature corresponds to driver|mechanic.",
                            "example": "driver"
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the driver or mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "username": {
                            "type": "string",
                            "description": "Username of the  driver|mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "email": {
                            "type": "string",
                            "description": "Email of the  driver|mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "signedAt": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The time in millis when the DVIR was signed",
                            "example": 12535500000 
                        }
                    }
                  },
                  "mechanicOrAgentSignature": {
                    "type": "object",
                    "description": "The mechanic's or agent's signature for the DVIR.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type corresponds to whether the signature corresponds to driver|mechanic.",
                            "example": "driver"
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the agent or mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "username": {
                            "type": "string",
                            "description": "Username of the  agent|mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "email": {
                            "type": "string",
                            "description": "Email of the  agent|mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "signedAt": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The time in millis when the DVIR was signed",
                            "example": 12535500000 
                        }
                    }
                  },
                  "nextDriverSignature": {
                    "type": "object",
                    "description": "The next driver signature for the DVIR.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type corresponds to driver.",
                            "example": "driver"
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the driver who signed the next DVIR on this vehicle.",
                            "example": "driver"
                        },
                        "username": {
                            "type": "string",
                            "description": "Username of the  driver who signed the next DVIR on this vehicle.",
                            "example": "driver"
                        },
                        "email": {
                            "type": "string",
                            "description": "Email of the  driver who signed the next DVIR on this vehicle.",
                            "example": "driver"
                        },
                        "signedAt": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The time in millis when the next driver signed the DVIR on this vehicle.",
                            "example": 12535500000 
                        }
                    }
                  }
                }
              }
            }
          }
        },
        "HosLogsResponse": {
          "type": "object",
            "properties": {
                "logs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "groupId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the group.",
                                "example": 101
                            },
                            "vehicleId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the vehicle.",
                                "example": 112
                            },
                            "driverId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the driver.",
                                "example": 444
                            },
                            "logStartMs": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The time at which the log/HOS status started in UNIX milliseconds.",
                                "example": 1462881998034
                            },
                            "statusType": {
                                "type": "string",
                                "description": "The Hours of Service status type. One of `OFF_DUTY`, `SLEEPER_BED`, `DRIVING`, `ON_DUTY`, `YARD_MOVE`, `PERSONAL_CONVEYANCE`.",
                                "example": "OFF_DUTY"
                            },
                            "locCity": {
                                "type": "string",
                                "description": "City in which the log was recorded.",
                                "example": "Ahwatukee"
                            },
                            "locState": {
                                "type": "string",
                                "description": "State in which the log was recorded.",
                                "example": "Arizona"
                            },
                            "locLat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude at which the log was recorded.",
                                "example": 23.413702345
                            },
                            "locLng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude at which the log was recorded.",
                                "example": -98.502888123
                            },
                            "locName": {
                                "type": "string",
                                "description": "Name of location at which the log was recorded.",
                                "example": "McLean Site A"
                            }
                        }
                    }
                }
            }
        },
        "HosAuthenticationLogsResponse": {
            "type": "object",
            "properties": {
                "authenticationLogs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "actionType": {
                                "type": "string",
                                "description": "The log type - one of 'signin' or 'signout'",
                                "example": "signin"
                            },
                            "happenedAtMs": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The time at which the event was recorded in UNIX milliseconds.",
                                "example": 1462881998034
                            },
                            "city": {
                                "type": "string",
                                "description": "City in which the log was recorded, if applicable.",
                                "example": "Ahwatukee"
                            },
                            "state": {
                                "type": "string",
                                "description": "State in which the log was recorded, if applicable.",
                                "example": "Arizona"
                            },
                            "addressName": {
                                "type": "string",
                                "description": "Address name from the group address book at which the log was recorded, if applicable.",
                                "example": "Garage Number 3"
                            },
                            "address": {
                                "type": "string",
                                "description": "Address at which the log was recorded, if applicable.",
                                "example": "123 Main St., Ahwatukee, Arizona 85044"
                            }
                        }
                    }
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "description": "Contains the error response when a request fails.",
            "properties": {
                "status_code": {
                    "type": "integer",
                    "description": "HTTP status code returned.",
                    "format": "int64"
                },
                "message": {
                    "type": "string",
                    "description": "Error message returned."
                }
            }
        },
        "SensorHistoryResponse": {
            "type": "object",
            "description": "Contains the results for a sensor history request. Each result contains a timestamp and datapoint for each requested (sensor, field) pair.",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "timeMs": {
                                "type": "integer",
                                "description": "Timestamp in UNIX milliseconds.",
                                "example": 1453449599999
                            },
                            "series": {
                                "type": "array",
                                "description": "List of datapoints, one for each requested (sensor, field) pair.",
                                "items": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 1
                                }
                            }
                        }
                    }
                }
            }
        },
        "DispatchJobsResponse": {
            "type": "object",
            "properties": {
                "dispatch_jobs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the Samsara dispatch job to be updated.",
                                "example": 773
                            },
                            "external_identifier": {
                                "type": "string",
                                "description": "New= string that can be used to map jobs in the Samsara database to jobs in an external database.",
                                "example": "mysql_dispatch_job_id_2379"
                            },
                            "org_id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "group_id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "driver_id": {
                                "type": "integer",
                                "format": "int64",
                                "description":  "ID of the driver assigned to the dispatch job.",
                                "example": 444
                            },
                            "vehicle_id": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the vehicle used for the dispatch job.",
                                "example": 112
                            },
                            "job_state": {
                                "type": "string",
                                "enum": [
                                    "JobState_Unassigned",
                                    "JobState_Assigned",
                                    "JobState_Started",
                                    "JobState_Completed",
                                    "JobState_Cancelled"
                                ],
                                "description": "The current state of the dispatch job.",
                                "example": "JobState_Unassigned"
                            },
                            "scheduled_arrival_time_ms": {
                                "type": "integer",
                                "format": "int64",
                                 "description": "The time at which the assigned driver is scheduled to arrive at the job destination.",
                                 "example": 1462881998034
                            },
                            "started_at_ms": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The time at which the assigned driver started fulfilling the job (e.g. started driving to the destination).",
                                "example": 1462881998034
                            },
                            "completed_at_ms": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The time at which the job was marked complete.",
                                "example": 1462881998034
                            },
                            "cancelled_at_ms": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The time at which the job was marked cancelled.",
                                "example": 1462881998034
                            },
                            "job_created_at_ms": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The time at which the job was created.",
                                "example": 1462881998034
                            },
                            "notes": {
                                "type": "string",
                                "description": "Notes regarding the details of this job.",
                                "example": "Ensure crates are stacked no more than 3 high."
                            },
                            "destination_name": {
                                "type": "string",
                                "description": "The name of the job destination.",
                                "example": "ACME Inc. Philadelphia HQ"
                            },
                            "destination_address": {
                                "type": "string",
                                "description": "The address of the job destination, as it would be recognized if provided to maps.google.com",
                                "example": "123 Main St, Philadelphia, PA 19106"
                            },
                            "destination_lat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude of the destination in decimal degrees.",
                                "example": 123.456
                            },
                            "destination_lng": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude of the destination in decimal degrees.",
                                "example": 37.459
                            }
                        }
                    }
                }
            }
        },
        "Machine": {
            "type": "object",
            "description": "Contains information about a machine.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the machine.",
                    "format": "int64",
                    "example": 123
                },
                "name": {
                    "type": "string",
                    "description": "Name of the machine.",
                    "example": "Freezer ABC"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the machine",
                    "example": "This is in the left hallway behind the conveyor belt"
                }
            }
        },
        "MachineHistoryResponse": {
            "type": "object",
            "description": "Contains the results for a machine history request",
            "properties": {
                "machines": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "description": "Machine ID",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "description": "Machine name",
                                "example": "1/3 HP Motor"
                            },
                            "vibrations": {
                                "type": "array",
                                "description": "List of vibration datapoints, with timestamp and vibration measurement for x/y/z axis in mm/s",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "time": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1453449599999
                                        },
                                        "X": {
                                            "type": "float",
                                            "format": "float64",
                                            "example": 0.01
                                        },
                                        "Y": {
                                            "type": "float",
                                            "format": "float64",
                                            "example": 1.23
                                        },
                                        "Z": {
                                            "type": "float",
                                            "format": "float64",
                                            "example": 2.55
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "accessTokenParam": {
            "name": "access_token",
            "description": "Samsara API access token.",
            "required": true,
            "in": "query",
            "type": "string"
        },
        "groupParam": {
            "name": "groupParam",
            "description": "Group ID to query.",
            "required": true,
            "in": "body",
            "schema": {
                "type": "object",
                "required": [
                    "groupId"
                ],
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Group ID to query.",
                        "format": "int64",
                        "example": 101
                    }
                }
            }
        },
        "sensorParam": {
            "name": "sensorParam",
            "description": "Group ID and list of sensor IDs to query.",
            "required": true,
            "in": "body",
            "schema": {
                "type": "object",
                "required": [
                    "groupId",
                    "sensors"
                ],
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Group ID to query.",
                        "format": "int64",
                        "example": 101
                    },
                    "sensors": {
                        "type": "array",
                        "description": "List of sensor IDs to query.",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": [
                            122
                        ]
                    }
                }
            }
        }
    }
}
