{
    "swagger": "2.0",
    "info": {
        "title": "Samsara API",
        "version": "1.0.0",
        "description": "# Introduction\nThe Samsara REST API lets you interact with the Samsara Cloud from anything that can send an HTTP request. With the Samsara API you can build powerful applications and custom solutions with sensor data.\n\nSamsara has endpoints available to track and analyze sensors, vehicles, and entire fleets. If you’re familiar with what you can build with a REST API, the following API reference guide will be your go-to resource.\n\nAPI access to the Samsara cloud is available to all Samsara administrators. If you’d like to try the API, [contact us](https://www.samsara.com/free-trial)."
    },
    "host": "api.samsara.com",
    "schemes": [
        "https"
    ],
    "basePath": "/v1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [
        {
            "name": "Fleet",
            "description": "Access to fleet data"
        },
        {
            "name": "Industrial",
            "description": "Access to industrial data"
        },
        {
            "name": "Sensors",
            "description": "Access to sensor data"
        },
        {
            "name": "Assets",
            "description": "Access to asset specific data"
        },
        {
            "name": "Default",
            "description": "All Samsara API endpoints"
        }
    ],
    "paths": {
        "/sensors/list": {
            "post": {
                "tags": [
                    "Sensors", "Default"
                ],
                "summary": "/sensors/list",
                "description": "Get sensor objects. This method returns a list of the sensor objects in the Samsara Cloud and information about them.",
                "operationId": "get_sensors",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sensor objects.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sensors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Sensor"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sensors/temperature": {
            "post": {
                "tags": [
                    "Sensors", "Default"
                ],
                "summary": "/sensors/temperature",
                "description": "Get temperature for requested sensors. This method returns the current ambient temperature (and probe temperature if applicable) for the requested sensors.",
                "operationId": "get_sensors_temperature",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/sensorParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sensor objects containing the current temperature reported by each sensor.",
                        "schema": {
                            "$ref": "#/definitions/TemperatureResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sensors/humidity": {
            "post": {
                "tags": [
                    "Sensors", "Default"
                ],
                "summary": "/sensors/humidity",
                "description": "Get humidity for requested sensors. This method returns the current relative humidity for the requested sensors.",
                "operationId": "get_sensors_humidity",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/sensorParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sensor objects containing the current humidity reported by each sensor.",
                        "schema": {
                            "$ref": "#/definitions/HumidityResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sensors/cargo": {
            "post": {
                "tags": [
                    "Sensors", "Default"
                ],
                "summary": "/sensors/cargo",
                "description": "Get cargo monitor status (empty / full) for requested sensors.",
                "operationId": "get_sensors_cargo",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/sensorParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sensor objects containing the current cargo status reported by each sensor.",
                        "schema": {
                            "$ref": "#/definitions/CargoResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sensors/door": {
            "post": {
                "tags": [
                    "Sensors", "Default"
                ],
                "summary": "/sensors/door",
                "description": "Get door monitor status (closed / open) for requested sensors.",
                "operationId": "get_sensors_door",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/sensorParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sensor objects containing the current door status reported by each sensor.",
                        "schema": {
                            "$ref": "#/definitions/DoorResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sensors/history": {
            "post": {
                "tags": [
                    "Sensors", "Default"
                ],
                "summary": "/sensors/history",
                "description": "Get historical data for specified sensors. This method returns a set of historical data for the specified sensors in the specified time range and at the specified time resolution.",
                "operationId": "get_sensors_history",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "historyParam",
                        "description": "Group ID, time range and resolution, and list of sensor ID, field pairs to query.",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "startMs",
                                "endMs",
                                "stepMs",
                                "series"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "startMs": {
                                    "type": "integer",
                                    "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462878398034
                                },
                                "endMs": {
                                    "type": "integer",
                                    "description": "End of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462881998034
                                },
                                "stepMs": {
                                    "type": "integer",
                                    "description": "Time resolution for which data should be returned, in milliseconds. Specifying 3600000 will return data at hour intervals.",
                                    "example": 3600000
                                },
                                "series": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "Sensor ID and field to query.",
                                        "required": [
                                            "widgetId",
                                            "field"
                                        ],
                                        "properties": {
                                            "widgetId": {
                                                "type": "integer",
                                                "description": "Sensor ID to query.",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Field to query.",
                                                "enum": [
                                                    "ambientTemperature",
                                                    "probeTemperature",
                                                    "currentLoop1Raw",
                                                    "currentLoop1Mapped",
                                                    "currentLoop2Raw",
                                                    "currentLoop2Mapped",
                                                    "pmPowerTotal",
                                                    "pmPhase1Power",
                                                    "pmPhase2Power",
                                                    "pmPhase3Power",
                                                    "pmPhase1PowerFactor",
                                                    "pmPhase2PowerFactor",
                                                    "pmPhase3PowerFactor"
                                                ],
                                                "example": "ambientTemperature"
                                            }
                                        }
                                    }
                                },
                                "fillMissing": {
                                    "type": "string",
                                    "enum": [
                                        "withNull",
                                        "withPrevious"
                                    ],
                                    "default": "withNull"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of results objects, each containing a time and a datapoint for each requested sensor/field pair.",
                        "schema": {
                            "$ref": "#/definitions/SensorHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/list": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/list",
                "description": "Get list of the vehicles. This method returns a list of the vehicles in the Samsara Cloud and information about them.",
                "operationId": "get_fleet",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicles and information about each.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                },
                                "vehicles": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Vehicle"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/locations": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/locations",
                "description": "Get current location of vehicles in a group. This method returns the current location in latitude and longitude of all vehicles in a requested group.",
                "operationId": "get_fleet_locations",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicle objects containing their location and the time at which that location was logged.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                },
                                "vehicles": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VehicleLocation"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/trips": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/trips",
                "description": "Get historical trips data for specified vehicle. This method returns a set of historical trips data for the specified vehicle in the specified time range.",
                "operationId": "get_fleet_trips",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "tripsParam",
                        "description": "Group ID, vehicle ID and time range to query.",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "vehicleId",
                                "startMs",
                                "endMs"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "vehicleId": {
                                    "type": "integer",
                                    "description": "Vehicle ID to query.",
                                    "format": "int64",
                                    "example": 112
                                },
                                "startMs": {
                                    "type": "integer",
                                    "description": "Beginning of the time range, specified in milliseconds UNIX time. Limited to a 90 day window with respect to startMs and endMs",
                                    "example": 1462878398034
                                },
                                "endMs": {
                                    "type": "integer",
                                    "description": "End of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462881998034
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of trips taken by the requested vehicle within the specified timeframe.",
                        "schema": {
                            "$ref": "#/definitions/TripResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/drivers": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/drivers",
                "description": "Get all the drivers for the specified group.",
                "operationId": "get_fleet_drivers",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "groupDriversParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All drivers in the group.",
                        "schema": {
                            "$ref": "#/definitions/DriversRespose"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/drivers/create": {
            "post": {
                "tags": [
                    "Default", "Fleet", "Drivers"
                ],
                "summary": "/fleet/drivers/create",
                "description": "Create a new driver.",
                "operationId": "createDriver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/createDriverParam" }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the successfully created the driver.",
                        "schema": {
                            "$ref": "#/definitions/Driver"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/drivers/{driver_id}": {
            "parameters": [
                {
                    "$ref": "#/parameters/accessTokenParam"
                },
                {
                    "name": "driver_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the driver.",
                    "type": "integer",
                    "format": "int64"
                }
            ],
            "get": {
                "tags": [
                    "Default", "Fleet", "Drivers"
                ],
                "summary": "/fleet/drivers/{driver_id:[0-9]+}",
                "description": "Fetch driver by id.",
                "operationId": "getDriverById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns the driver for the given driver_id.",
                        "schema": {
                            "$ref": "#/definitions/Driver"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Default", "Fleet", "Drivers"
                ],
                "summary": "/fleet/drivers/{driver_id:[0-9]+}",
                "description": "Deactivate a driver with the given driver_id.",
                "operationId": "deactivateDriver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deactivated the driver, which is now referenced by /fleet/drivers/inactive/{driver_id}."
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/drivers/inactive": {
            "get": {
                "tags": [
                    "Default", "Fleet", "Drivers"
                ],
                "summary": "/fleet/drivers/inactive",
                "description": "Fetch all deactivated drivers for the group.",
                "operationId": "getAllDeactivatedDrivers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/groupIdParam" }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an array of all deactivated drivers for the group. Deactivated drivers are referenced at /fleet/drivers/inactive/{driver_id}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Driver"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/drivers/inactive/{driver_id}": {
            "parameters": [
                {
                    "$ref": "#/parameters/accessTokenParam"
                },
                {
                    "name": "driver_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the deactivated driver.",
                    "type": "integer",
                    "format": "int64"
                }
            ],
            "get": {
                "tags": [
                    "Default", "Fleet", "Drivers"
                ],
                "summary": "/fleet/drivers/inactive/{driver_id:[0-9]+}",
                "description": "Fetch deactivated driver by driver_id.",
                "operationId": "getDeactivatedDriverById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns the deactivated driver with the given driver_id.",
                        "schema": {
                            "$ref": "#/definitions/Driver"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Default", "Fleet", "Drivers"
                ],
                "summary": "/fleet/drivers/inactive/{driver_id:[0-9]+}",
                "description": "Reactivate the inactive driver having driver_id.",
                "operationId": "reactivateDriverById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/reactivateDriverParam" }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the reactivated driver, which is now available at /fleet/drivers/{driver_id}.",
                        "schema": {
                            "$ref": "#/definitions/Driver"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/drivers/summary": {
          "post": {
            "tags": [
              "Fleet", "Default"
            ],
            "summary": "/fleet/drivers/summary",
            "description": "Get the distance and time each driver in an organization has driven in a given time period.",
            "operationId": "get_fleet_drivers_summary",
            "parameters": [
              {
                "$ref": "#/parameters/accessTokenParam"
              },
              {
                "name": "snap_to_day_bounds",
                "description": "Snap query result to HOS day boundaries.",
                "required": false,
                "in": "query",
                "type": "boolean"
              },
              {
                "name": "driversSummaryParam",
                "description": "Org ID and time range to query.",
                "required": true,
                "in": "body",
                "schema": {
                  "type": "object",
                  "required": [
                    "orgId",
                    "startMs",
                    "endMs"
                  ],
                  "properties": {
                    "orgId": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Org ID to query.",
                      "example": 101
                    },
                    "startMs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Start time (ms) of queried time period.",
                      "example": 1481076243389
                    },
                    "endMs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "End time (ms) of queried time period.",
                      "example": 1481076244389
                    }
                  }
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Distance traveled and time active for each driver in the organization over the specified time period.",
                "schema": {
                  "$ref": "#/definitions/DriversSummaryResponse"
                }
              },
              "default": {
                "description": "Unexpected error.",
                "schema": {
                  "$ref": "#/definitions/ErrorResponse"
                }
              }
            }
          }
        },
        "/fleet/drivers/{driver_id}/hos_daily_logs": {
          "post": {
            "tags": [
              "Fleet", "Default"
            ],
            "summary": "/fleet/drivers/{driver_id:[0-9]+}/hos_daily_logs",
            "description": "Get summarized daily HOS charts for a specified driver.",
            "operationId": "get_fleet_drivers_hos_daily_logs",
            "parameters": [
                {
                    "$ref": "#/parameters/accessTokenParam"
                },
                {
                    "name": "driver_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the driver with HOS logs.",
                    "type": "integer",
                    "format": "int64"
                },
                {
                    "name": "hosLogsParam",
                    "required": true,
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "required": [
                            "groupId",
                            "driverId",
                            "startMs",
                            "endMs"
                        ],
                        "properties": {
                            "groupId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Group ID to query.",
                                "example": 101
                            },
                            "driverId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Driver ID to query.",
                                "example": 444
                            },
                            "startMs": {
                                "type": "integer",
                                "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                                "example": 1462878398034
                            },
                            "endMs": {
                                "type": "integer",
                                "description": "End of the time range, specified in milliseconds UNIX time.",
                                "example": 1462881998034
                            }
                        }
                    }
                }
            ],
            "responses": {
              "200": {
                "description": "Distance traveled and time active for each driver in the organization over the specified time period.",
                "schema": {
                  "$ref": "#/definitions/DriverDailyLogResponse"
                }
              },
              "default": {
                "description": "Unexpected error.",
                "schema": {
                  "$ref": "#/definitions/ErrorResponse"
                }
              }
            }
          }
        },
        "/fleet/hos_logs": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/hos_logs",
                "description": "Get the HOS (hours of service) logs for the specified driver.",
                "operationId": "get_fleet_hos_logs",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "hosLogsParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "driverId",
                                "startMs",
                                "endMs"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                },
                                "driverId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Driver ID to query.",
                                    "example": 444
                                },
                                "startMs": {
                                    "type": "integer",
                                    "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462878398034
                                },
                                "endMs": {
                                    "type": "integer",
                                    "description": "End of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462881998034
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HOS logs for the specified driver.",
                        "schema": {
                            "$ref": "#/definitions/HosLogsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/hos_logs_summary": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/hos_logs_summary",
                "description": "Get the current HOS status for all drivers in the group.",
                "operationId": "get_fleet_hos_logs_summary",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "hosLogsParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HOS logs for the specified driver.",
                        "schema": {
                            "$ref": "#/definitions/HosLogsSummaryResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/maintenance/dvirs": {
            "get": {
                "tags": [
                    "Fleet","Default"
                ],
                "summary": "/fleet/maintenance/dvirs",
                "description": "Get the DVIR for the org with the time constraints",
                "operationId": "get_dvirs",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "end_ms",
                        "description": "time in millis until the last dvir log.",
                        "required": true,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "duration_ms",
                        "description": "time in millis which corresponds to the duration before the end_ms.",
                        "required": true,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "group_id",
                        "description": "Group ID to query.",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DVIR's for the specified group and duration.",
                        "schema": {
                            "$ref": "#/definitions/DvirListResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/hos_authentication_logs": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/hos_authentication_logs",
                "description": "Get the HOS (hours of service) signin and signout logs for the specified driver. Only signout logs include location information.",
                "operationId": "get_fleet_hos_authentication_logs",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "hosAuthenticationLogsParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "driverId",
                                "startMs",
                                "endMs"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Group ID to query.",
                                    "example": 101
                                },
                                "driverId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Driver ID to query.",
                                    "example": 444
                                },
                                "startMs": {
                                    "type": "integer",
                                    "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462878398034
                                },
                                "endMs": {
                                    "type": "integer",
                                    "description": "End of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462881998034
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HOS authentication logs for the specified driver.",
                        "schema": {
                            "$ref": "#/definitions/HosAuthenticationLogsResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/maintenance/list": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/maintenance/list",
                "description": "Get list of the vehicles with any engine faults or check light data.",
                "operationId": "get_fleet_maintenance_list",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicles and maintenance information about each.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "vehicles": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/VehicleMaintenance"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/add_address": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/add_address",
                "description": "This method adds an address book entry to the specified group.",
                "operationId": "add_fleet_address",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "addressParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "name",
                                "address",
                                "radius"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the location to add to the address book.",
                                    "example": "HQ"
                                },
                                "address": {
                                    "type": "string",
                                    "description": "The address of the entry to add, as it would be recognized if provided to maps.google.com.",
                                    "example": "501 York St"
                                },
                                "radius": {
                                    "type": "integer",
                                    "description": "Radius in meters of the address (used for matching vehicle trip stops to this location).",
                                    "example": 10
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address was successfully added. No response body is returned."
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/set_data": {
            "post": {
                "tags": [
                    "Fleet", "Default"
                ],
                "summary": "/fleet/set_data",
                "description": "This method enables the mutation of metadata for vehicles in the Samsara Cloud.",
                "operationId": "update_vehicles",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "vehicleUpdateParam",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "groupId",
                                "vehicles"
                            ],
                            "properties": {
                                "groupId": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "vehicles": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Vehicle"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicles were successfully updated. No response body is returned."
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/dispatch/routes": {
            "get": {
                "tags": [
                    "Default", "Fleet", "Routes"
                ],
                "summary": "/fleet/dispatch/routes",
                "description": "Fetch all of the dispatch routes for the group.",
                "operationId": "fetchAllDispatchRoutes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/groupIdParam" },
                    { "$ref": "#/parameters/routeEndTimeParam" },
                    { "$ref": "#/parameters/routeDurationParam" }
                ],
                "responses": {
                    "200": {
                        "description": "All dispatch route objects for the group.",
                        "schema": {
                            "$ref": "#/definitions/DispatchRoutes"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Default", "Fleet", "Routes"
                ],
                "summary": "/fleet/dispatch/routes",
                "description": "Create a new dispatch route.",
                "operationId": "createDispatchRoute",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/routeCreateParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created route object including the new route ID.",
                        "schema": {
                            "$ref": "#/definitions/DispatchRoute"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/dispatch/routes/job_updates": {
            "get": {
                "tags": [
                    "Fleet", "Routes", "Default"
                ],
                "summary": "/fleet/dispatch/routes/job_updates",
                "description": "Fetch all updates to a job including route data in the last 24 hours or subsequent to an event ID",
                "operationId": "fetchAllRouteJobUpdates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/groupIdParam" },
                    {"$ref": "#/parameters/lastReceivedEventIDParam"}
                ],
                "responses": {
                    "200": {
                        "description": "All job updates on routes.",
                        "schema": {
                            "$ref": "#/definitions/allRouteJobUpdates"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/dispatch/routes/{route_id}": {
            "parameters": [
                {
                    "$ref": "#/parameters/accessTokenParam"
                },
                {
                    "name": "route_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the dispatch route.",
                    "type": "integer",
                    "format": "int64"
                }
            ],
            "get": {
                "tags": [
                    "Default",
                    "Fleet",
                    "Routes"
                ],
                "summary": "/fleet/dispatch/routes/{route_id:[0-9]+}",
                "description": "Fetch a dispatch route by id.",
                "operationId": "getDispatchRouteById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The dispatch route corresponding to route_id.",
                        "schema": {
                            "$ref": "#/definitions/DispatchRoute"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Default", "Fleet", "Routes"
                ],
                "summary": "/fleet/dispatch/routes/{route_id:[0-9]+}/",
                "description": "Update a dispatch route and its associated jobs.",
                "operationId": "updateDispatchRouteById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/routeUpdateParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update the dispatch route. Allowable updates include setting job state, adding or removing jobs, and changing job locations and times.",
                        "schema": {
                            "$ref": "#/definitions/DispatchRoute"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Default", "Fleet", "Routes"
                ],
                "summary": "/fleet/dispatch/routes/{route_id:[0-9]+}/",
                "description": "Delete a dispatch route and its associated jobs.",
                "operationId": "deleteDispatchRouteById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the dispatch route. No response body is returned."
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/dispatch/routes/{route_id}/history": {
            "get": {
                "tags": [
                    "Default",
                    "Fleet",
                    "Routes"
                ],
                "summary": "/fleet/dispatch/routes/{route_id:[0-9]+}/history",
                "description": "Fetch the history of a dispatch route.",
                "operationId": "getDispatchRouteHistory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/routeHistoryStartTimeParam" },
                    { "$ref": "#/parameters/routeHistoryEndTimeParam" },
                    {
                        "name": "route_id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the route with history.",
                        "type": "integer",
                        "format": "int64"
                    }
               ],
                "responses": {
                    "200": {
                        "description": "The historical route state changes between start_time and end_time.",
                        "schema": {
                            "$ref": "#/definitions/DispatchRouteHistory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/drivers/{driver_id}/dispatch/routes": {
            "parameters": [
                {
                    "$ref": "#/parameters/accessTokenParam"
                },
                {
                    "name": "driver_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the driver with the associated routes.",
                    "type": "integer",
                    "format": "int64"
                }
            ],
            "get": {
                "tags": [
                    "Default",
                    "Fleet",
                    "Routes"
                ],
                "summary": "/fleet/drivers/{driver_id:[0-9]+}/dispatch/routes",
                "description": "Fetch all of the dispatch routes for a given driver.",
                "operationId": "getDispatchRoutesByDriverId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/routeEndTimeParam" },
                    { "$ref": "#/parameters/routeDurationParam" }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the dispatch routes for the given driver_id.",
                        "schema": {
                            "$ref": "#/definitions/DispatchRoutes"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Default", "Fleet", "Routes"
                ],
                "summary": "/fleet/drivers/{driver_id:[0-9]+}/dispatch/routes",
                "description": "Create a new dispatch route for the driver with driver_id.",
                "operationId": "createDriverDispatchRoute",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/routeCreateParam" }
                ],
                "responses": {
                    "200": {
                        "description": "Created route object including the new route ID.",
                        "schema": {
                            "$ref": "#/definitions/DispatchRoute"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/vehicles/{vehicle_id}/dispatch/routes": {
            "parameters": [
                {
                    "$ref": "#/parameters/accessTokenParam"
                },
                {
                    "name": "vehicle_id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the vehicle with the associated routes.",
                    "type": "integer",
                    "format": "int64"
                }
            ],
            "get": {
                "tags": [
                    "Default",
                    "Fleet",
                    "Routes"
                ],
                "summary": "/fleet/vehicles/{vehicle_id:[0-9]+}/dispatch/routes",
                "description": "Fetch all of the dispatch routes for a given vehicle.",
                "operationId": "getDispatchRoutesByVehicleId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/routeEndTimeParam" },
                    { "$ref": "#/parameters/routeDurationParam" }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all of the dispatch routes for the given vehicle_id.",
                        "schema": {
                            "$ref": "#/definitions/DispatchRoutes"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Default", "Fleet", "Routes"
                ],
                "summary": "/fleet/vehicles/{vehicle_id:[0-9]+}/dispatch/routes",
                "description": "Create a new dispatch route for the vehicle with vehicle_id.",
                "operationId": "createVehicleDispatchRoute",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/routeCreateParam" }
                ],
                "responses": {
                    "200": {
                        "description": "Created route object including the new route ID.",
                        "schema": {
                            "$ref": "#/definitions/DispatchRoute"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/machines/list": {
            "post": {
                "tags": [
                    "Industrial", "Default"
                ],
                "summary": "/machines/list",
                "description": "Get machine objects. This method returns a list of the machine objects in the Samsara Cloud and information about them.",
                "operationId": "get_machines",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "$ref": "#/parameters/groupParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of machine objects.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "machines": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Machine"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/machines/history": {
            "post": {
                "tags": [
                    "Industrial", "Default"
                ],
                "summary": "/machines/history",
                "description": "Get historical data for machine objects. This method returns a set of historical data for all machines in a group",
                "operationId": "get_machines_history",
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "historyParam",
                        "description": "Group ID and time range to query for events",
                        "required": true,
                        "in": "body",
                        "schema":{
                            "type": "object",
                            "required": [
                                "groupId",
                                "startMs",
                                "endMs"
                            ],
                            "properties":{
                                "groupId": {
                                    "type": "integer",
                                    "description": "Group ID to query.",
                                    "format": "int64",
                                    "example": 101
                                },
                                "startMs": {
                                    "type": "integer",
                                    "description": "Beginning of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462878398034
                                },
                                "endMs": {
                                    "type": "integer",
                                    "description": "End of the time range, specified in milliseconds UNIX time.",
                                    "example": 1462881998034
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of machine results objects, each containing a time and a datapoint.",
                        "schema": {
                            "$ref": "#/definitions/MachineHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/industrial/data": {
            "get": {
                "tags": [
                    "Industrial", "Default"
                ],
                "summary": "/industrial/data",
                "description": "Fetch all of the data inputs for a group.",
                "operationId": "GetAllDataInputs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/groupParam" },
                    { "$ref": "#/parameters/dataInputStartTimeParam"},
                    { "$ref": "#/parameters/dataInputEndTimeParam"}
                ],
                "responses": {
                    "200": {
                        "description": "List of data inputs.",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "dataInputs":{
                                    "type": "array",
                                    "items":{
                                        "$ref": "#/definitions/DataInputHistoryResponse"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/industrial/data/{data_input_id}": {
            "get": {
                "tags": [
                    "Industrial", "Default"
                ],
                "summary": "/industrial/data/{data_input_id:[0-9]+}",
                "description": "Fetch datapoints from a given data input.",
                "operationId": "GetDataInput",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/dataInputIdParam"},
                    { "$ref": "#/parameters/dataInputStartTimeParam"},
                    { "$ref": "#/parameters/dataInputEndTimeParam"}
                ],
                "responses": {
                    "200": {
                        "description": "Returns datapoints for the given data input",
                        "schema": {
                            "$ref": "#/definitions/DataInputHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "tags": [
                    "Default"
                ],
                "summary": "/tags",
                "description": "Fetch all of the tags for a group.",
                "operationId": "GetAllTags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/groupParam" }
                ],
                "responses": {
                    "200": {
                        "description": "List of tags.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Tag"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Default"
                ],
                "summary": "/tags",
                "description": "Create a new tag for the group.",
                "operationId": "CreateTag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/tagCreateParam" }
                ],
                "responses": {
                    "200": {
                        "description": "Newly created tag object, including the new tag ID.",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tags/{tag_id}": {
            "get": {
                "tags": [
                    "Default"
                ],
                "summary": "/tags/{tag_id:[0-9]+}",
                "description": "Fetch a tag by id.",
                "operationId": "getTagById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "tag_id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tag.",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The tag corresponding to tag_id.",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Default"
                ],
                "summary": "/tags/{tag_id:[0-9]+}",
                "description": "Update a tag with a new name and new members. This API call would replace all old members of a tag with new members specified in the request body.",
                "operationId": "updateTagById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "tag_id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tag.",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "$ref": "#/parameters/tagUpdateParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated tag data.",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Default"
                ],
                "summary": "/tags/{tag_id:[0-9]+}",
                "description": "Permanently deletes a tag.",
                "operationId": "deleteTagById",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/accessTokenParam"
                    },
                    {
                        "name": "tag_id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the tag.",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the tag. No response body is returned."
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/assets": {
            "get": {
                "tags": [
                    "Default", "Fleet", "Assets"
                ],
                "summary": "/fleet/assets",
                "description": "Fetch all of the assets for the group.",
                "operationId": "GetAllAssets",
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/groupParam" }
                ],
                "responses": {
                    "200": {
                        "description": "List of assets.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "assets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Asset"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/assets/locations": {
            "get": {
                "tags": [
                    "Default", "Fleet", "Assets"
                ],
                "summary": "/fleet/assets/locations",
                "description": "Fetch current locations of all assets for the group.",
                "operationId": "GetAllAssetCurrentLocations",
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/groupParam" }
                ],
                "responses": {
                    "200": {
                        "description": "List of assets and their current locations.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "assets": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AssetCurrentLocationsResponse"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/assets/{asset_id}/reefer": {
            "get": {
                "tags": [
                    "Default", "Fleet", "Assets"
                ],
                "summary": "/fleet/assets/{assetId:[0-9]+}/reefer",
                "description": "Fetch the reefer-specific stats of an asset.",
                "operationId": "GetAssetReefer",
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/assetIdParam" },
                    { "$ref": "#/parameters/assetHistoryStartTimeParam" },
                    { "$ref": "#/parameters/assetHistoryEndTimeParam" }
                ],
                "responses": {
                    "200": {
                        "description": "Reefer-specific asset details.",
                        "schema": {
                            "$ref": "#/definitions/AssetReeferResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fleet/assets/{asset_id}/locations": {
            "get": {
                "tags": [
                    "Default", "Fleet", "Assets"
                ],
                "summary": "/fleet/assets/{assetId:[0-9]+}/locations",
                "description": "Fetch the historical locations for the asset.",
                "operationId": "GetAssetLocation",
                "parameters": [
                    { "$ref": "#/parameters/accessTokenParam" },
                    { "$ref": "#/parameters/assetIdParam" },
                    { "$ref": "#/parameters/assetHistoryStartTimeParam" },
                    { "$ref": "#/parameters/assetHistoryEndTimeParam" }
                ],
                "responses": {
                    "200": {
                        "description": "Asset location details.",
                        "schema": {
                            "$ref": "#/definitions/AssetLocationResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Sensor": {
            "type": "object",
            "description": "Contains information about a sensor.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the sensor.",
                    "format": "int64",
                    "example": 123
                },
                "name": {
                    "type": "string",
                    "description": "Name of the sensor.",
                    "example": "Freezer ABC"
                },
                "macAddress": {
                    "type": "string",
                    "description": "MAC address of the sensor.",
                    "example": "11:11:11:11:11:11"
                }
            }
        },
        "Vehicle": {
            "type": "object",
            "description": "A vehicle object.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the vehicle.",
                    "format": "int64",
                    "example": 112
                },
                "name": {
                    "type": "string",
                    "description": "Name of the vehicle.",
                    "example": "Truck A7"
                },
                "note": {
                    "type": "string",
                    "example": "Red truck 2015 M16"
                },
                "vin": {
                    "type": "string",
                    "description": "Vehicle Identification Number.",
                    "example": "1FUJA6BD31LJ09646"
                },
                "odometerMeters": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The number of meters reported by the odometer.",
                    "example": "60130000"
                },
                "engineHours": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total engine hours for the vehicle.",
                    "example": "1500"
                }
            }
        },
        "VehicleLocation": {
            "type": "object",
            "description": "Contains the location, in latitude and longitude, of a vehicle.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the vehicle.",
                    "format": "int64",
                    "example": 112
                },
                "name": {
                    "type": "string",
                    "description": "Name of the vehicle.",
                    "example": "Truck A7"
                },
                "latitude": {
                    "type": "number",
                    "format": "float",
                    "description": "Latitude in decimal degrees.",
                    "example": 123.456
                },
                "longitude": {
                    "type": "number",
                    "format": "float",
                    "description": "Longitude in decimal degrees.",
                    "example": 32.897
                },
                "location": {
                    "type": "string",
                    "description": "Text representation of nearest identifiable location to (latitude, longitude) coordinates.",
                    "example": "1 Main St, Dallas, TX"
                },
                "vin": {
                    "type": "string",
                    "description": "Vehicle Identification Number (VIN) of the vehicle.",
                    "example": "JTNBB46KX73011966"
                },
                "time": {
                    "type": "integer",
                    "description": "The time the reported location was logged, reported as a UNIX timestamp in milliseconds.",
                    "example": 1462881998034
                },
                "onTrip": {
                    "type": "boolean",
                    "description": "Whether or not a trip is currently in progress for this vehicle. More information available via /fleet/trips endpoint.",
                    "example": true
                },
                "speed": {
                    "type": "number",
                    "format": "float",
                    "description": "Speed in miles per hour.",
                    "example": 64.37
                },
                "heading": {
                    "type": "number",
                    "format": "float",
                    "description": "Heading in degrees.",
                    "example": 246.42
                }
            }
        },
        "VehicleMaintenance": {
            "type": "object",
            "description": "Contains any J1939/Passenger engine light warnings and engine faults.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the vehicle.",
                    "format": "int64",
                    "example": 112
                },
                "j1939": {
                    "type": "object",
                    "description": "J1939 based data. Null if no data is available.",
                    "properties": {
                      "checkEngineLight": {
                          "type": "object",
                          "description": "J1939 check engine lights.",
                          "properties": {
                            "emissionsIsOn": {
                              "type": "boolean"
                            },
                            "protectIsOn": {
                              "type": "boolean"
                            },
                            "stopIsOn": {
                              "type": "boolean"
                            },
                            "warningIsOn": {
                              "type": "boolean"
                            }
                        }
                      },
                      "diagnosticTroubleCodes": {
                        "type": "array",
                        "description": "J1939 DTCs.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fmiId": {
                              "type": "integer"
                            },
                            "fmiText": {
                              "type": "string"
                            },
                            "occurrenceCount": {
                              "type": "integer"
                            },
                            "spnDescription": {
                              "type": "string"
                            },
                            "spnId": {
                              "type": "integer"
                            },
                            "txId": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                },
                "passenger": {
                    "type": "object",
                    "description": "Passenger vehicle data. Null if no data is available.",
                    "properties": {
                      "checkEngineLight": {
                          "type": "object",
                          "description": "Passenger vehicle check engine light.",
                          "properties": {
                            "isOn": {
                              "type": "boolean"
                            }
                        }
                      },
                      "diagnosticTroubleCodes": {
                        "type": "array",
                        "description": "Passenger vehicle DTCs.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dtcId": {
                              "type": "integer"
                            },
                            "dtcDescription": {
                              "type": "string"
                            },
                            "dtcShortCode": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                }
            }
        },
        "TemperatureResponse": {
            "type": "object",
            "description": "Contains the current temperatures of a sensor.",
            "properties": {
                "groupId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 101
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the sensor.",
                                "example": 122
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the sensor.",
                                "example": "Freezer Temp Sensor"
                            },
                            "ambientTemperature": {
                                "type": "integer",
                                "description": "Currently reported ambient temperature in millidegrees celsius.",
                                "example": 11057
                            },
                            "probeTemperature": {
                                "type": "integer",
                                "description": "Currently reported probe temperature in millidegrees celsius. If no probe is connected, this parameter will not be reported.",
                                "example": -20145
                            }
                        }
                    }
                }
            }
        },
        "HumidityResponse": {
            "type": "object",
            "description": "Contains the current humidity of a sensor.",
            "properties": {
                "groupId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 101
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "description": "ID of the sensor.",
                                "format": "int64",
                                "example": 122
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the sensor.",
                                "example": "Freezer Humidity Sensor"
                            },
                            "humidity": {
                                "type": "integer",
                                "description": "Currently reported relative humidity in percent, from 0-100.",
                                "example": 53
                            }
                        }
                    }
                }
            }
        },
        "CargoResponse": {
            "type": "object",
            "description": "Contains the current cargo status of a sensor.",
            "properties": {
                "groupId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 101
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "description": "ID of the sensor.",
                                "format": "int64",
                                "example": 122
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the sensor.",
                                "example": "Trailer Cargo Sensor"
                            },
                            "cargoEmpty": {
                                "type": "boolean",
                                "description": "Flag indicating whether the current cargo is empty or loaded.",
                                "example": true
                            }
                        }
                    }
                }
            }
        },
        "DoorResponse": {
            "type": "object",
            "description": "Contains the current door status of a sensor.",
            "properties": {
                "groupId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 101
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "description": "ID of the sensor.",
                                "format": "int64",
                                "example": 122
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the sensor.",
                                "example": "Trailer Door Sensor"
                            },
                            "doorClosed": {
                                "type": "boolean",
                                "description": "Flag indicating whether the current door is closed or open.",
                                "example": true
                            }
                        }
                    }
                }
            }
        },
        "TripResponse": {
            "type": "object",
            "description": "Contains the trips for the vehicle in the requested timeframe. A trip is represented as an object that contains startMs, startLocation, startCoordinates, endMs, endLocation, and endCoordinates.",
            "properties": {
                "trips": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "startMs": {
                                "type": "integer",
                                "description": "Beginning of the trip in UNIX milliseconds.",
                                "example": 1462878398034
                            },
                            "startCoordinates": {
                                "type": "object",
                                "description": "Start (latitude, longitude) in decimal degrees.",
                                "properties": {
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 29.443702345
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -98.502888123
                                    }
                                }
                            },
                            "startLocation": {
                                "type": "string",
                                "description": "Text representation of nearest identifiable location to the start (latitude, longitude) coordinates.",
                                "example": "Woodland Lane, Dallas, TX"
                            },
                            "endMs": {
                                "type": "integer",
                                "description": "End of the trip in UNIX milliseconds.",
                                "example": 1462881998034
                            },
                            "endCoordinates": {
                                "type": "object",
                                "description": "End (latitude, longitude) in decimal degrees.",
                                "properties": {
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 23.413702345
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -91.502888123
                                    }
                                }
                            },
                            "endLocation": {
                                "type": "string",
                                "description": "Text representation of nearest identifiable location to the end (latitude, longitude) coordinates.",
                                "example": "FC Elementary School"
                            },
                            "distanceMeters": {
                                "type": "integer",
                                "description": "Length of the trip in meters.",
                                "example": 2500
                            },
                            "fuelConsumedMl": {
                                "type": "integer",
                                "description": "Amount in milliliters of fuel consumed on this trip.",
                                "example": 75700
                            },
                            "tollMeters": {
                                "type": "integer",
                                "description": "Length in meters trip spent on toll roads.",
                                "example": 32000
                            },
                            "driverId": {
                                "type": "integer",
                                "description": "ID of the driver.",
                                "example": 719
                            },
                            "startOdometer": {
                                "type": "integer",
                                "description": "Odometer reading at the beginning of the trip.",
                                "example": 210430450
                            },
                            "endOdometer": {
                                "type": "integer",
                                "description": "Odometer reading at the end of the trip.",
                                "example": 210430500
                            }
                        }
                    }
                }
            }
        },
        "DriverBase": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Driver's name.",
                    "example": "Susan Jones"
                },
                "username": {
                    "type": "string",
                    "description": "Driver's login username into the driver app.",
                    "example": "Susan Jones"
                },
                "phone": {
                    "type": "string",
                    "description": "Driver's phone number.",
                    "example": "5558234327"
                },
                "licenseNumber": {
                    "type": "string",
                    "description": "Driver's state issued license number.",
                    "example": "E1234567"
                },
                "licenseState": {
                    "type": "string",
                    "description": "Abbreviation of state that issued driver's license.",
                    "example": "CA"
                },
                "eldExempt": {
                    "type": "boolean",
                    "description": "Flag indicating this driver is exempt from the Electronic Logging Mandate."
                },
                "eldExemptReason": {
                    "type": "string",
                    "description": "Reason that this driver is exempt from the Electronic Logging Mandate (see eldExempt)."
                },
                "eldBigDayExemptionEnabled": {
                    "type": "boolean",
                    "description": "Flag indicating this driver may use Big Day excemptions in ELD logs."
                },
                "eldAdverseWeatherExemptionEnabled": {
                    "type": "boolean",
                    "description": "Flag indicating this driver may use Adverse Weather exemptions in ELD logs."
                },
                "eldPcEnabled": {
                    "type": "boolean",
                    "description": "Flag indicating this driver may select the Personal Conveyance duty status in ELD logs.",
                    "default": false
                },
                "eldYmEnabled": {
                    "type": "boolean",
                    "description": "Flag indicating this driver may select the Yard Move duty status in ELD logs.",
                    "default": false
                },
                "eldDayStartHour": {
                    "type": "integer",
                    "description": "0 indicating midnight-to-midnight ELD driving hours, 12 to indicate noon-to-noon driving hours."
                },
                "vehicle_id": {
                    "type": "integer",
                    "format": "int64",
                    "description":  "ID of the vehicle assigned to the driver for static vehicle assignments. (uncommon).",
                    "example": 444
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the group if the organization has multiple groups (uncommon).",
                    "example": 101
                }
            }
        },
        "DriverForCreate": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "password": {
                            "type": "string",
                            "description": "Driver's password for the driver app.",
                            "example": "mypassword"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/DriverBase"
                }
            ]
        },
        "Driver": {
            "allOf": [
                {
                    "type": "object",
                    "required": [
                        "id"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "ID of the driver.",
                            "example": 556
                        },
                        "isDeactivated": {
                            "type": "boolean",
                            "description": "True if the driver account has been deactivated."
                        }
                    }
                },
                {
                    "$ref": "#/definitions/DriverBase"
                }
            ]
        },
        "DriversRespose": {
            "type": "object",
            "properties": {
                "drivers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the driver.",
                                "example": 444
                            },
                            "name": {
                                "type": "string",
                                "description": "Name of the driver.",
                                "example": "Fred Jacobs"
                            }
                        }
                    }
                }
            }
        },
        "DriversSummaryResponse": {
          "type": "object",
          "properties": {
            "summaries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "driverId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the driver.",
                    "example": 444
                  },
                  "driverName": {
                    "type": "string",
                    "description": "Name of the driver.",
                    "example": "Fred Jacobs"
                  },
                  "driverUsername": {
                    "type": "string",
                    "description": "Username of the driver.",
                    "example": "fjacobs"
                  },
                  "groupId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Group of the driver.",
                    "example": 111
                  },
                  "activeHours": {
                    "type": "number",
                    "format": "float",
                    "description": "Hours spent on duty or driving, rounded to two decimal places.",
                    "example": 5.40
                  },
                  "distanceMiles": {
                    "type": "number",
                    "format": "float",
                    "description": "Distance driven in miles, rounded to two decimal places.",
                    "example": 123.24
                  }
                }
              }
            }
          }
        },
        "DriverDailyLogResponse": {
          "type": "object",
          "properties": {
            "summaries": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeHours": {
                    "type": "number",
                    "format": "float",
                    "description": "Hours spent on duty or driving, rounded to two decimal places.",
                    "example": 5.40
                  },
                  "certified": {
                    "type": "boolean",
                    "description": "Whether this HOS day chart was certified by the driver."
                  },
                  "certifiedAtMs": {
                    "type": "number",
                    "format": "int64",
                    "description": "Unix epoch time (in ms) of time when this chart was certified. If this chart is uncertified, 0."
                  },
                  "distanceMiles": {
                    "type": "number",
                    "format": "float",
                    "description": "Distance driven in miles, rounded to two decimal places.",
                    "example": 123.24
                  },
                  "startMs": {
                    "type": "integer",
                    "description": "End of the HOS day, specified in milliseconds UNIX time.",
                    "example": 1473750000000
                  },                  
                  "endMs": {
                    "type": "integer",
                    "description": "End of the HOS day, specified in milliseconds UNIX time.",
                    "example": 1473836400000
                  },
                  "trailerIds": {
                    "type": "object",
                    "format": "int64",
                    "description": "List of trailer ID's associated with the driver for the day.",
                    "example": [10293, 192933]
                  },
                  "vehicleIds": {
                    "type": "object",
                    "format": "int64",
                    "description": "List of vehicle ID's associated with the driver for the day.",
                    "example": [192319, 12958]
                  }
                }
              }
            }
          }
        },
        "HosLogsSummaryResponse": {
          "type": "object",
          "properties": {
            "drivers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "driverId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the driver.",
                    "example": 444
                  },
                  "driverName": {
                    "type": "string",
                    "description": "Name of the driver.",
                    "example": "Fred Jacobs"
                  },
                  "vehicleName": {
                    "type": "string",
                    "description": "Name of the vehicle.",
                    "example": "Vehicle 1"
                  },
                  "dutyStatus": {
                    "type": "string",
                    "description": "The Hours of Service status type. One of `OFF_DUTY`, `SLEEPER_BED`, `DRIVING`, `ON_DUTY`, `YARD_MOVE`, `PERSONAL_CONVEYANCE`.",
                    "example": "OFF_DUTY"
                  },
                  "timeInCurrentStatus": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of time (in ms) that the driver has been in the current `dutyStatus`.",
                    "example": 5000
                  },
                  "timeUntilBreak": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of time (in ms) remaining until the driver cannot drive without a rest break.",
                    "example": 28800000
                  },
                  "shiftDriveRemaining": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of remaining shift drive time (in ms).",
                    "example": 39600000
                  },
                  "shiftRemaining": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of remaining shift time (in ms).",
                    "example": 50400000
                  },
                  "cycleRemaining": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of remaining cycle time (in ms).",
                    "example": 252000000
                  },
                  "cycleTomorrow": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of cycle time (in ms) available tomorrow.",
                    "example": 252000000
                  },
                  "drivingInViolationToday": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of driving time in violation today (in ms).",
                    "example": 39600000
                  },
                  "drivingInViolationCycle": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The amount of driving time in violation in this cycle (in ms).",
                    "example": 50400000
                  }
                }
              }
            }
          }
        },
        "DvirListResponse": {
          "type": "object",
          "properties": {
            "dvirs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "inspectionType": {
                    "type": "string",
                    "description": "Inspection type of the DVIR.",
                    "example": "pre trip"
                  },
                  "vehicle": {
                    "type": "object",
                    "description": "The vehicle on which DVIR was done.",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The vehicle id on which DVIR was done.",
                            "example": 19
                        },
                        "name": {
                            "type": "string",
                            "description": "The vehicle on which DVIR was done.",
                            "example": "Storer's vehicle 19"
                        }
                    }
                  },
                  "vehicleDefects": {
                    "type": "array",
                    "description": "Defects registered for the vehicle which was part of the DVIR.",
                    "items" : {
                        "type" : "object",
                        "properties" : {
                            "defectType": {
                                "type": "string",
                                "description": "The type of DVIR defect",
                                "example": "Air Compressor"
                            },
                            "comment": {
                                "type": "string",
                                "description": "The comment describing the type of DVIR defect",
                                "example": "Air Compressor not working"
                            }
                        }
                    }
                  },
                  "odometerMiles": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The odometer reading in miles for the vehicle when the DVIR was done.",
                    "example": 49912
                  },
                  "trailerName": {
                    "type": "string",
                    "description": "The name of the trailer which was part of the DVIR.",
                    "example": "Storer's Trailer 19"
                  },
                  "trailerDefects": {
                    "type": "array",
                    "description": "Defects registered for the trailer which was part of the DVIR.",
                    "items" : {
                        "type" : "object",
                        "properties" : {
                            "defectType": {
                                "type": "string",
                                "description": "The type of DVIR defect",
                                "example": "Air Compressor"
                            },
                            "comment": {
                                "type": "string",
                                "description": "The comment describing the type of DVIR defect",
                                "example": "Air Compressor not working"
                            }
                        }
                    }
                  },
                  "mechanicNotes": {
                    "type": "string",
                    "description": "The mechanics notes on the DVIR.",
                    "example": "The vehicle is now safe."
                  },
                  "vehicleCondition": {
                    "type": "string",
                    "description": "The condition of vechile on which DVIR was done.",
                    "example": "SATISFACTORY"
                  },
                  "defectsCorrected": {
                    "type": "boolean",
                    "description": "Signifies if the defects on the vehicle corrected after the DVIR is done.",
                    "example": true
                  },
                  "defectsNeedNotBeCorrected": {
                    "type": "boolean",
                    "description": "Signifies if the defects on this vehicle can be ignored.",
                    "example": false
                  },
                  "authorSignature": {
                    "type": "object",
                    "description": "The authors signature for the DVIR.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type corresponds to whether the signature corresponds to driver|mechanic.",
                            "example": "driver"
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the driver or mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "username": {
                            "type": "string",
                            "description": "Username of the  driver|mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "email": {
                            "type": "string",
                            "description": "Email of the  driver|mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "signedAt": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The time in millis when the DVIR was signed",
                            "example": 12535500000 
                        }
                    }
                  },
                  "mechanicOrAgentSignature": {
                    "type": "object",
                    "description": "The mechanic's or agent's signature for the DVIR.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type corresponds to whether the signature corresponds to driver|mechanic.",
                            "example": "driver"
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the agent or mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "username": {
                            "type": "string",
                            "description": "Username of the  agent|mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "email": {
                            "type": "string",
                            "description": "Email of the  agent|mechanic who signed the DVIR.",
                            "example": "driver"
                        },
                        "signedAt": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The time in millis when the DVIR was signed",
                            "example": 12535500000 
                        }
                    }
                  },
                  "nextDriverSignature": {
                    "type": "object",
                    "description": "The next driver signature for the DVIR.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Type corresponds to driver.",
                            "example": "driver"
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the driver who signed the next DVIR on this vehicle.",
                            "example": "driver"
                        },
                        "username": {
                            "type": "string",
                            "description": "Username of the  driver who signed the next DVIR on this vehicle.",
                            "example": "driver"
                        },
                        "email": {
                            "type": "string",
                            "description": "Email of the  driver who signed the next DVIR on this vehicle.",
                            "example": "driver"
                        },
                        "signedAt": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The time in millis when the next driver signed the DVIR on this vehicle.",
                            "example": 12535500000 
                        }
                    }
                  }
                }
              }
            }
          }
        },
        "HosLogsResponse": {
          "type": "object",
            "properties": {
                "logs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "groupId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the group.",
                                "example": 101
                            },
                            "vehicleId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the vehicle.",
                                "example": 112
                            },
                            "driverId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "ID of the driver.",
                                "example": 444
                            },
                            "logStartMs": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The time at which the log/HOS status started in UNIX milliseconds.",
                                "example": 1462881998034
                            },
                            "statusType": {
                                "type": "string",
                                "description": "The Hours of Service status type. One of `OFF_DUTY`, `SLEEPER_BED`, `DRIVING`, `ON_DUTY`, `YARD_MOVE`, `PERSONAL_CONVEYANCE`.",
                                "example": "OFF_DUTY"
                            },
                            "locCity": {
                                "type": "string",
                                "description": "City in which the log was recorded.",
                                "example": "Ahwatukee"
                            },
                            "locState": {
                                "type": "string",
                                "description": "State in which the log was recorded.",
                                "example": "Arizona"
                            },
                            "locLat": {
                                "type": "number",
                                "format": "float",
                                "description": "Latitude at which the log was recorded.",
                                "example": 23.413702345
                            },
                            "locLng": {
                                "type": "number",
                                "format": "float",
                                "description": "Longitude at which the log was recorded.",
                                "example": -98.502888123
                            },
                            "locName": {
                                "type": "string",
                                "description": "Name of location at which the log was recorded.",
                                "example": "McLean Site A"
                            }
                        }
                    }
                }
            }
        },
        "HosAuthenticationLogsResponse": {
            "type": "object",
            "properties": {
                "authenticationLogs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "actionType": {
                                "type": "string",
                                "description": "The log type - one of 'signin' or 'signout'",
                                "example": "signin"
                            },
                            "happenedAtMs": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The time at which the event was recorded in UNIX milliseconds.",
                                "example": 1462881998034
                            },
                            "city": {
                                "type": "string",
                                "description": "City in which the log was recorded, if applicable.",
                                "example": "Ahwatukee"
                            },
                            "state": {
                                "type": "string",
                                "description": "State in which the log was recorded, if applicable.",
                                "example": "Arizona"
                            },
                            "addressName": {
                                "type": "string",
                                "description": "Address name from the group address book at which the log was recorded, if applicable.",
                                "example": "Garage Number 3"
                            },
                            "address": {
                                "type": "string",
                                "description": "Address at which the log was recorded, if applicable.",
                                "example": "123 Main St., Ahwatukee, Arizona 85044"
                            }
                        }
                    }
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "description": "Contains the error response when a request fails.",
            "properties": {
                "status_code": {
                    "type": "integer",
                    "description": "HTTP status code returned.",
                    "format": "int64"
                },
                "message": {
                    "type": "string",
                    "description": "Error message returned."
                }
            }
        },
        "SensorHistoryResponse": {
            "type": "object",
            "description": "Contains the results for a sensor history request. Each result contains a timestamp and datapoint for each requested (sensor, field) pair.",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "timeMs": {
                                "type": "integer",
                                "description": "Timestamp in UNIX milliseconds.",
                                "example": 1453449599999
                            },
                            "series": {
                                "type": "array",
                                "description": "List of datapoints, one for each requested (sensor, field) pair.",
                                "items": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 1
                                }
                            }
                        }
                    }
                }
            }
        },
        "TaggedVehicleBase": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the Vehicle being tagged.",
                    "example": 123
                }
            }
        },
        "TaggedVehicle": {
            "allOf": [
                {
                    "$ref": "#/definitions/TaggedVehicleBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the Vehicle being tagged.",
                            "example": "Heavy Duty 123"
                        }
                    }
                }
            ]
        },
        "TaggedDriverBase": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the Driver being tagged.",
                    "example": 456
                }
            }
        },
        "TaggedDriver": {
            "allOf": [
                {
                    "$ref": "#/definitions/TaggedDriverBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the Driver being tagged.",
                            "example": "John Smith"
                        }
                    }
                }
            ]
        },
        "TaggedAssetBase": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the Asset being tagged.",
                    "example": 789
                }
            }
        },
        "TaggedAsset": {
            "allOf": [
                {
                    "$ref": "#/definitions/TaggedAssetBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the Asset being tagged.",
                            "example": "Trailer 789"
                        }
                    }
                }
            ]
        },
        "TaggedMachineBase": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the Machine being tagged.",
                    "example": 567
                }
            }
        },
        "TaggedMachine": {
            "allOf": [
                {
                    "$ref": "#/definitions/TaggedMachineBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the Machine being tagged.",
                            "example": "Vibration Monitor 567"
                        }
                    }
                }
            ]
        },
        "TaggedSensorBase": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The ID of the Sensor being tagged.",
                    "example": 345
                }
            }
        },
        "TaggedSensor": {
            "allOf": [
                {
                    "$ref": "#/definitions/TaggedSensorBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of the Sensor being tagged.",
                            "example": "Temperature Sensor 345"
                        }
                    }
                }
            ]
        },
        "TagCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of this tag.",
                    "example": "Broken Vehicles"
                },
                "vehicles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaggedVehicleBase"
                    },
                    "description": "The vehicles that belong to this tag."
                },
                "drivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaggedDriverBase"
                    },
                    "description": "The drivers that belong to this tag."
                },
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaggedAssetBase"
                    },
                    "description": "The assets that belong to this tag."
                },
                "machines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaggedMachineBase"
                    },
                    "description": "The machines that belong to this tag."
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaggedSensorBase"
                    },
                    "description": "The sensors that belong to this tag."
                }
            }
        },
        "TagUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Updated name of this tag.",
                    "example": "Broken Vehicles"
                },
                "vehicles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaggedVehicleBase"
                    },
                    "description": "The vehicles that belong to this tag."
                },
                "drivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaggedDriverBase"
                    },
                    "description": "The drivers that belong to this tag."
                },
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaggedAssetBase"
                    },
                    "description": "The assets that belong to this tag."
                },
                "machines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaggedMachineBase"
                    },
                    "description": "The machines that belong to this tag."
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaggedSensorBase"
                    },
                    "description": "The sensors that belong to this tag."
                }
            }
        },
        "Tag": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The ID of this tag.",
                        "example": 12345
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of this tag.",
                        "example": "Broken Vehicles"
                    },
                    "vehicles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/TaggedVehicle"
                        },
                        "description": "The vehicles that belong to this tag."
                    },
                    "drivers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/TaggedDriver"
                        },
                        "description": "The drivers that belong to this tag."
                    },
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/TaggedAsset"
                        },
                        "description": "The assets that belong to this tag."
                    },
                    "machines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/TaggedMachine"
                        },
                        "description": "The machines that belong to this tag."
                    },
                    "sensors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/TaggedSensor"
                        },
                        "description": "The sensors that belong to this tag."
                    }
                }
        },
        "DispatchJobCreate": {
            "type": "object",
            "required": [
                "scheduled_arrival_time_ms",
                "destination_lat",
                "destination_lng"
            ],
            "properties": {
                "scheduled_arrival_time_ms": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The time at which the assigned driver is scheduled to arrive at the job destination.",
                    "example": 1462881998034
                },
                "notes": {
                    "type": "string",
                    "description": "Notes regarding the details of this job.",
                    "example": "Ensure crates are stacked no more than 3 high."
                },
                "destination_name": {
                    "type": "string",
                    "description": "The name of the job destination.",
                    "example": "ACME Inc. Philadelphia HQ"
                },
                "destination_address": {
                    "type": "string",
                    "description": "The address of the job destination, as it would be recognized if provided to maps.google.com",
                    "example": "123 Main St, Philadelphia, PA 19106"
                },
                "destination_lat": {
                    "type": "number",
                    "format": "float",
                    "description": "Latitude of the destination in decimal degrees.",
                    "example": 123.456
                },
                "destination_lng": {
                    "type": "number",
                    "format": "float",
                    "description": "Latitude of the destination in decimal degrees.",
                    "example": 37.459
                }
            }
        },
        "prevJobStatus": {
            "type": "string",
            "enum": [
                "JobState_Unassigned",
                "JobState_Scheduled",
                "JobState_EnRoute",
                "JobState_Arrived",
                "JobState_Completed",
                "JobState_Skipped"
            ],
            "description": "The previous state of the dispatch job.",
            "example": "JobState_EnRoute"
        },
        "jobStatus": {
            "type": "string",
            "enum": [
                "JobState_Unassigned",
                "JobState_Scheduled",
                "JobState_EnRoute",
                "JobState_Arrived",
                "JobState_Completed",
                "JobState_Skipped"
            ],
            "description": "The current state of the dispatch job.",
            "example": "JobState_Arrived"
        },
        "DispatchJob": {
            "allOf": [
                {
                    "type": "object",
                    "required": [
                        "id",
                        "group_id",
                        "dispatch_route_id",
                        "job_state"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "ID of the Samsara dispatch job.",
                            "example": 773
                        },
                        "group_id": {
                            "type": "integer",
                            "format": "int64",
                            "example": 101
                        },
                        "dispatch_route_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "ID of the route that this job belongs to.",
                            "example": 55
                        },
                        "driver_id": {
                            "type": "integer",
                            "format": "int64",
                            "description":  "ID of the driver assigned to the dispatch job.",
                            "example": 444
                        },
                        "vehicle_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "ID of the vehicle used for the dispatch job.",
                            "example": 112
                        },
                        "job_state": {
                            "$ref": "#/definitions/jobStatus"
                        },
                        "en_route_at_ms": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The time at which the assigned driver started fulfilling the job (e.g. started driving to the destination).",
                            "example": 1462881998034
                        },
                        "arrived_at_ms": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The time at which the driver arrived at the job destination.",
                            "example": 1462881998034
                        },
                        "completed_at_ms": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The time at which the job was marked complete (e.g. started driving to the next destination).",
                            "example": 1462881998034
                        },
                        "skipped_at_ms": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The time at which the job was marked skipped.",
                            "example": 1462881998034
                        }
                    }
                },
                {
                    "$ref": "#/definitions/DispatchJobCreate"
                }
            ]
        },
        "DispatchRouteBase": {
            "type": "object",
            "required": [
                "name",
                "scheduled_start_ms",
                "scheduled_end_ms",
                "start_location_lat",
                "start_location_lng"
            ],
            "properties": {
                "vehicle_id": {
                    "type": "integer",
                    "format": "int64",
                    "description":  "ID of the vehicle assigned to the dispatch route. Note that vehicle_id and driver_id are mutually exclusive. If neither is specified, then the route is unassigned.",
                    "example": 444
                },
                "driver_id": {
                    "type": "integer",
                    "format": "int64",
                    "description":  "ID of the driver assigned to the dispatch route. Note that driver_id and vehicle_id are mutually exclusive. If neither is specified, then the route is unassigned.",
                    "example": 555
                },
                "scheduled_start_ms": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The time in Unix epoch milliseconds that the route is scheduled to start.",
                    "example": 1462881998034
                },
                "scheduled_end_ms": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The time in Unix epoch milliseconds that the last job in the route is scheduled to end.",
                    "example": 1462881998034
                },
                "name": {
                    "type": "string",
                    "description": "Descriptive name of this route.",
                    "example": "Bid #123"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the group if the organization has multiple groups (optional).",
                    "example": 101
                },
                "start_location_name": {
                    "type": "string",
                    "description": "The name of the route's starting location.",
                    "example": "ACME Inc. Philadelphia HQ"
                },
                "start_location_address": {
                    "type": "string",
                    "description": "The address of the route's starting location, as it would be recognized if provided to maps.google.com",
                    "example": "123 Main St, Philadelphia, PA 19106"
                },
                "start_location_lat": {
                    "type": "number",
                    "format": "float",
                    "description": "Latitude of the destination in decimal degrees.",
                    "example": 123.456
                },
                "start_location_lng": {
                    "type": "number",
                    "format": "float",
                    "description": "Latitude of the destination in decimal degrees.",
                    "example": 37.459
                }
            }
        },
        "DispatchRouteCreate": {
            "allOf": [
                {
                    "type": "object",
                    "required": [
                        "dispatch_jobs"
                    ],
                    "properties": {
                        "dispatch_jobs": {
                            "description": "The dispatch jobs to create for this route.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DispatchJobCreate"
                            }
                        }
                    }
                },
                {
                    "$ref": "#/definitions/DispatchRouteBase"
                }
            ]
        },
        "DispatchRoute": {
            "allOf": [
                {
                    "type": "object",
                    "required": [
                        "id",
                        "dispatch_jobs"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "ID of the Samsara dispatch route.",
                            "example": 556
                        },
                        "dispatch_jobs": {
                            "description": "The dispatch jobs associated with this route.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DispatchJob"
                            }
                        }
                    }
                },
                {
                    "$ref": "#/definitions/DispatchRouteBase"
                }
            ]
        },
        "DispatchRoutes": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/DispatchRoute"
            }
        },
        "jobUpdateObject": {
            "type": "object",
            "properties": {
                "changed_at_ms": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Timestamp that this event was updated, represented as Unix milliseconds since epoch.",
                    "example": 1462881998034
                },
                "route_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the Samsara dispatch route.",
                    "example": 556
                },
                "job_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ID of the Samsara job.",
                    "example": 773
                },
                "prev_job_state": {
                    "$ref": "#/definitions/prevJobStatus",
                },
                "job_state": {
                    "$ref": "#/definitions/jobStatus"
                },
                "route": {
                    "$ref": "#/definitions/DispatchRoute"
                }
            }
        },
        "allRouteJobUpdates": {
            "type": "object",
            "properties": {
                "job_updates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jobUpdateObject"
                    }
                },
                "event_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Event ID of the latest event update returned in the response",
                    "example": 28723
                }
            }
        },
        "DispatchRouteHistoricalEntry": {
            "type": "object",
            "properties": {
                "changed_at_ms": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Timestamp that the route was updated, represented as Unix milliseconds since epoch.",
                    "example": 1499411220000
                },
                "route": {
                    "$ref": "#/definitions/DispatchRoute"
                }
            }
        },
        "DispatchRouteHistory": {
            "type": "object",
            "properties": {
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DispatchRouteHistoricalEntry"
                    },
                    "description":  "History of the route's state changes."
                }
            }
        },
        "DataInputHistoryResponse": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description":"The ID of this data input",
                    "example": 12345
                },
                "name": {
                    "type": "string",
                    "description":"Name of this data input",
                    "example":"Pump Flow"
                },
                "points": {
                    "type": "array",
                    "description": "Data points from this data input",
                    "items": {
                        "type": "object",
                        "properties": {
                            "timeMs":{
                                "type":"integer",
                                "format": "int64",
                                "example": 1453449599999
                            },
                            "value":{
                                "type":"number",
                                "format": "float",
                                "example": 12.332
                            }
                        }
                    }
                }
            }
        },
        "Machine": {
            "type": "object",
            "description": "Contains information about a machine.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the machine.",
                    "format": "int64",
                    "example": 123
                },
                "name": {
                    "type": "string",
                    "description": "Name of the machine.",
                    "example": "Freezer ABC"
                },
                "notes": {
                    "type": "string",
                    "description": "Notes about the machine",
                    "example": "This is in the left hallway behind the conveyor belt"
                }
            }
        },
        "MachineHistoryResponse": {
            "type": "object",
            "description": "Contains the results for a machine history request",
            "properties": {
                "machines": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "description": "Machine ID",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "description": "Machine name",
                                "example": "1/3 HP Motor"
                            },
                            "vibrations": {
                                "type": "array",
                                "description": "List of vibration datapoints, with timestamp and vibration measurement for x/y/z axis in mm/s",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "time": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1453449599999
                                        },
                                        "X": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0.01
                                        },
                                        "Y": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 1.23
                                        },
                                        "Z": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 2.55
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Asset": {
            "type": "object",
            "description": "Basic information of an asset",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Asset ID",
                    "format": "int64",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "description": "Asset name",
                    "example": "Trailer 123"
                },
                "engineHours": {
                    "type": "integer",
                    "description": "Engine hours",
                    "example": "104"
                },
                "cable": {
                    "type": "array",
                    "description": "The cable connected to the asset",
                    "items": {
                        "type": "object",
                        "properties": {
                            "assetType": {
                                "type": "string",
                                "description": "Asset type",
                                "example": "Reefer (Thermo King)"
                            }
                        }
                    }
                }
            }
        },
        "AssetCurrentLocationsResponse": {
            "type": "object",
            "description": "Basic information of an asset",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Asset ID",
                    "format": "int64",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "description": "Asset name",
                    "example": "Trailer 123"
                },
                "engineHours": {
                    "type": "integer",
                    "description": "Engine hours",
                    "example": "104"
                },
                "cable": {
                    "type": "array",
                    "description": "The cable connected to the asset",
                    "items": {
                        "type": "object",
                        "properties": {
                            "assetType": {
                                "type": "string",
                                "description": "Asset type",
                                "example": "Reefer (Thermo King)"
                            }
                        }
                    }
                },
                "location": {
                    "type": "array",
                    "description": "Current location of an asset",
                    "items": {
                        "$ref": "#/definitions/AssetCurrentLocation"
                    }
                }
            }
        },
        "AssetCurrentLocation": {
            "type": "object",
            "description": "Current location of an asset",
            "required": [
                "id"
            ],
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The best effort (street,city,state) for the latitude and longitude.",
                    "example": "525 York, San Francisco, CA"
                },
                "latitude": {
                    "type": "number",
                    "description": "The latitude of the location in degrees.",
                    "example": "37"
                },
                "longitude": {
                    "type": "number",
                    "description": "The longitude of the location in degrees.",
                    "example": "-122"
                },
                "speedMilesPerHour": {
                    "type": "number",
                    "description": "The speed calculated from GPS that the asset was traveling at in miles per hour.",
                    "example": "35"
                },
                "timeMs": {
                    "type": "number",
                    "description": "Time in Unix milliseconds since epoch when the asset was at the location.",
                    "example": "12314151"
                }
            }
        },
        "AssetReeferResponse": {
            "type": "object",
            "description": "Reefer-specific asset details",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Asset ID",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "description": "Asset name",
                    "example": "Reefer 123"
                },
                "assetType": {
                    "type": "string",
                    "description": "Asset type",
                    "example": "Reefer (Thermo King)"
                },
                "reeferStats": {
                    "type": "object",
                    "properties": {
                        "alarms": {
                            "type": "array",
                            "description": "Reefer alarms",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "changedAtMs": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Timestamp when the alarms were reported, in Unix milliseconds since epoch",
                                        "example": 1453449599999
                                    },
                                    "alarms": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "alarmCode": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "ID of the alarm",
                                                    "example": 102
                                                },
                                                "severity": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "description": "Severity of the alarm: 1: OK to run, 2: Check as specified, 3: Take immediate action",
                                                    "example": 1
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "description": "Description of the alarm",
                                                    "example": "Check Return Air Sensor"
                                                },
                                                "operatorAction": {
                                                    "type": "string",
                                                    "description": "Recommended operator action",
                                                    "example": "Check and repair at end of trip"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "engineHours": {
                            "type": "array",
                            "description": "Engine hours of the reefer",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "changedAtMs": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Timestamp in Unix milliseconds since epoch.",
                                        "example": 1453449599999
                                    },
                                    "engineHours": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Engine hours of the reefer.",
                                        "example": 1200
                                    }
                                }
                            }
                        },
                        "fuelPercentage": {
                            "type": "array",
                            "description": "Fuel percentage of the reefer",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "changedAtMs": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Timestamp in Unix milliseconds since epoch.",
                                        "example": 1453449599999
                                    },
                                    "fuelPercentage": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Fuel percentage of the reefer.",
                                        "example": 99
                                    }
                                }
                            }
                        },
                        "powerStatus": {
                            "type": "array",
                            "description": "Power status of the reefer",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "changedAtMs": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Timestamp in Unix milliseconds since epoch.",
                                        "example": 1453449599999
                                    },
                                    "status": {
                                        "type": "string",
                                        "description": "Power status of the reefer.",
                                        "example": "Active (Continuous)"
                                    }
                                }
                            }
                        },
                        "returnAirTemp": {
                            "type": "array",
                            "description": "Return air temperature of the reefer",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "changedAtMs": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Timestamp in Unix milliseconds since epoch.",
                                        "example": 1453449599999
                                    },
                                    "tempInMilliC": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Return air temperature in millidegree Celsius.",
                                        "example": 31110
                                    }
                                }
                            }
                        },
                        "setPoint": {
                            "type": "array",
                            "description": "Set point temperature of the reefer",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "changedAtMs": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Timestamp in Unix milliseconds since epoch.",
                                        "example": 1453449599999
                                    },
                                    "tempInMilliC": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Set point temperature in millidegree Celsius.",
                                        "example": 31110
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "AssetLocationResponse": {
            "type": "array",
            "description": "A list of historical asset locations.",
            "items": {
                "type": "object",
                "description": "Asset location details.",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The best effort (street,city,state) for the latitude and longitude.",
                        "example": "525 York, San Francisco, CA"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "The latitude of the location in degrees.",
                        "example": "37"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "The longitude of the location in degrees.",
                        "example": "-122"
                    },
                    "speedMilesPerHour": {
                        "type": "number",
                        "description": "The speed calculated from GPS that the asset was traveling at in miles per hour.",
                        "example": "35"
                    },
                    "time": {
                        "type": "number",
                        "description": "Time in Unix milliseconds since epoch when the asset was at the location.",
                        "example": "12314151"
                    }
                }
            }
        }
    },
    "parameters": {
        "accessTokenParam": {
            "name": "access_token",
            "description": "Samsara API access token.",
            "required": true,
            "in": "query",
            "type": "string"
        },
        "groupParam": {
            "name": "groupParam",
            "description": "Group ID to query.",
            "required": true,
            "in": "body",
            "schema": {
                "type": "object",
                "required": [
                    "groupId"
                ],
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Group ID to query.",
                        "format": "int64",
                        "example": 101
                    }
                }
            }
        },
        "sensorParam": {
            "name": "sensorParam",
            "description": "Group ID and list of sensor IDs to query.",
            "required": true,
            "in": "body",
            "schema": {
                "type": "object",
                "required": [
                    "groupId",
                    "sensors"
                ],
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "Group ID to query.",
                        "format": "int64",
                        "example": 101
                    },
                    "sensors": {
                        "type": "array",
                        "description": "List of sensor IDs to query.",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": [
                            122
                        ]
                    }
                }
            }
        },
        "reactivateDriverParam": {
            "name": "reactivateDriverParam",
            "description": "Driver reactivation body",
            "required": true,
            "in": "body",
            "schema": {
                "type": "object",
                "required": [
                    "reactivate"
                ],
                "properties": {
                    "reactivate": {
                        "type": "boolean",
                        "description": "True indicates that this driver should be reactivated."
                    }
                }
            }
        },
        "createDriverParam": {
            "name": "createDriverParam",
            "description": "Driver creation body",
            "required": true,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/DriverForCreate"
            }
        },
        "routeCreateParam": {
            "name": "createDispatchRouteParams",
            "required": true,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/DispatchRouteCreate"
            }
        },
        "routeUpdateParam": {
            "name": "updateDispatchRouteParams",
            "required": true,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/DispatchRoute"
            }
        },
        "routeEndTimeParam": {
            "name": "end_time",
            "description": "Time in unix milliseconds that represents the oldest routes to return. Used in combination with duration. Defaults to now.",
            "required": false,
            "in": "query",
            "type": "integer",
            "format": "int64"
        },
        "lastReceivedEventIDParam": {
            "name": "last_event_id_received",
            "description": "Event ID of the last event from where updates should be shared. Defaults to fetching updates from last 24 hours.",
            "required": false,
            "in": "query",
            "type": "integer",
            "format": "int64"
        },
        "routeDurationParam": {
            "name": "duration",
            "description": "Time in milliseconds that represents the duration before end_time to query. Defaults to 24 hours.",
            "required": false,
            "in": "query",
            "type": "integer",
            "format": "int64"
        },
        "routeHistoryStartTimeParam": {
            "name": "start_time",
            "description": "Timestamp representing the start of the period to fetch, inclusive. Used in combination with end_time. Defaults to 0.",
            "required": false,
            "in": "query",
            "type": "integer",
            "format": "int64"
        },
        "routeHistoryEndTimeParam": {
            "name": "end_time",
            "description": "Timestamp representing the end of the period to fetch, inclusive. Used in combination with start_time. Defaults to nowMs.",
            "required": false,
            "in": "query",
            "type": "integer",
            "format": "int64"
        },
        "groupIdParam": {
            "name": "group_id",
            "description": "Optional group ID if the organization has multiple groups (uncommon).",
            "required": false,
            "in": "query",
            "type": "integer",
            "format": "int64"
        },
        "tagCreateParam": {
            "name": "tagCreateParams",
            "required": true,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/TagCreate"
            }
        },
        "tagUpdateParam": {
            "name": "updateTagParams",
            "required": true,
            "in": "body",
            "schema": {
                "$ref": "#/definitions/TagUpdate"
            }
        },
        "assetHistoryEndTimeParam": {
            "name": "endMs",
            "description": "Timestamp in milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs.",
            "required": true,
            "in": "query",
            "type": "integer",
            "format": "int64"
        },
        "assetHistoryStartTimeParam": {
            "name": "startMs",
            "description": "Timestamp in milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs.",
            "required": true,
            "in": "query",
            "type": "integer",
            "format": "int64"
        },
        "assetIdParam": {
            "name": "asset_id",
            "in": "path",
            "required": true,
            "description": "ID of the asset",
            "type": "integer",
            "format": "int64"
        },
        "dataInputIdParam": {
            "name": "data_input_id",
            "in": "path",
            "required": true,
            "description": "ID of the data input",
            "type": "integer",
            "format": "int64"
        },
        "dataInputEndTimeParam": {
            "name": "endMs",
            "description": "Timestamp in unix milliseconds representing the end of the period to fetch, inclusive. Used in combination with startMs. Defaults to nowMs.",
            "required": false,
            "in": "query",
            "type": "integer",
            "format": "int64"
        },
        "dataInputStartTimeParam": {
            "name": "startMs",
            "description": "Timestamp in unix milliseconds representing the start of the period to fetch, inclusive. Used in combination with endMs. defaults to nowMs.",
            "required": false,
            "in": "query",
            "type": "integer",
            "format": "int64"
        }
    }
}
